<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20242.24.0807.0327                               -->
<workbook original-version='18.1' source-build='2024.2.2 (20242.24.0807.0327)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <DashboardGridOverlay />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Sheet1 (table 1)' inline='true' name='federated.12gwfzy1mh67yg116ljvm1eptnfu' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='table 1' name='excel-direct.0ome1hw0zy6b2414oh84b0vjaeo9'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Navii/Desktop/Data_Analysis_Projects/Data_Analysis/Tableau/Covid tableau data viz/table 1.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0ome1hw0zy6b2414oh84b0vjaeo9' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='total_cases' ordinal='0' />
            <column datatype='integer' name='total_deaths' ordinal='1' />
            <column datatype='real' name='death_percent' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0ome1hw0zy6b2414oh84b0vjaeo9' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
            <column datatype='integer' name='total_cases' ordinal='0' />
            <column datatype='integer' name='total_deaths' ordinal='1' />
            <column datatype='real' name='death_percent' ordinal='2' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:C2:no:A1:C2:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_6A6299FC81CB4F19B3526CA09B8419AE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_6A6299FC81CB4F19B3526CA09B8419AE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>death_percent</remote-name>
            <remote-type>5</remote-type>
            <local-name>[death_percent]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>death_percent</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_6A6299FC81CB4F19B3526CA09B8419AE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_6A6299FC81CB4F19B3526CA09B8419AE]' role='measure' type='quantitative' />
      <column caption='Death Percent' datatype='real' name='[death_percent]' role='measure' type='quantitative' />
      <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' author-locale='en_GB' class='hyper' dbname='C:/Users/Navii/AppData/Local/Temp/TableauTemp/#TableauTemp_0e76kk21suiuo11eorwvk0enqevp.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='09/02/2024 10:16:47 AM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>total_cases</remote-name>
              <remote-type>20</remote-type>
              <local-name>[total_cases]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_cases</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_6A6299FC81CB4F19B3526CA09B8419AE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_deaths</remote-name>
              <remote-type>20</remote-type>
              <local-name>[total_deaths]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_deaths</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_6A6299FC81CB4F19B3526CA09B8419AE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>death_percent</remote-name>
              <remote-type>5</remote-type>
              <local-name>[death_percent]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>death_percent</remote-alias>
              <ordinal>2</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_6A6299FC81CB4F19B3526CA09B8419AE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Philippines&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_6A6299FC81CB4F19B3526CA09B8419AE'>
            <properties context=''>
              <relation connection='excel-direct.0ome1hw0zy6b2414oh84b0vjaeo9' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:C2:no:A1:C2:0' header='yes' outcome='6'>
                  <column datatype='integer' name='total_cases' ordinal='0' />
                  <column datatype='integer' name='total_deaths' ordinal='1' />
                  <column datatype='real' name='death_percent' ordinal='2' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (table 2)' inline='true' name='federated.1wbk00s0u14sop1andf38108o5b8' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='table 2' name='excel-direct.02q8lrt1fmhz871ar72hw0kmez72'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Navii/Desktop/Data_Analysis_Projects/Data_Analysis/Tableau/Covid tableau data viz/table 2.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.02q8lrt1fmhz871ar72hw0kmez72' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='total_death_count' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.02q8lrt1fmhz871ar72hw0kmez72' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='total_death_count' ordinal='1' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B7:no:A1:B7:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_3732D4F4F0944E439123CF3EF83742AE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_death_count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_death_count]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_death_count</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_3732D4F4F0944E439123CF3EF83742AE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_3732D4F4F0944E439123CF3EF83742AE]' role='measure' type='quantitative' />
      <column caption='Continent' datatype='string' name='[location]' role='dimension' type='nominal' />
      <column caption='Total Death Count' datatype='integer' name='[total_death_count]' role='measure' type='quantitative' />
      <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' author-locale='en_GB' class='hyper' dbname='C:/Users/Navii/AppData/Local/Temp/TableauTemp/#TableauTemp_0ctd6jx12t9dkv11rgfah0aqgm6k.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='09/02/2024 10:17:40 AM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_3732D4F4F0944E439123CF3EF83742AE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>total_death_count</remote-name>
              <remote-type>20</remote-type>
              <local-name>[total_death_count]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>total_death_count</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_3732D4F4F0944E439123CF3EF83742AE]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:location:nk]' palette='gray_10_0' type='palette'>
            <map to='#49525e'>
              <bucket>&quot;Europe&quot;</bucket>
            </map>
            <map to='#616c77'>
              <bucket>&quot;North America&quot;</bucket>
            </map>
            <map to='#6e7a81'>
              <bucket>&quot;South America&quot;</bucket>
            </map>
            <map to='#8b9598'>
              <bucket>&quot;Asia&quot;</bucket>
            </map>
            <map to='#acb0b1'>
              <bucket>&quot;Africa&quot;</bucket>
            </map>
            <map to='#d5d5d5'>
              <bucket>&quot;Oceania&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Philippines&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_3732D4F4F0944E439123CF3EF83742AE'>
            <properties context=''>
              <relation connection='excel-direct.02q8lrt1fmhz871ar72hw0kmez72' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:B7:no:A1:B7:0' header='yes' outcome='6'>
                  <column datatype='string' name='location' ordinal='0' />
                  <column datatype='integer' name='total_death_count' ordinal='1' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (table 3)' inline='true' name='federated.0226o701cliouo1gde4gh096qkwx' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='table 3' name='excel-direct.0uuepk116fz1971azm77h00kpjyy'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Navii/Desktop/Data_Analysis_Projects/Data_Analysis/Tableau/Covid tableau data viz/table 3.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0uuepk116fz1971azm77h00kpjyy' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D211:no:A1:D211:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='population' ordinal='1' />
            <column datatype='integer' name='highest_infection_count' ordinal='2' />
            <column datatype='real' name='infection_rate' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0uuepk116fz1971azm77h00kpjyy' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D211:no:A1:D211:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='population' ordinal='1' />
            <column datatype='integer' name='highest_infection_count' ordinal='2' />
            <column datatype='real' name='infection_rate' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D211:no:A1:D211:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_C4043C0354C242DD9CBFC0625BF8AB84]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_C4043C0354C242DD9CBFC0625BF8AB84]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>highest_infection_count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[highest_infection_count]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>highest_infection_count</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_C4043C0354C242DD9CBFC0625BF8AB84]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>infection_rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[infection_rate]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>infection_rate</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_C4043C0354C242DD9CBFC0625BF8AB84]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_C4043C0354C242DD9CBFC0625BF8AB84]' role='measure' type='quantitative' />
      <column caption='Highest Infection Count' datatype='integer' name='[highest_infection_count]' role='measure' type='quantitative' />
      <column caption='Infection Rate' datatype='real' name='[infection_rate]' role='measure' type='quantitative' />
      <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' author-locale='en_GB' class='hyper' dbname='C:/Users/Navii/AppData/Local/Temp/TableauTemp/#TableauTemp_1itk9ee1hq2qx512jns381dma90j.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='09/02/2024 10:17:51 AM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>210</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_C4043C0354C242DD9CBFC0625BF8AB84]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>population</remote-name>
              <remote-type>20</remote-type>
              <local-name>[population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>population</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>210</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_C4043C0354C242DD9CBFC0625BF8AB84]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>highest_infection_count</remote-name>
              <remote-type>20</remote-type>
              <local-name>[highest_infection_count]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>highest_infection_count</remote-alias>
              <ordinal>2</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>190</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_C4043C0354C242DD9CBFC0625BF8AB84]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>infection_rate</remote-name>
              <remote-type>5</remote-type>
              <local-name>[infection_rate]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>infection_rate</remote-alias>
              <ordinal>3</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>191</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_C4043C0354C242DD9CBFC0625BF8AB84]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Philippines&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_C4043C0354C242DD9CBFC0625BF8AB84'>
            <properties context=''>
              <relation connection='excel-direct.0uuepk116fz1971azm77h00kpjyy' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:D211:no:A1:D211:0' header='yes' outcome='6'>
                  <column datatype='string' name='location' ordinal='0' />
                  <column datatype='integer' name='population' ordinal='1' />
                  <column datatype='integer' name='highest_infection_count' ordinal='2' />
                  <column datatype='real' name='infection_rate' ordinal='3' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (table 4)' inline='true' name='federated.1un4yn307f0iod15swtfe1pp2ubu' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='table 4' name='excel-direct.12324y304n0e2c1gk3p8q0xqozhg'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Navii/Desktop/Data_Analysis_Projects/Data_Analysis/Tableau/Covid tableau data viz/table 4.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.12324y304n0e2c1gk3p8q0xqozhg' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='population' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='highest_infection_count' ordinal='3' />
            <column datatype='real' name='infection_rate' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.12324y304n0e2c1gk3p8q0xqozhg' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
            <column datatype='string' name='location' ordinal='0' />
            <column datatype='integer' name='population' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='highest_infection_count' ordinal='3' />
            <column datatype='real' name='infection_rate' ordinal='4' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:E10001:no:A1:E10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_A29B5D293D0641FA98A86E1D10C6210E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_A29B5D293D0641FA98A86E1D10C6210E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_A29B5D293D0641FA98A86E1D10C6210E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>highest_infection_count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[highest_infection_count]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>highest_infection_count</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_A29B5D293D0641FA98A86E1D10C6210E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>infection_rate</remote-name>
            <remote-type>5</remote-type>
            <local-name>[infection_rate]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>infection_rate</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_A29B5D293D0641FA98A86E1D10C6210E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_A29B5D293D0641FA98A86E1D10C6210E]' role='measure' type='quantitative' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Highest Infection Count' datatype='integer' name='[highest_infection_count]' role='measure' type='quantitative' />
      <column caption='Infection Rate' datatype='real' name='[infection_rate]' role='measure' type='quantitative' />
      <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
      <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' author-locale='en_GB' class='hyper' dbname='C:/Users/Navii/AppData/Local/Temp/TableauTemp/#TableauTemp_102nmx91clzkr61bja4mn128l2bh.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='09/02/2024 10:18:12 AM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location</remote-alias>
              <ordinal>0</ordinal>
              <family>Sheet1</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>245</approx-count>
              <contains-null>true</contains-null>
              <collation flag='1' name='LEN_RUS_S2' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_A29B5D293D0641FA98A86E1D10C6210E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>population</remote-name>
              <remote-type>20</remote-type>
              <local-name>[population]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>population</remote-alias>
              <ordinal>1</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>245</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_A29B5D293D0641FA98A86E1D10C6210E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>date</remote-name>
              <remote-type>133</remote-type>
              <local-name>[date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>date</remote-alias>
              <ordinal>2</ordinal>
              <family>Sheet1</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>1158</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_A29B5D293D0641FA98A86E1D10C6210E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>highest_infection_count</remote-name>
              <remote-type>20</remote-type>
              <local-name>[highest_infection_count]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>highest_infection_count</remote-alias>
              <ordinal>3</ordinal>
              <family>Sheet1</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>16505</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_A29B5D293D0641FA98A86E1D10C6210E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>infection_rate</remote-name>
              <remote-type>5</remote-type>
              <local-name>[infection_rate]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>infection_rate</remote-alias>
              <ordinal>4</ordinal>
              <family>Sheet1</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>28516</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_A29B5D293D0641FA98A86E1D10C6210E]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:location:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Falkland Islands&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Micronesia (country)&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Northern Cyprus&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Philippines&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_A29B5D293D0641FA98A86E1D10C6210E'>
            <properties context=''>
              <relation connection='excel-direct.12324y304n0e2c1gk3p8q0xqozhg' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:E10001:no:A1:E10001:0' header='yes' outcome='6'>
                  <column datatype='string' name='location' ordinal='0' />
                  <column datatype='integer' name='population' ordinal='1' />
                  <column datatype='date' name='date' ordinal='2' />
                  <column datatype='integer' name='highest_infection_count' ordinal='3' />
                  <column datatype='real' name='infection_rate' ordinal='4' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Global Numbers</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (table 1)' name='federated.12gwfzy1mh67yg116ljvm1eptnfu' />
          </datasources>
          <datasource-dependencies datasource='federated.12gwfzy1mh67yg116ljvm1eptnfu'>
            <column caption='Death Percent' datatype='real' name='[death_percent]' role='measure' type='quantitative' />
            <column-instance column='[death_percent]' derivation='Sum' name='[sum:death_percent:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_cases]' derivation='Sum' name='[sum:total_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
            <column caption='Total Cases' datatype='integer' name='[total_cases]' role='measure' type='quantitative' />
            <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.12gwfzy1mh67yg116ljvm1eptnfu].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.12gwfzy1mh67yg116ljvm1eptnfu].[sum:death_percent:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.12gwfzy1mh67yg116ljvm1eptnfu].[sum:total_cases:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.12gwfzy1mh67yg116ljvm1eptnfu].[sum:total_deaths:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.12gwfzy1mh67yg116ljvm1eptnfu].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.12gwfzy1mh67yg116ljvm1eptnfu].[sum:total_cases:qk]&quot;</bucket>
              <bucket>&quot;[federated.12gwfzy1mh67yg116ljvm1eptnfu].[sum:total_deaths:qk]&quot;</bucket>
              <bucket>&quot;[federated.12gwfzy1mh67yg116ljvm1eptnfu].[sum:death_percent:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.12gwfzy1mh67yg116ljvm1eptnfu].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.12gwfzy1mh67yg116ljvm1eptnfu].[:Measure Names]' value='151' />
            <format attr='color' value='#000000' />
            <format attr='font-family' value='Tableau Medium' />
            <format attr='text-format' field='[federated.12gwfzy1mh67yg116ljvm1eptnfu].[sum:death_percent:qk]' value='n#,##0.000&quot;  %&quot;;-#,##0.000&quot;  %&quot;' />
            <format attr='height' value='68' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' scope='cols' value='#898989' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' value='11' />
            <format attr='font-family' value='Tableau Medium' />
            <format attr='font-weight' value='bold' />
            <format attr='color' value='#ffffff' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-pattern-only' value='solid' />
            <format attr='stroke-size' value='0' />
            <format attr='line-visibility' value='off' />
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
            <format attr='stroke-size' scope='cols' value='2' />
            <format attr='stroke-color' scope='cols' value='#c0c0c0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.12gwfzy1mh67yg116ljvm1eptnfu].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='1.5052486658096313' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='stroke-size' value='1' />
                <format attr='line-visibility' value='on' />
                <format attr='line-pattern-only' value='solid' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.12gwfzy1mh67yg116ljvm1eptnfu].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{C992DA3F-89B6-4BE5-81AE-98B0709FDC55}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total Deaths per Continent</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (table 2)' name='federated.1wbk00s0u14sop1andf38108o5b8' />
          </datasources>
          <datasource-dependencies datasource='federated.1wbk00s0u14sop1andf38108o5b8'>
            <column caption='Continent' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[total_death_count]' derivation='Sum' name='[sum:total_death_count:qk]' pivot='key' type='quantitative' />
            <column caption='Total Death Count' datatype='integer' name='[total_death_count]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1wbk00s0u14sop1andf38108o5b8].[:Measure Names]'>
            <groupfilter function='level-members' level='[:Measure Names]' />
          </filter>
          <computed-sort column='[federated.1wbk00s0u14sop1andf38108o5b8].[none:location:nk]' direction='DESC' using='[federated.1wbk00s0u14sop1andf38108o5b8].[sum:total_death_count:qk]' />
          <slices>
            <column>[federated.1wbk00s0u14sop1andf38108o5b8].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='tick-color' field='[federated.1wbk00s0u14sop1andf38108o5b8].[sum:total_death_count:qk]' value='#1b1b1b' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1wbk00s0u14sop1andf38108o5b8].[none:location:nk]' value='142' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height-header' value='28' />
            <format attr='background-color' scope='cols' value='#00000000' />
            <format attr='background-color' field='[federated.1wbk00s0u14sop1andf38108o5b8].[sum:total_death_count:qk]' value='#ffffff' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-weight' value='bold' />
            <format attr='font-size' value='16' />
          </style-rule>
          <style-rule element='field-labels-spanner'>
            <format attr='color' scope='cols' value='#000000' />
            <format attr='color' scope='rows' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1wbk00s0u14sop1andf38108o5b8].[none:location:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#666666' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1wbk00s0u14sop1andf38108o5b8].[sum:total_death_count:qk]</rows>
        <cols>[federated.1wbk00s0u14sop1andf38108o5b8].[none:location:nk]</cols>
      </table>
      <simple-id uuid='{C11AFABF-E2E3-4AED-AB5A-319132ABC23E}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run>World percent infection rate</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (table 3)' name='federated.0226o701cliouo1gde4gh096qkwx' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0226o701cliouo1gde4gh096qkwx'>
            <column caption='Infection Rate' datatype='real' name='[infection_rate]' role='measure' type='quantitative' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[infection_rate]' derivation='Sum' name='[sum:infection_rate:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0226o701cliouo1gde4gh096qkwx].[sum:infection_rate:qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.0226o701cliouo1gde4gh096qkwx].[sum:infection_rate:qk]' value='Infection Rate(in %)'>
              <formatted-text>
                <run>Infection Rate(in %)</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='outdoors' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.0226o701cliouo1gde4gh096qkwx].[none:location:nk]' />
              <color column='[federated.0226o701cliouo1gde4gh096qkwx].[sum:infection_rate:qk]' />
              <geometry column='[federated.0226o701cliouo1gde4gh096qkwx].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0226o701cliouo1gde4gh096qkwx].[Latitude (generated)]</rows>
        <cols>[federated.0226o701cliouo1gde4gh096qkwx].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{E347BF5A-DF22-4C8F-A85E-115BB1CCE021}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Percent Infection Rate By Time</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (table 4)' name='federated.1un4yn307f0iod15swtfe1pp2ubu' />
          </datasources>
          <datasource-dependencies datasource='federated.1un4yn307f0iod15swtfe1pp2ubu'>
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[infection_rate]' derivation='Median' forecast-column-base='[med:infection_rate:qk]' forecast-column-type='forecast-value' name='[fVal:med:infection_rate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[infection_rate]' derivation='Sum' forecast-column-base='[sum:infection_rate:qk]' forecast-column-type='forecast-value' name='[fVal:sum:infection_rate:qk]' pivot='key' type='quantitative' />
            <column caption='Infection Rate' datatype='real' name='[infection_rate]' role='measure' type='quantitative' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[infection_rate]' derivation='Median' name='[med:infection_rate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[infection_rate]' derivation='Sum' name='[sum:infection_rate:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1un4yn307f0iod15swtfe1pp2ubu].[none:location:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:location:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Germany&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Philippines&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Saudi Arabia&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1un4yn307f0iod15swtfe1pp2ubu].[none:location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1un4yn307f0iod15swtfe1pp2ubu].[tmn:date:qk]' value='637' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1un4yn307f0iod15swtfe1pp2ubu].[fVal:med:infection_rate:qk]' palette='red_10_0' type='interpolated' />
            <encoding attr='color' field='[federated.1un4yn307f0iod15swtfe1pp2ubu].[fVal:sum:infection_rate:qk]' palette='red_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1un4yn307f0iod15swtfe1pp2ubu].[none:location:nk]' value='Country'>
              <formatted-text>
                <run bold='true'>Country</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1un4yn307f0iod15swtfe1pp2ubu].[fVal:sum:infection_rate:qk]' />
              <color column='[federated.1un4yn307f0iod15swtfe1pp2ubu].[none:location:nk]' />
              <text column='[federated.1un4yn307f0iod15swtfe1pp2ubu].[none:location:nk]' />
              <color column='[federated.1un4yn307f0iod15swtfe1pp2ubu].[none:Forecast Indicator:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1un4yn307f0iod15swtfe1pp2ubu].[fVal:med:infection_rate:qk]</rows>
        <cols>[federated.1un4yn307f0iod15swtfe1pp2ubu].[tmn:date:qk]</cols>
        <forecast-specification auto-forecast-agg='true' band-confidence-level='95.000000' enabled='true' fill-type='fill-missing' ignore-last='1' model-type='auto-season' range-type='auto' show-prediction-bands='true' />
      </table>
      <simple-id uuid='{56D1682D-346A-4A56-A9E7-A2229D0BD143}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size sizing-mode='automatic' />
      <datasources>
        <datasource caption='Sheet1 (table 4)' name='federated.1un4yn307f0iod15swtfe1pp2ubu' />
      </datasources>
      <datasource-dependencies datasource='federated.1un4yn307f0iod15swtfe1pp2ubu'>
        <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
        <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98142' id='16' param='horz' type-v2='layout-flow' w='99062' x='469' y='929'>
            <zone h='98142' id='11' param='horz' type-v2='layout-flow' w='99062' x='469' y='929'>
              <zone h='98142' id='7' param='horz' type-v2='layout-flow' w='99062' x='469' y='929'>
                <zone fixed-size='1514' h='98142' id='5' is-fixed='true' type-v2='layout-basic' w='99062' x='469' y='929' />
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='59350' id='3' name='Sheet 3' w='46280' x='44640' y='0' />
        <zone h='10221' id='8' name='Sheet 3' pane-specification-id='0' param='[federated.0226o701cliouo1gde4gh096qkwx].[sum:infection_rate:qk]' type-v2='color' w='8202' x='91213' y='1510' />
        <zone h='39489' id='9' name='Sheet 4' w='97598' x='469' y='60046' />
        <zone h='7085' id='12' mode='checkdropdown' name='Sheet 4' param='[federated.1un4yn307f0iod15swtfe1pp2ubu].[none:location:nk]' type-v2='filter' w='9842' x='88694' y='59814' />
        <zone h='23926' id='13' name='Sheet 1' w='41593' x='937' y='3833' />
        <zone h='33333' id='14' name='Sheet 2' w='43468' x='644' y='26481' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1200' minheight='1200' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='18' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98142' id='17' param='vert' type-v2='layout-flow' w='99062' x='469' y='929'>
                <zone fixed-size='280' h='59350' id='3' is-fixed='true' name='Sheet 3' w='46280' x='44640' y='0'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='10221' id='8' name='Sheet 3' pane-specification-id='0' param='[federated.0226o701cliouo1gde4gh096qkwx].[sum:infection_rate:qk]' type-v2='color' w='8202' x='91213' y='1510'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='191' h='23926' id='13' is-fixed='true' name='Sheet 1' w='41593' x='937' y='3833'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='267' h='33333' id='14' is-fixed='true' name='Sheet 2' w='43468' x='644' y='26481'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7085' id='12' mode='checkdropdown' name='Sheet 4' param='[federated.1un4yn307f0iod15swtfe1pp2ubu].[none:location:nk]' type-v2='filter' w='9842' x='88694' y='59814'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='39489' id='9' is-fixed='true' name='Sheet 4' w='97598' x='469' y='60046'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{CE697ACD-FA90-47A5-9C3D-CAA2036CFF0C}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='115'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.12gwfzy1mh67yg116ljvm1eptnfu].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{8FD272B2-0237-4B39-9696-B1BE1009C8E1}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1wbk00s0u14sop1andf38108o5b8].[none:location:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1wbk00s0u14sop1andf38108o5b8].[:Measure Names]</field>
            <field>[federated.1wbk00s0u14sop1andf38108o5b8].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E0F23B2D-EBD4-4073-8C0C-37024CEB95AD}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0226o701cliouo1gde4gh096qkwx].[sum:infection_rate:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0226o701cliouo1gde4gh096qkwx].[none:location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DB5E5C72-F54C-4C9B-9821-46A5CD8AF09E}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='checkdropdown' param='[federated.1un4yn307f0iod15swtfe1pp2ubu].[none:location:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1un4yn307f0iod15swtfe1pp2ubu].[attr:location:nk]</field>
            <field>[federated.1un4yn307f0iod15swtfe1pp2ubu].[none:Forecast Indicator:nk]</field>
            <field>[federated.1un4yn307f0iod15swtfe1pp2ubu].[none:location:nk]</field>
            <field>[federated.1un4yn307f0iod15swtfe1pp2ubu].[sum:infection_rate:qk]</field>
            <field>[federated.1un4yn307f0iod15swtfe1pp2ubu].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2F2B13EB-8159-49FF-852D-B1B14A5AA1A7}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sheet 1' />
        <viewpoint name='Sheet 2'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.1wbk00s0u14sop1andf38108o5b8].[none:location:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Sheet 3'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sheet 4'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='13' />
      <grid grid-overlay-mode='on' />
      <simple-id uuid='{299C9402-3739-4929-9E18-FDA3CF0E2EB1}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='45' name='Sheet 1' width='192'>
      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
      DLBarWLv3r1Cp9MJtVotJEkSO3fu7CHX3t4uli9fLmJiYkRDQ0O/Ot99910xduxYkZKSImw2
      m8jPzxchISFiw4YNoq2trd97T5w4IVQqlTh06NCQy1JcXCwCAgL6tHH//v0iPDxcvPjii0Kj
      0Yjc3Nx+9RmNRqHVasXWrVtFY2OjaG5uFu+8847w8vISBw8eHNCezz77rM/67E5WVpbw9PQU
      69evF+3t7U5p2dnZIjs7e8C8hhuHDx8WixYtEsePHxctLS1CCHv7LFq0SPj4+IjTp0+LYeEA
      XYbm5+eLH3/8UWg0ml4brL6+XsydO1csXrzYUaDe6OqEW7ZsER0dHY7re/bsEUqlUqSlpfVr
      T2pqqnB3dxfp6elDLsvOnTuFJEnis88+65FWVVUlIiMjxQcffCB27tw5oAN0Ofxjjz0m6urq
      HNfb2tpEQkKCCAsLE5WVlX3e39DQIGJiYkRAQIAoLi7uN5/169cLT09PkZWV1SN9pDpAXxiN
      RuHl5WVvq4c7SdlZs2YNmZmZzJo1y/F4cG9YLBaqqqrw9fVFpVL1KXfhwgVqampYsWKFk764
      uDjGjx9Penp6v/YUFxejUqnw9fUdUjmqqqr4/PPPCQ8P5+mnn3ZKk2WZTz/9FA8PDzZu3Dgo
      fU1NTVRXVzNt2jS02nsPZiuVStatW0dpaSmnT5/u8/6srCzOnz/PihUrmDJlSp9yly9f5tix
      YzzxxBPMmTNnULaNZK5evUpLSwt6vX54rQEGory8nMbGRiIjI/uVM5lMeHp6MnHiRKfrfn5+
      hISEUFRURFNTU5/3X716FY1GQ3Bw8JDsS09Pp7S0lJdeeqlH3oWFhezdu5ft27ej0w3uNybc
      3d0ZN24c165dw2x2flN30qRJqNVqCgsLe73XarWSkpKCl5cX27Zt63NgkWWZ1NRUmpqaePXV
      V/H09ByUbSONjo4Orl27xrZt23jjjTdISkpi9erVI8sBDAYDDQ0NjgVye3s7R48eJTg4mKlT
      p1JaWgrYO7CXl1ePTihJEpIkYbPZEP0cgB86dIjy8nKCguyvM1ZVVbF582YUCgW7du1yWnx2
      8c033/Daa6/x1ltvkZSU5JT27bffEhsby549e9i6deugy+vl5UVOTg67du0iJiaGMWPGoFAo
      iIiI4KOPPuLu3d5fYpFlme3bt5OZmcnhw4eJjo7uVQ7ggw8+YPfu3ezZs4dVq1YN2raRiFKp
      xMfHB0mSHLPAsFgDdCc3N7fPNUBfdC303nvvPSGE6DO+7lpDLFiwQDQ2Ng7JLrPZLKKjo0Vo
      aKioqKhwSrNYLCIuLk5MnDhRmEwmp7Ta2loRFRUl4uPjhcVicVwfzBqgP9LT04W7u7v48MMP
      e6SdP39e+Pr6ioSEhH4X/JWVlSIsLExERUWJ2traPuX+amuAgwcPCqVSKZKSksQIfyPMTkRE
      BGq1mjt37gCg1+tpbm6murraSa62tpabN2+SkJCAl9fQfufE19eXKVOmUFVVRWtrq1PauXPn
      OHfuHImJiYSHO79BbDQaKSwsRJZl1Or73nMEnnjiCYKCgsjLy3PMOIMhJycHDw8PoqKieqR9
      8cUXNDU18fLLL/f7ywkZGRmUlpby/vvvDzos+ysQFxeHTqfj2rVrIysEKikpoaOjo8f1oqIi
      LBYLgYGBAERHR/PII4+Qnp7uFK5kZ2dz584dVqxY0Wce9fX11NTU9Lh++/ZtSktL0Wg0Ts5z
      9+5ddu/ejVKp5LXXXusRa69Zs4aOjg6EEE6fnTt3otFoyM3NdQq3BkNZWRlff/01c+bM6bFo
      LSkpITU1lfnz57Nkyf0vPDqX5+OPP2bKlCm88MILg857JNFXiNjS0sLdu3fx8/MbWSHQc889
      J6KiosTJkyeF1WoVNptNHD16VAQFBYkFCxaI27dvO2QHew6QnJwsAEf4lJubK/z9/cXbb7/t
      2GKsra0VmzZtEmPHju2x994VbqxatarH/nl/9BYCdYVS48ePF2fOnBFCCHHlyhWxb98+UVNT
      I4Swb/EuXbpU+Pj4CKPR2ENvcnJyn9uw3UlLSxPu7u4iKSlpQFtHagi0adMmsW3bNlFUVCRs
      NpsQwrn+hs05wHPPPSeAPj9dztDY2Cg+/fRTMW3aNDFmzBgBCD8/P/H666+L+vp6J50dHR1i
      //79IiAgQADC19dXJCUliebmZodMV1zfPQbu6OgQBQUFYu3atUKj0QhAeHh4iNmzZ4uMjAyn
      c4WOjg6xdevWPvfP+6M3B+g6jHrzzTcd+VRXV4sNGzY4bFGpVGLVqlWirKysh86qqioREREh
      oqOjhdls7jNvi8Ui4uPjBzwf6GKkOsDly5fFxo0bRUBAgJAkSQBCo9GI9evXO+rv/wEzhJi/
      44J3/QAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
      9vD/XMbo+8qEa24AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
      vwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
