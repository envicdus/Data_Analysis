[
  {
    "objectID": "Philippine_food_price_Analysis_and_Visualization/Reports/full_report.html",
    "href": "Philippine_food_price_Analysis_and_Visualization/Reports/full_report.html",
    "title": "Full Analysis of Philippine Food prices from 2007 - 2025",
    "section": "",
    "text": "Compare average prices across different regions for the same food item and year.\nExamine how prices of a specific food item have changed over time within a region.\nIdentify regional price variations for different food items.\nPredict future food prices based on historical data.\n\n\n\nCode\nfrom itables import init_notebook_mode\nimport pandas as pd\nimport numpy as np\nfrom scipy.stats import shapiro\nfrom scipy.stats import kruskal\nimport seaborn as sns\nimport statsmodels.api as sm\nimport matplotlib.pyplot as plt\nimport scipy.stats as stats\nfrom scipy.stats import levene\nfrom ipywidgets import interact\nimport dash\nfrom dash import dcc, html, Input, Output\nimport plotly.express as px\nimport plotly.graph_objects as go\nimport scikit_posthocs as sp\nimport ipywidgets as widgets\nfrom IPython.display import display, clear_output\nfrom pmdarima import auto_arima\nimport warnings\nimport plotly.io as pio\nimport shiny\nfrom shiny import ui, render, reactive\nimport nest_asyncio\n\n\n\n\nCode\ninit_notebook_mode(all_interactive=True)\n#open the file that was already cleaned, analyzed, and saved.\nfile_path = \"../Data/Processed/eda_results.csv\"\ndf = pd.read_csv(file_path)\n\n\n\n\n\n\n\n\n\n\n    \n        \n        \n        \n        \n        \n        \n        \n        \n    \n    \n   \n    \n      \n  \n        \n    \n    \n  \n        \n    \n    \n  \n        \n    \n      \n  \n        \n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n        \n    \n\n\nThis is the init_notebook_mode cell from ITables v2.2.4\n(you should not see this message - is your notebook trusted?)\n\n\n\n\n\n\n\n\nCode\n# View the first few rows of the dataset\ndf.head()\ndf\n\n\n\n\n    \n      \n      Region\n      Province\n      Food_Items\n      year\n      mean\n      median\n      Mode\n      Variance\n      Standard Deviation\n      IQR\n    \n  \n\n\n    \n        \n        \n        \n        \n        \n        \n        \n        \n    \n    \n   \n    \n      \n  \n        \n    \n    \n  \n        \n    \n    \n  \n        \n    \n      \n  \n        \n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n        \n    \n\n\nLoading ITables v2.2.4 from the init_notebook_mode cell...\n(need help?)\n\n\n\n\n\n\n\nCode\n# View the columns and data types of the dataset\ndf.info()\n\n\n&lt;class 'pandas.core.frame.DataFrame'&gt;\nRangeIndex: 91200 entries, 0 to 91199\nData columns (total 10 columns):\n #   Column              Non-Null Count  Dtype  \n---  ------              --------------  -----  \n 0   Region              91200 non-null  object \n 1   Province            91200 non-null  object \n 2   Food_Items          91200 non-null  object \n 3   year                91200 non-null  int64  \n 4   mean                78875 non-null  float64\n 5   median              78875 non-null  float64\n 6   Mode                36432 non-null  float64\n 7   Variance            76125 non-null  float64\n 8   Standard Deviation  76125 non-null  float64\n 9   IQR                 78875 non-null  float64\ndtypes: float64(6), int64(1), object(3)\nmemory usage: 7.0+ MB\n\n\n\n\nCode\n# View the summary statistics of the dataset though this may not make sense as they are already described in the EDA report\ndf.describe()\n\n\n\n\n    \n      \n      year\n      mean\n      median\n      Mode\n      Variance\n      Standard Deviation\n      IQR\n    \n  \n\n\n    \n        \n        \n        \n        \n        \n        \n        \n        \n    \n    \n   \n    \n      \n  \n        \n    \n    \n  \n        \n    \n    \n  \n        \n    \n      \n  \n        \n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n        \n    \n\n\nLoading ITables v2.2.4 from the init_notebook_mode cell...\n(need help?)\n\n\n\n\n\n\n\nCode\n#check the shape of the dataset\ndf.shape\n\n\n(91200, 10)\n\n\n\n\nCode\n# get the first and last readings for each food item\nprint(df['year'].agg(['min', 'max']))\n\n\nmin    2007\nmax    2025\nName: year, dtype: int64\n\n\nFor comparing average prices across regions for the same food item and year, the closing price is generally the best price to use. Here’s why:\n\nConsistency: The closing price is considered the most representative of the market’s consensus for that period. It accounts for the entire trading session and reflects both supply and demand dynamics over time.\nStandard Usage: The closing price is the most widely used price in financial markets, meaning data and analysis are typically focused around this price.\nSimplicity: It eliminates the noise created by intra-day fluctuations, focusing on the price at the end of the trading session, which is more relevant for long-term comparisons.\n\n\n\nCode\n# Filter the dataframe to keep only rows where 'food_item' starts with 'c_'\ndf_filtered = df[df['Food_Items'].str.startswith('c_')]\n\ndf_filtered\n\n\n\n\n    \n      \n      Region\n      Province\n      Food_Items\n      year\n      mean\n      median\n      Mode\n      Variance\n      Standard Deviation\n      IQR\n    \n  \n\n\n    \n        \n        \n        \n        \n        \n        \n        \n        \n    \n    \n   \n    \n      \n  \n        \n    \n    \n  \n        \n    \n    \n  \n        \n    \n      \n  \n        \n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n        \n    \n\n\nLoading ITables v2.2.4 from the init_notebook_mode cell...\n(need help?)\n\n\n\n\n\n\n\nCode\ndf_filtered.loc[:, 'Food_Items'] = df_filtered['Food_Items'].str.replace('c_', '', regex=True)\ndf_filtered\n\n\n\n\n    \n      \n      Region\n      Province\n      Food_Items\n      year\n      mean\n      median\n      Mode\n      Variance\n      Standard Deviation\n      IQR\n    \n  \n\n\n    \n        \n        \n        \n        \n        \n        \n        \n        \n    \n    \n   \n    \n      \n  \n        \n    \n    \n  \n        \n    \n    \n  \n        \n    \n      \n  \n        \n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n        \n    \n\n\nLoading ITables v2.2.4 from the init_notebook_mode cell...\n(need help?)\n\n\n\n\n\n\n\nCode\n# Create figure\nfig = go.Figure()\n\n# Add traces for each food item and stat\nfood_items = df_filtered['Food_Items'].unique()\nstats = ['mean', 'median']\n\nfor food in food_items:\n    for stat in stats:\n        df_food = df_filtered[df_filtered['Food_Items'] == food]\n        for region in df_food['Region'].unique():\n            df_region = df_food[df_food['Region'] == region]\n            fig.add_trace(go.Scatter(\n                x=df_region['year'],\n                y=df_region[stat],\n                mode='lines+markers',\n                name=f\"{food} - {region} ({stat})\",\n                visible=False\n            ))\n\n# Set initial visible traces (first food item, 'mean' stat)\ninitial_food = food_items[0]\ninitial_stat = 'mean'\nfor trace in fig.data:\n    if initial_food in trace.name and initial_stat in trace.name:\n        trace.visible = True\n\n# Create separate dropdown buttons for food items and statistics\nfood_buttons = []\nstat_buttons = []\n\nfor food in food_items:\n    visibility = [food in trace.name and initial_stat in trace.name for trace in fig.data]\n    food_buttons.append({\n        'label': food,\n        'method': 'update',\n        'args': [{'visible': visibility},\n                 {'title': f\"{initial_stat.capitalize()} for {food} by Region and Year\"}]\n    })\n\nfor stat in stats:\n    visibility = [initial_food in trace.name and stat in trace.name for trace in fig.data]\n    stat_buttons.append({\n        'label': stat,\n        'method': 'update',\n        'args': [{'visible': visibility},\n                 {'yaxis': {'title': stat.capitalize()}},\n                 {'title': f\"{stat.capitalize()} for {initial_food} by Region and Year\"}]\n    })\n\n# Update layout with separate dropdown menus\nfig.update_layout(\n    title=f\"{initial_stat.capitalize()} for {initial_food} by Region and Year\",\n    xaxis_title=\"Year\",\n    yaxis_title=initial_stat.capitalize(),\n    template=\"plotly_white\",\n    updatemenus=[\n        {\n            'buttons': food_buttons,\n            'direction': 'down',\n            'showactive': True,\n            'x': 0,\n            'xanchor': 'left',\n            'y': 1.15,\n            'yanchor': 'top',\n        },\n        {\n            'buttons': stat_buttons,\n            'direction': 'down',\n            'showactive': True,\n            'x': 0.26,\n            'xanchor': 'left',\n            'y': 1.15,\n            'yanchor': 'top',\n        }\n    ]\n)\n\n# Show figure\nfig.show()\n\n\n                                                \n\n\nThe graph shows the mean (average) price or median price of different food items over time for different regions in the Philippines. #### Key Observation 1. Trend - Generally, the price of all food items has been increasing over the years across most regions. There are some fluctuations and periods of stability for some items, but the overall trend is upward. 2. Regional Differences - There is significant variation in price of different food items across regions. Some regions consistently have higher prices than others. Price fluctuations also varies between regions. Some regions experience more volatile prices than others.\nFactors like weather patterns, government policies, agriculture changes, food transportation and global market trends can influence these prices.\nTo know which regions has the highest and lowest price every year for every food item, max, min will be calculated. Then range is next to know how wide the difference between the highest and lowest price.\n\n\nCode\nfile_path = \"../Data/Interim/cleaned_food_prices.csv\"\ndf_range = pd.read_csv(file_path)\n\n#dropping columns related to food price index\ndf_nofpi_range = df_range.drop(columns=['o_food_price_index', 'h_food_price_index', 'l_food_price_index', 'c_food_price_index', 'inflation_food_price_index', 'trust_food_price_index'])\n\n# Convert 'Date' column to datetime format\ndf_nofpi_range['Date'] = pd.to_datetime(df_nofpi_range['Date'])\n\n#dropping columns related to inflation\ndf_noinf_range = df_nofpi_range.drop(columns=['inflation_beans','inflation_cabbage', 'inflation_carrots', 'inflation_eggs', 'inflation_garlic', 'inflation_meat_beef_chops', 'inflation_meat_chicken_whole', 'inflation_meat_pork', 'inflation_onions', 'inflation_potatoes', 'inflation_rice', 'inflation_tomatoes'])\n\n#dropping columns related to trust scores\ndf_cleaned_range = df_noinf_range.drop(columns=['trust_beans','trust_cabbage', 'trust_carrots', 'trust_eggs', 'trust_garlic', 'trust_meat_beef_chops', 'trust_meat_chicken_whole', 'trust_meat_pork', 'trust_onions', 'trust_potatoes', 'trust_rice', 'trust_tomatoes'])\n\n#dropping uneeded columns\ndf_unneeded_range = df_cleaned_range.drop(columns=['country', 'City', 'lat', 'lon', 'Province', 'Date', 'month'])\n\n# Reshaping from wide to long format (including year and month as part of the identifier)\ndf_range = df_unneeded_range.melt(id_vars=['Region', 'year'], var_name='Food_Items', value_name='Price')\n\ndf_range_filtered = df_range[df_range['Food_Items'].str.startswith('c_')]\n\ndf_range_filtered.loc[:, 'Food_Items'] = df_range_filtered['Food_Items'].str.replace('c_', '', regex=True)\n\ndf_range_filtered\n\n\n\n\n    \n      \n      Region\n      year\n      Food_Items\n      Price\n    \n  \n\n\n    \n        \n        \n        \n        \n        \n        \n        \n        \n    \n    \n   \n    \n      \n  \n        \n    \n    \n  \n        \n    \n    \n  \n        \n    \n      \n  \n        \n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n        \n    \n\n\nLoading ITables v2.2.4 from the init_notebook_mode cell...\n(need help?)\n\n\n\n\n\n\n\nCode\n\n# Dropdown for selecting food items\nfood_items = df_range_filtered['Food_Items'].unique()\ndropdown = widgets.Dropdown(options=food_items, description=\"Food Item:\")\n\n# Output widget for displaying the plot\noutput = widgets.Output()\n\ndef update_plot(selected_food_item):\n    with output:\n        clear_output(wait=True)  # Ensure only one graph is displayed\n        filtered_dfr = df_range_filtered[df_range_filtered['Food_Items'] == selected_food_item]\n        price_stats = filtered_dfr.groupby('year')['Price'].agg(['min', 'max', 'mean']).reset_index()\n        \n        fig = go.Figure()\n        fig.add_trace(go.Scatter(x=price_stats['year'], y=price_stats['min'], mode='lines+markers', name='Min Price'))\n        fig.add_trace(go.Scatter(x=price_stats['year'], y=price_stats['max'], mode='lines+markers', name='Max Price'))\n        fig.add_trace(go.Scatter(x=price_stats['year'], y=price_stats['mean'], mode='lines+markers', name='Average Price'))\n        \n        fig.update_layout(\n            title=f'Min, Max, and Average Prices Per Year for {selected_food_item}',\n            xaxis_title='Year',\n            yaxis_title='Price',\n            legend_title='Price Type'\n        )\n        display(fig)  # Display updated graph\n\ndef on_dropdown_change(change):\n    update_plot(change['new'])\n\n# Attach event listener\ndropdown.observe(on_dropdown_change, names='value')\n\n# Display UI elements once\ndisplay(dropdown, output)\n\n# Show initial plot\nupdate_plot(food_items[0])\n\n\n\n\n\n\n\n\n\n\nCode\n# Dash app setup\napph = dash.Dash(__name__)\n\napph.layout = html.Div([\n    html.H3(\"Highest Prices Per Year by Region\"),\n    \n    # Dropdown for selecting food items\n    dcc.Dropdown(\n        id='food-item-dropdown',\n        options=[{'label': item, 'value': item} for item in df_range_filtered['Food_Items'].unique()],\n        value=df_range_filtered['Food_Items'].unique()[0],\n        placeholder=\"Select a food item\"\n    ),\n    \n    # Graph for displaying highest prices\n    dcc.Graph(id='highest-price-graph')\n])\n\n# Callback to update the graph based on selected food item\n@apph.callback(\n    Output('highest-price-graph', 'figure'),\n    [Input('food-item-dropdown', 'value')]\n)\ndef update_graph(selected_food_item):\n    # Filter data for the selected food item\n    filtered_dfr = df_range_filtered[df_range_filtered['Food_Items'] == selected_food_item]\n    \n    # Find the highest price per year and the corresponding region\n    highest_prices = (\n        filtered_dfr.loc[filtered_dfr.groupby('year')['Price'].idxmax()]\n        .reset_index(drop=True)\n    )\n    \n    # Create the bar chart\n    fig = px.bar(\n        highest_prices,\n        x='year',\n        y='Price',\n        color='Region',  # Highlight the region in the bar color\n        title=f'Highest Prices Per Year for {selected_food_item}',\n        labels={'Price': 'Price', 'year': 'year', 'Region': 'Region'}\n    )\n    \n    return fig\n\n# Run the app\nif __name__ == '__main__':\n    apph.run_server(debug=True, port=8051, mode='inline', name=\"apph\")\n\n\n\n        \n        \n\n\n\n\nCode\n# Dash app setup\nappl = dash.Dash(__name__)\n\nappl.layout = html.Div([\n    html.H3(\"lowest Prices Per Year by Region\"),\n    \n    # Dropdown for selecting food items\n    dcc.Dropdown(\n        id='food-item-dropdown',\n        options=[{'label': item, 'value': item} for item in df_range_filtered['Food_Items'].unique()],\n        value=df_range_filtered['Food_Items'].unique()[0],\n        placeholder=\"Select a food item\"\n    ),\n    \n    # Graph for displaying lowest prices\n    dcc.Graph(id='lowest-price-graph')\n])\n\n# Callback to update the graph based on selected food item\n@appl.callback(\n    Output('lowest-price-graph', 'figure'),\n    [Input('food-item-dropdown', 'value')]\n)\ndef update_graph(selected_food_item):\n    # Filter data for the selected food item\n    filtered_dfr = df_range_filtered[df_range_filtered['Food_Items'] == selected_food_item]\n    \n    # Find the lowest price per year and the corresponding region\n    lowest_prices = (\n        filtered_dfr.loc[filtered_dfr.groupby('year')['Price'].idxmin()]\n        .reset_index(drop=True)\n    )\n    \n    # Create the bar chart\n    fig = px.bar(\n        lowest_prices,\n        x='year',\n        y='Price',\n        color='Region',  # Highlight the region in the bar color\n        title=f'Lowest Prices Per Year for {selected_food_item}',\n        labels={'Price': 'Price', 'year': 'year', 'Region': 'Region'}\n    )\n    \n    return fig\n\n# Run the app, changing port to make it have different URL and not interfere with other app\nif __name__ == '__main__':\n    appl.run_server(debug=True, port=8052, mode='inline', name=\"appl\")\n\n\n\n        \n        \n\n\n\n\nCode\n# Dash App Setup\napprange = dash.Dash(__name__)\n\napprange.layout = html.Div([\n    html.H3(\"Price Range of Food Items per Year Across Regions\"),\n    \n    # Dropdown for selecting food items\n    dcc.Dropdown(\n        id='food-item-dropdown',\n        options=[{'label': item, 'value': item} for item in df_range_filtered['Food_Items'].unique()],\n        value=df_range_filtered['Food_Items'].unique()[0],\n        placeholder=\"Select a food item\"\n    ),\n    \n    # Graph for displaying the price range (min and max) per year\n    dcc.Graph(id='price-range-graph')\n])\n\n# Callback to update the graph based on selected food item\n@apprange.callback(\n    Output('price-range-graph', 'figure'),\n    [Input('food-item-dropdown', 'value')]\n)\ndef update_graph(selected_food_item):\n    # Filter data for the selected food item\n    filtered_df = df_range_filtered[df_range_filtered['Food_Items'] == selected_food_item]\n    \n    # Get the minimum and maximum price per year\n    price_range = (\n        filtered_df.groupby('year')['Price']\n        .agg(['min', 'max'])\n        .reset_index()\n    )\n    \n    # Create the graph (min and max prices as lines)\n    fig = px.line(\n        price_range, \n        x='year', \n        y=['min', 'max'], \n        title=f'Price Range (Min & Max) Per Year for {selected_food_item} Across Regions',\n        labels={'year': 'year', 'value': 'Price'},\n        line_shape='linear'\n    )\n    \n    return fig\n\n# Run the app\napprange.run_server(debug=True, port=8053, mode='inline', name=\"apprange\")\n\n\n\n        \n        \n\n\nKey Observations: 1. Overall Trend - Both the minimum and maximum prices show a general upward trend over the years, indicating an overall increase in the price of every food items. Some even recorded highest price increase on 2020, likely due to the COVID-19 pandemic and its impact on supply chains. 2. Price Range - The gap between the minimum and maximum prices for most items widens significantly in 2020 and 2021. This suggests that there were greater variations in prices across regions during these years.\nPosssible causes: 1. COVID-19 Pandemic - The pandemic disrupted supply chains and increased demand for certain food items, which could have led to price volatility. 2. Regional Differences - Differences in the impact of the pandemic on regional economies and agricultural production could have contributed to price variations.\nTo truly know if the regions really have price difference over the years, hypothesis testing must be done. Please refer to .._testing.ipynb to know why Kruskall-Wallis was used here.\n\n\nCode\n#open the csv file that was already analyzed with kruskall wallis test.\nhypothesis_results = \"../Data/Processed/hypothesis_testing_result.csv\"\nhyp_df = pd.read_csv(hypothesis_results)\n\n\n\n\nCode\n# View the first few rows of the dataset\nprint(hyp_df.head())\n\n\n   Year  Food_Item  H-statistic        p-value           Result\n0  2007      beans          NaN            NaN  Not Significant\n1  2007    c_beans  1077.368029  2.491117e-218      Significant\n2  2007  c_cabbage  1105.762042  2.066749e-224      Significant\n3  2007  c_carrots  1093.290901  9.693593e-222      Significant\n4  2007     c_eggs   905.101619  1.726764e-181      Significant\n\n\n\n\nCode\n# Filter the dataframe to keep only rows where 'food_item' starts with 'c_'\nhyp_df_filtered = hyp_df[hyp_df['Food_Item'].str.startswith('c_')]\n\nprint(hyp_df_filtered)\n\n\n      Year    Food_Item  H-statistic        p-value       Result\n1     2007      c_beans  1077.368029  2.491117e-218  Significant\n2     2007    c_cabbage  1105.762042  2.066749e-224  Significant\n3     2007    c_carrots  1093.290901  9.693593e-222  Significant\n4     2007       c_eggs   905.101619  1.726764e-181  Significant\n5     2007     c_garlic   393.719714   3.807277e-73  Significant\n...    ...          ...          ...            ...          ...\n1088  2025  c_meat_pork    44.757215   2.646148e-04  Significant\n1089  2025     c_onions   101.512409   4.662566e-14  Significant\n1090  2025   c_potatoes    90.632301   4.683642e-12  Significant\n1091  2025       c_rice    67.209085   6.484158e-08  Significant\n1092  2025   c_tomatoes    70.027332   2.133517e-08  Significant\n\n[228 rows x 5 columns]\n\n\n\n\nCode\n# removing prefix _c in the food items\nhyp_df_filtered.loc[:, 'Food_Item'] = hyp_df_filtered['Food_Item'].str.replace('c_', '', regex=True)\nprint(hyp_df_filtered)\n\n\n      Year  Food_Item  H-statistic        p-value       Result\n1     2007      beans  1077.368029  2.491117e-218  Significant\n2     2007    cabbage  1105.762042  2.066749e-224  Significant\n3     2007    carrots  1093.290901  9.693593e-222  Significant\n4     2007       eggs   905.101619  1.726764e-181  Significant\n5     2007     garlic   393.719714   3.807277e-73  Significant\n...    ...        ...          ...            ...          ...\n1088  2025  meat_pork    44.757215   2.646148e-04  Significant\n1089  2025     onions   101.512409   4.662566e-14  Significant\n1090  2025   potatoes    90.632301   4.683642e-12  Significant\n1091  2025       rice    67.209085   6.484158e-08  Significant\n1092  2025   tomatoes    70.027332   2.133517e-08  Significant\n\n[228 rows x 5 columns]\n\n\n\n\nCode\nyear_dropdown = widgets.Dropdown(\n    options=hyp_df_filtered[\"Year\"].unique(),\n    value=hyp_df_filtered[\"Year\"].min(),\n    description=\"Select Year:\",\n    style={'description_width': 'initial'}\n)\n\n# Output widget to display the table\noutput = widgets.Output()\n\ndef update_table(change):\n    with output:\n        output.clear_output()\n        display(hyp_df_filtered[hyp_df_filtered[\"Year\"] == year_dropdown.value])\n\n# Trigger update on change\nyear_dropdown.observe(update_table, names=\"value\")\n\n# Display widgets\ndisplay(year_dropdown, output)\n\n# Initial Table Display\nupdate_table(None)\n\n\n\n\n\n\n\n\n\n\nCode\n# or you can just count the number of unique Results\nhyp_df_filtered[\"Result\"].value_counts()\n\n\n\n\n    \n      \n      count\n    \n    \n      Result\n      \n    \n  \n\n\n    \n        \n        \n        \n        \n        \n        \n        \n        \n    \n    \n   \n    \n      \n  \n        \n    \n    \n  \n        \n    \n    \n  \n        \n    \n      \n  \n        \n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n        \n    \n\n\nLoading ITables v2.2.4 from the init_notebook_mode cell...\n(need help?)\n\n\n\n\n\nThis means all the items for all the regions over the year have different prices. But which regions have different prices?\n\n\nCode\n# Define the available items and years for the dropdowns\nitems = df_range_filtered['Food_Items'].unique().tolist()\nyears = df_range_filtered['year'].unique().tolist()\n\n# Step 1: Create the function that will update the graph based on selected item and year\ndef update_heatmap(selected_item, selected_year):\n    # Filter for the selected item and year\n    filter_df = df_range_filtered[(df_range_filtered['Food_Items'] == selected_item) & (df_range_filtered['year'] == selected_year)]\n    \n    # Perform Dunn's Test to check which regions differ\n    regions = filter_df['Region'].unique()\n    dunn_result = sp.posthoc_dunn(filter_df, val_col='Price', group_col='Region')\n\n    # Prepare heatmap data (p-values matrix)\n    p_values_matrix = np.zeros((len(regions), len(regions)))\n\n    for i, region1 in enumerate(regions):\n        for j, region2 in enumerate(regions):\n            if region1 != region2:\n                p_value = dunn_result.loc[region1, region2]\n                p_values_matrix[i, j] = p_value\n            else:\n                p_values_matrix[i, j] = np.nan  # No need for comparison within the same region\n\n    # Create a DataFrame for the heatmap using the regions as both rows and columns\n    heatmap_df = pd.DataFrame(p_values_matrix, columns=regions, index=regions)\n\n    # Replace NaN values with a large value (optional, to handle missing pairwise comparisons)\n    heatmap_df = heatmap_df.fillna(1.0)  # Optionally replace NaNs with 1 (indicating no comparison)\n\n    # Custom colorscale: green for 1 and red for 0\n    custom_colorscale = [\n        [0, \"darkred\"], # 0 -&gt; red\n        [0.166, \"red\"],\n        [0.332, \"lightcoral\"],\n        [0.5, \"yellow\"],\n        [0.66, \"palegreen\"],\n        [0.832, \"green\"],\n        [1, \"darkgreen\"]   # 1 -&gt; green  \n    ]\n\n    # Create the heatmap figure with custom colorscale\n    fig = go.Figure(data=go.Heatmap(\n        z=heatmap_df.values,\n        x=heatmap_df.columns,\n        y=heatmap_df.index,\n        colorscale=custom_colorscale,\n        colorbar=dict(title='p-value'),\n        zmin=0, zmax=1  # Normalize the range from 0 to 1\n    ))\n\n    # Update layout to improve axis labels and graph size\n    fig.update_layout(\n        title=f\"Dunn's Test p-values for {selected_item} in {selected_year} by Region\",\n        xaxis_title='Region',\n        yaxis_title='Region',\n        autosize=False,  # Disable autosize\n        width=800,  # Set width of the figure\n        height=800,  # Set height of the figure\n        margin=dict(l=100, r=100, t=100, b=100),  # Increase margins for better visibility\n        xaxis=dict(tickmode='array', tickvals=heatmap_df.columns, ticktext=heatmap_df.columns, tickangle=45),  # Rotate x-axis labels for better readability\n        yaxis=dict(tickmode='array', tickvals=heatmap_df.index, ticktext=heatmap_df.index, tickangle=0)  # Rotate y-axis labels for better readability\n    )\n\n    return fig\n\n# Step 2: Create the Dash app\nappDunns = dash.Dash(__name__)\n\n# Define the layout with dropdowns and the graph\nappDunns.layout = html.Div([\n    html.H3(\"Price Comparison Heatmap by Region\"),\n    \n    # Dropdown for selecting item\n    html.Label('Select Item:'),\n    dcc.Dropdown(\n        id='item-dropdown',\n        options=[{'label': item, 'value': item} for item in items],\n        value=items[0],  # default value\n        style={'width': '50%'}\n    ),\n    \n    # Dropdown for selecting year\n    html.Label('Select Year:'),\n    dcc.Dropdown(\n        id='year-dropdown',\n        options=[{'label': year, 'value': year} for year in years],\n        value=years[0],  # default value\n        style={'width': '50%'}\n    ),\n    \n    # Graph for showing the heatmap\n    dcc.Graph(id='heatmap-graph')\n])\n\n# Step 3: Create callback to update the heatmap based on dropdown selection\n@appDunns.callback(\n    dash.dependencies.Output('heatmap-graph', 'figure'),\n    [dash.dependencies.Input('item-dropdown', 'value'),\n     dash.dependencies.Input('year-dropdown', 'value')]\n)\ndef update_graph(selected_item, selected_year):\n    return update_heatmap(selected_item, selected_year)\n\n# Run the app\nif __name__ == '__main__':\n    appDunns.run_server(debug=True, port=8054, mode='inline', name=\"appDunns\")\n\n\n\n        \n        \n\n\nThis heatmap visualizes the results of a Dunn’s post-hoc test for significant differences in prices of different food items between regions across the years.  The color scale indicates the following: * Red (Close to 0): Indicates a statistically significant difference in bean prices between two regions. * Light Green to Yellow (Around 0.2 to 0.8): Suggests a possible difference, but not statistically significant based on the chosen significance level (typically 0.05) * Dark Green (Close to 0): Indicates no statistically significant difference in bean prices between the two regions.\n\n\n\n\nSignificant Differences Exist: The presence of so many red cells indicates that there are statistically significant differences in food prices in almost all regions at any given years.\nNo Significant Differences: patches of green indicate pairs of regions where the Dunn’s test did not find a statistically significant difference in food prices, but there are only few of them.\nMarket Average Comparison: The “Market Average” row/column allows you to see how each region’s prices compare to the overall average. Dark red cells in this row/column would indicate regions with prices significantly different from the market average.\n\nFood price Prediction 3 years into the future\n\n\nCode\n#dropping uneeded columns\ndf_unneeded_range = df_cleaned_range.drop(columns=['country', 'City', 'lat', 'lon', 'Province', 'year', 'month'])\n\n# Reshaping from wide to long format (including year and month as part of the identifier)\ndf_range = df_unneeded_range.melt(id_vars=['Region', 'Date'], var_name='Food_Items', value_name='Price')\n\ndf_range_filtered = df_range[df_range['Food_Items'].str.startswith('c_')]\n\ndf_range_filtered.loc[:, 'Food_Items'] = df_range_filtered['Food_Items'].str.replace('c_', '', regex=True)\n\n# Sort by date\ndf = df_range_filtered.sort_values(by=['Region', 'Date'])\n\n\n\n\nCode\n# Suppress specific warnings\nwarnings.filterwarnings(\"ignore\", category=UserWarning, module=\"sklearn\")\nwarnings.filterwarnings(\"ignore\", category=FutureWarning, module=\"sklearn\")\nwarnings.filterwarnings(\"ignore\", category=FutureWarning, module=\"pmdarima\")\nwarnings.filterwarnings(\"ignore\", category=DeprecationWarning, module=\"pmdarima\")\n\n\n# Convert date column to datetime\ndf['Date'] = pd.to_datetime(df['Date'])\n\n# Sort by date\ndf = df.sort_values(by=['Region', 'Date'])\n\n# Dropdown for interactive visualization\nregions = df['Region'].unique()\nitems = df['Food_Items'].unique()\n\nregion_dropdown = widgets.Dropdown(options=regions, description='Region:')\nitem_dropdown = widgets.Dropdown(options=items, description='Food Item:')\n\ndef preprocess_data(region, item):\n    region_df = df[(df['Region'] == region) & (df['Food_Items'] == item)]\n    region_df = (\n        region_df.groupby('Date', as_index=False)['Price']\n        .mean()  # Aggregate duplicate dates by averaging\n    )\n    region_df = region_df.set_index('Date').asfreq('MS')  # Ensure monthly frequency\n    region_df['Price'] = region_df['Price'].interpolate()  # Fill missing values\n    return region_df\n\ndef update_graph(region, item):\n    region_df = preprocess_data(region, item)\n\n    if len(region_df) &lt; 12:\n        print(f\"Not enough data for {region} - {item} to forecast.\")\n        return\n\n    # Use AutoARIMA to find the best model\n    model = auto_arima(region_df['Price'], seasonal=True, m=12, stepwise=True, trace=True, max_order=None, stationary=False)\n    \n    # Forecast the next 36 months\n    forecast = model.predict(n_periods=36)\n\n    # Plot the historical data and forecast\n    plt.figure(figsize=(12, 6))\n    plt.plot(region_df.index, region_df['Price'], label='Historical Prices')\n    plt.plot(pd.date_range(region_df.index[-1], periods=37, freq='MS')[1:], forecast, label='Forecast', linestyle='dashed', color='red')\n    plt.xlabel('Date')\n    plt.ylabel('Price')\n    plt.legend()\n    plt.title(f'Price Forecast for {region} - {item} (Next 36 Months)')\n    plt.show()\n\ninteractive_plot = widgets.interactive(update_graph, region=region_dropdown, item=item_dropdown)\ndisplay(interactive_plot)\n\n\n---------------------------------------------------------------------------\nKeyError                                  Traceback (most recent call last)\nCell In[223], line 30, in update_graph(selected_food_item='cabbage')\n     26 filtered_dfr = df_range_filtered[df_range_filtered['Food_Items'] == selected_food_item]\n     28 # Find the highest price per year and the corresponding region\n     29 highest_prices = (\n---&gt; 30     filtered_dfr.loc[filtered_dfr.groupby('year')['Price'].idxmax()]\n        highest_prices =                               Region  year Food_Items   Price\n0   Cordillera Administrative region  2007      beans   95.74\n1   Cordillera Administrative region  2008      beans  112.15\n2   Cordillera Administrative region  2009      beans  117.54\n3   Cordillera Administrative region  2010      beans  116.16\n4   Cordillera Administrative region  2011      beans  108.70\n5   Cordillera Administrative region  2012      beans  105.28\n6   Cordillera Administrative region  2013      beans  108.55\n7   Cordillera Administrative region  2014      beans  101.18\n8   Cordillera Administrative region  2015      beans  106.72\n9   Cordillera Administrative region  2016      beans  106.34\n10  Cordillera Administrative region  2017      beans  116.21\n11  Cordillera Administrative region  2018      beans  116.00\n12  Cordillera Administrative region  2019      beans  109.47\n13                         Region VI  2020      beans  206.06\n14                       Region IV-B  2021      beans  151.75\n15                       Region IV-B  2022      beans  131.95\n16                          Region X  2023      beans  133.52\n17  Cordillera Administrative region  2024      beans  130.00\n18  Cordillera Administrative region  2025      beans  124.01\n        filtered_dfr =                                   Region       Date Food_Items  Price\n449407  Cordillera Administrative region 2007-01-01    cabbage  26.26\n449408  Cordillera Administrative region 2007-02-01    cabbage  24.80\n449409  Cordillera Administrative region 2007-03-01    cabbage  24.33\n449410  Cordillera Administrative region 2007-04-01    cabbage  24.36\n449411  Cordillera Administrative region 2007-05-01    cabbage  24.68\n...                                  ...        ...        ...    ...\n473055                    Market Average 2024-09-01    cabbage  83.99\n473056                    Market Average 2024-10-01    cabbage  87.18\n473057                    Market Average 2024-11-01    cabbage  95.69\n473058                    Market Average 2024-12-01    cabbage  87.56\n473059                    Market Average 2025-01-01    cabbage  87.43\n\n[23653 rows x 4 columns]\n     31     .reset_index(drop=True)\n     32 )\n     34 # Create the bar chart\n     35 fig = px.bar(\n     36     highest_prices,\n     37     x='year',\n   (...)\n     41     labels={'Price': 'Price', 'year': 'year', 'Region': 'Region'}\n     42 )\n\nFile c:\\Users\\Admin\\Desktop\\personal_projects\\Data_Analysis\\.venv\\Lib\\site-packages\\pandas\\core\\frame.py:9183, in DataFrame.groupby(\n    self=                                  Region       D...01-01    cabbage  87.43\n\n[23653 rows x 4 columns],\n    by='year',\n    axis=0,\n    level=None,\n    as_index=True,\n    sort=True,\n    group_keys=True,\n    observed=&lt;no_default&gt;,\n    dropna=True\n)\n   9180 if level is None and by is None:\n   9181     raise TypeError(\"You have to supply one of 'by' and 'level'\")\n-&gt; 9183 return DataFrameGroupBy(\n        self =                                   Region       Date Food_Items  Price\n449407  Cordillera Administrative region 2007-01-01    cabbage  26.26\n449408  Cordillera Administrative region 2007-02-01    cabbage  24.80\n449409  Cordillera Administrative region 2007-03-01    cabbage  24.33\n449410  Cordillera Administrative region 2007-04-01    cabbage  24.36\n449411  Cordillera Administrative region 2007-05-01    cabbage  24.68\n...                                  ...        ...        ...    ...\n473055                    Market Average 2024-09-01    cabbage  83.99\n473056                    Market Average 2024-10-01    cabbage  87.18\n473057                    Market Average 2024-11-01    cabbage  95.69\n473058                    Market Average 2024-12-01    cabbage  87.56\n473059                    Market Average 2025-01-01    cabbage  87.43\n\n[23653 rows x 4 columns]\n        by = 'year'\n        axis = 0\n        level = None\n        as_index = True\n        sort = True\n        group_keys = True\n        observed = &lt;no_default&gt;\n        dropna = True\n   9184     obj=self,\n   9185     keys=by,\n   9186     axis=axis,\n   9187     level=level,\n   9188     as_index=as_index,\n   9189     sort=sort,\n   9190     group_keys=group_keys,\n   9191     observed=observed,\n   9192     dropna=dropna,\n   9193 )\n\nFile c:\\Users\\Admin\\Desktop\\personal_projects\\Data_Analysis\\.venv\\Lib\\site-packages\\pandas\\core\\groupby\\groupby.py:1329, in GroupBy.__init__(\n    self=&lt;pandas.core.groupby.generic.DataFrameGroupBy object&gt;,\n    obj=                                  Region       D...01-01    cabbage  87.43\n\n[23653 rows x 4 columns],\n    keys='year',\n    axis=0,\n    level=None,\n    grouper=None,\n    exclusions=None,\n    selection=None,\n    as_index=True,\n    sort=True,\n    group_keys=True,\n    observed=&lt;no_default&gt;,\n    dropna=True\n)\n   1326 self.dropna = dropna\n   1328 if grouper is None:\n-&gt; 1329     grouper, exclusions, obj = get_grouper(\n        obj =                                   Region       Date Food_Items  Price\n449407  Cordillera Administrative region 2007-01-01    cabbage  26.26\n449408  Cordillera Administrative region 2007-02-01    cabbage  24.80\n449409  Cordillera Administrative region 2007-03-01    cabbage  24.33\n449410  Cordillera Administrative region 2007-04-01    cabbage  24.36\n449411  Cordillera Administrative region 2007-05-01    cabbage  24.68\n...                                  ...        ...        ...    ...\n473055                    Market Average 2024-09-01    cabbage  83.99\n473056                    Market Average 2024-10-01    cabbage  87.18\n473057                    Market Average 2024-11-01    cabbage  95.69\n473058                    Market Average 2024-12-01    cabbage  87.56\n473059                    Market Average 2025-01-01    cabbage  87.43\n\n[23653 rows x 4 columns]\n        grouper = None\n        grouper, exclusions, obj = (None, None,                                   Region       Date Food_Items  Price\n449407  Cordillera Administrative region 2007-01-01    cabbage  26.26\n449408  Cordillera Administrative region 2007-02-01    cabbage  24.80\n449409  Cordillera Administrative region 2007-03-01    cabbage  24.33\n449410  Cordillera Administrative region 2007-04-01    cabbage  24.36\n449411  Cordillera Administrative region 2007-05-01    cabbage  24.68\n...                                  ...        ...        ...    ...\n473055                    Market Average 2024-09-01    cabbage  83.99\n473056                    Market Average 2024-10-01    cabbage  87.18\n473057                    Market Average 2024-11-01    cabbage  95.69\n473058                    Market Average 2024-12-01    cabbage  87.56\n473059                    Market Average 2025-01-01    cabbage  87.43\n\n[23653 rows x 4 columns])\n        exclusions = None\n        keys = 'year'\n        axis = 0\n        level = None\n        sort = True\n        lib.no_default = &lt;no_default&gt;\n        observed is lib.no_default = True\n        observed = &lt;no_default&gt;\n        lib = &lt;module 'pandas._libs.lib' from 'c:\\\\Users\\\\Admin\\\\Desktop\\\\personal_projects\\\\Data_Analysis\\\\.venv\\\\Lib\\\\site-packages\\\\pandas\\\\_libs\\\\lib.cp312-win_amd64.pyd'&gt;\n        self.dropna = True\n        self = &lt;pandas.core.groupby.generic.DataFrameGroupBy object at 0x0000024004023A10&gt;\n   1330         obj,\n   1331         keys,\n   1332         axis=axis,\n   1333         level=level,\n   1334         sort=sort,\n   1335         observed=False if observed is lib.no_default else observed,\n   1336         dropna=self.dropna,\n   1337     )\n   1339 if observed is lib.no_default:\n   1340     if any(ping._passed_categorical for ping in grouper.groupings):\n\nFile c:\\Users\\Admin\\Desktop\\personal_projects\\Data_Analysis\\.venv\\Lib\\site-packages\\pandas\\core\\groupby\\grouper.py:1043, in get_grouper(\n    obj=                                  Region       D...01-01    cabbage  87.43\n\n[23653 rows x 4 columns],\n    key='year',\n    axis=0,\n    level=None,\n    sort=True,\n    observed=False,\n    validate=True,\n    dropna=True\n)\n   1041         in_axis, level, gpr = False, gpr, None\n   1042     else:\n-&gt; 1043         raise KeyError(gpr)\n        gpr = 'year'\n   1044 elif isinstance(gpr, Grouper) and gpr.key is not None:\n   1045     # Add key to exclusions\n   1046     exclusions.add(gpr.key)\n\nKeyError: 'year'\n\n\n\n\n\n\n\n\n\n\nHistorical Price Volatility: The blue line representing historical prices shows significant fluctuations, especially noticeable spikes around 2008 and smaller ones in other years. This indicates that most food prices have been subject to considerable volatility over the past two decades.\nRecent Price Increase: There’s a clear upward trend in food prices in the period leading up to the forecast (roughly from 2020 to 2024). This suggests recent factors have been pushing prices higher.\nRelatively Stable Forecast: The red dashed line, representing the forecast for the next 36 months, shows a relatively stable and slightly upward trend. The model predicts a continued but moderated increase compared to the recent past.\n\n\n\n\n\nHistorical Volatility:\n\nWeather Patterns:adverse weather events in key agricultural regions can significantly impact supply and cause price volatility.\nChanges in Demand: Fluctuations in global demand, driven by population growth or economic factors, can also contribute to price swings.\n\nRecent Price Increase:\n\nInflation: General inflation in the economy could be pushing up agricultural commodity prices.\nSupply Chain Issues: Disruptions to global supply chains (e.g., due to pandemics, conflicts, or trade policies) can lead to shortages and price increases.\nIncreased Input Costs: Rising costs of fertilizers, fuel, and labor can increase the cost of food production, which could be passed on to consumers.\n\nRelatively Stable Forecast:\n\nModel Assumption: ARIMA models assume that, to some extent, future trends will resemble past patterns. The stable forecast suggests the model has not picked up any strong upward or downward pressures for the next 36 months beyond what is already captured in the recent trend."
  },
  {
    "objectID": "Philippine_food_price_Analysis_and_Visualization/Reports/full_report.html#aims",
    "href": "Philippine_food_price_Analysis_and_Visualization/Reports/full_report.html#aims",
    "title": "Full Analysis of Philippine Food prices from 2007 - 2025",
    "section": "",
    "text": "Compare average prices across different regions for the same food item and year.\nExamine how prices of a specific food item have changed over time within a region.\nIdentify regional price variations for different food items.\nPredict future food prices based on historical data.\n\n\n\nCode\nfrom itables import init_notebook_mode\nimport pandas as pd\nimport numpy as np\nfrom scipy.stats import shapiro\nfrom scipy.stats import kruskal\nimport seaborn as sns\nimport statsmodels.api as sm\nimport matplotlib.pyplot as plt\nimport scipy.stats as stats\nfrom scipy.stats import levene\nfrom ipywidgets import interact\nimport dash\nfrom dash import dcc, html, Input, Output\nimport plotly.express as px\nimport plotly.graph_objects as go\nimport scikit_posthocs as sp\nimport ipywidgets as widgets\nfrom IPython.display import display, clear_output\nfrom pmdarima import auto_arima\nimport warnings\nimport plotly.io as pio\nimport shiny\nfrom shiny import ui, render, reactive\nimport nest_asyncio\n\n\n\n\nCode\ninit_notebook_mode(all_interactive=True)\n#open the file that was already cleaned, analyzed, and saved.\nfile_path = \"../Data/Processed/eda_results.csv\"\ndf = pd.read_csv(file_path)\n\n\n\n\n\n\n\n\n\n\n    \n        \n        \n        \n        \n        \n        \n        \n        \n    \n    \n   \n    \n      \n  \n        \n    \n    \n  \n        \n    \n    \n  \n        \n    \n      \n  \n        \n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n        \n    \n\n\nThis is the init_notebook_mode cell from ITables v2.2.4\n(you should not see this message - is your notebook trusted?)\n\n\n\n\n\n\n\n\nCode\n# View the first few rows of the dataset\ndf.head()\ndf\n\n\n\n\n    \n      \n      Region\n      Province\n      Food_Items\n      year\n      mean\n      median\n      Mode\n      Variance\n      Standard Deviation\n      IQR\n    \n  \n\n\n    \n        \n        \n        \n        \n        \n        \n        \n        \n    \n    \n   \n    \n      \n  \n        \n    \n    \n  \n        \n    \n    \n  \n        \n    \n      \n  \n        \n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n        \n    \n\n\nLoading ITables v2.2.4 from the init_notebook_mode cell...\n(need help?)\n\n\n\n\n\n\n\nCode\n# View the columns and data types of the dataset\ndf.info()\n\n\n&lt;class 'pandas.core.frame.DataFrame'&gt;\nRangeIndex: 91200 entries, 0 to 91199\nData columns (total 10 columns):\n #   Column              Non-Null Count  Dtype  \n---  ------              --------------  -----  \n 0   Region              91200 non-null  object \n 1   Province            91200 non-null  object \n 2   Food_Items          91200 non-null  object \n 3   year                91200 non-null  int64  \n 4   mean                78875 non-null  float64\n 5   median              78875 non-null  float64\n 6   Mode                36432 non-null  float64\n 7   Variance            76125 non-null  float64\n 8   Standard Deviation  76125 non-null  float64\n 9   IQR                 78875 non-null  float64\ndtypes: float64(6), int64(1), object(3)\nmemory usage: 7.0+ MB\n\n\n\n\nCode\n# View the summary statistics of the dataset though this may not make sense as they are already described in the EDA report\ndf.describe()\n\n\n\n\n    \n      \n      year\n      mean\n      median\n      Mode\n      Variance\n      Standard Deviation\n      IQR\n    \n  \n\n\n    \n        \n        \n        \n        \n        \n        \n        \n        \n    \n    \n   \n    \n      \n  \n        \n    \n    \n  \n        \n    \n    \n  \n        \n    \n      \n  \n        \n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n        \n    \n\n\nLoading ITables v2.2.4 from the init_notebook_mode cell...\n(need help?)\n\n\n\n\n\n\n\nCode\n#check the shape of the dataset\ndf.shape\n\n\n(91200, 10)\n\n\n\n\nCode\n# get the first and last readings for each food item\nprint(df['year'].agg(['min', 'max']))\n\n\nmin    2007\nmax    2025\nName: year, dtype: int64\n\n\nFor comparing average prices across regions for the same food item and year, the closing price is generally the best price to use. Here’s why:\n\nConsistency: The closing price is considered the most representative of the market’s consensus for that period. It accounts for the entire trading session and reflects both supply and demand dynamics over time.\nStandard Usage: The closing price is the most widely used price in financial markets, meaning data and analysis are typically focused around this price.\nSimplicity: It eliminates the noise created by intra-day fluctuations, focusing on the price at the end of the trading session, which is more relevant for long-term comparisons.\n\n\n\nCode\n# Filter the dataframe to keep only rows where 'food_item' starts with 'c_'\ndf_filtered = df[df['Food_Items'].str.startswith('c_')]\n\ndf_filtered\n\n\n\n\n    \n      \n      Region\n      Province\n      Food_Items\n      year\n      mean\n      median\n      Mode\n      Variance\n      Standard Deviation\n      IQR\n    \n  \n\n\n    \n        \n        \n        \n        \n        \n        \n        \n        \n    \n    \n   \n    \n      \n  \n        \n    \n    \n  \n        \n    \n    \n  \n        \n    \n      \n  \n        \n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n        \n    \n\n\nLoading ITables v2.2.4 from the init_notebook_mode cell...\n(need help?)\n\n\n\n\n\n\n\nCode\ndf_filtered.loc[:, 'Food_Items'] = df_filtered['Food_Items'].str.replace('c_', '', regex=True)\ndf_filtered\n\n\n\n\n    \n      \n      Region\n      Province\n      Food_Items\n      year\n      mean\n      median\n      Mode\n      Variance\n      Standard Deviation\n      IQR\n    \n  \n\n\n    \n        \n        \n        \n        \n        \n        \n        \n        \n    \n    \n   \n    \n      \n  \n        \n    \n    \n  \n        \n    \n    \n  \n        \n    \n      \n  \n        \n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n        \n    \n\n\nLoading ITables v2.2.4 from the init_notebook_mode cell...\n(need help?)\n\n\n\n\n\n\n\nCode\n# Create figure\nfig = go.Figure()\n\n# Add traces for each food item and stat\nfood_items = df_filtered['Food_Items'].unique()\nstats = ['mean', 'median']\n\nfor food in food_items:\n    for stat in stats:\n        df_food = df_filtered[df_filtered['Food_Items'] == food]\n        for region in df_food['Region'].unique():\n            df_region = df_food[df_food['Region'] == region]\n            fig.add_trace(go.Scatter(\n                x=df_region['year'],\n                y=df_region[stat],\n                mode='lines+markers',\n                name=f\"{food} - {region} ({stat})\",\n                visible=False\n            ))\n\n# Set initial visible traces (first food item, 'mean' stat)\ninitial_food = food_items[0]\ninitial_stat = 'mean'\nfor trace in fig.data:\n    if initial_food in trace.name and initial_stat in trace.name:\n        trace.visible = True\n\n# Create separate dropdown buttons for food items and statistics\nfood_buttons = []\nstat_buttons = []\n\nfor food in food_items:\n    visibility = [food in trace.name and initial_stat in trace.name for trace in fig.data]\n    food_buttons.append({\n        'label': food,\n        'method': 'update',\n        'args': [{'visible': visibility},\n                 {'title': f\"{initial_stat.capitalize()} for {food} by Region and Year\"}]\n    })\n\nfor stat in stats:\n    visibility = [initial_food in trace.name and stat in trace.name for trace in fig.data]\n    stat_buttons.append({\n        'label': stat,\n        'method': 'update',\n        'args': [{'visible': visibility},\n                 {'yaxis': {'title': stat.capitalize()}},\n                 {'title': f\"{stat.capitalize()} for {initial_food} by Region and Year\"}]\n    })\n\n# Update layout with separate dropdown menus\nfig.update_layout(\n    title=f\"{initial_stat.capitalize()} for {initial_food} by Region and Year\",\n    xaxis_title=\"Year\",\n    yaxis_title=initial_stat.capitalize(),\n    template=\"plotly_white\",\n    updatemenus=[\n        {\n            'buttons': food_buttons,\n            'direction': 'down',\n            'showactive': True,\n            'x': 0,\n            'xanchor': 'left',\n            'y': 1.15,\n            'yanchor': 'top',\n        },\n        {\n            'buttons': stat_buttons,\n            'direction': 'down',\n            'showactive': True,\n            'x': 0.26,\n            'xanchor': 'left',\n            'y': 1.15,\n            'yanchor': 'top',\n        }\n    ]\n)\n\n# Show figure\nfig.show()\n\n\n                                                \n\n\nThe graph shows the mean (average) price or median price of different food items over time for different regions in the Philippines. #### Key Observation 1. Trend - Generally, the price of all food items has been increasing over the years across most regions. There are some fluctuations and periods of stability for some items, but the overall trend is upward. 2. Regional Differences - There is significant variation in price of different food items across regions. Some regions consistently have higher prices than others. Price fluctuations also varies between regions. Some regions experience more volatile prices than others.\nFactors like weather patterns, government policies, agriculture changes, food transportation and global market trends can influence these prices.\nTo know which regions has the highest and lowest price every year for every food item, max, min will be calculated. Then range is next to know how wide the difference between the highest and lowest price.\n\n\nCode\nfile_path = \"../Data/Interim/cleaned_food_prices.csv\"\ndf_range = pd.read_csv(file_path)\n\n#dropping columns related to food price index\ndf_nofpi_range = df_range.drop(columns=['o_food_price_index', 'h_food_price_index', 'l_food_price_index', 'c_food_price_index', 'inflation_food_price_index', 'trust_food_price_index'])\n\n# Convert 'Date' column to datetime format\ndf_nofpi_range['Date'] = pd.to_datetime(df_nofpi_range['Date'])\n\n#dropping columns related to inflation\ndf_noinf_range = df_nofpi_range.drop(columns=['inflation_beans','inflation_cabbage', 'inflation_carrots', 'inflation_eggs', 'inflation_garlic', 'inflation_meat_beef_chops', 'inflation_meat_chicken_whole', 'inflation_meat_pork', 'inflation_onions', 'inflation_potatoes', 'inflation_rice', 'inflation_tomatoes'])\n\n#dropping columns related to trust scores\ndf_cleaned_range = df_noinf_range.drop(columns=['trust_beans','trust_cabbage', 'trust_carrots', 'trust_eggs', 'trust_garlic', 'trust_meat_beef_chops', 'trust_meat_chicken_whole', 'trust_meat_pork', 'trust_onions', 'trust_potatoes', 'trust_rice', 'trust_tomatoes'])\n\n#dropping uneeded columns\ndf_unneeded_range = df_cleaned_range.drop(columns=['country', 'City', 'lat', 'lon', 'Province', 'Date', 'month'])\n\n# Reshaping from wide to long format (including year and month as part of the identifier)\ndf_range = df_unneeded_range.melt(id_vars=['Region', 'year'], var_name='Food_Items', value_name='Price')\n\ndf_range_filtered = df_range[df_range['Food_Items'].str.startswith('c_')]\n\ndf_range_filtered.loc[:, 'Food_Items'] = df_range_filtered['Food_Items'].str.replace('c_', '', regex=True)\n\ndf_range_filtered\n\n\n\n\n    \n      \n      Region\n      year\n      Food_Items\n      Price\n    \n  \n\n\n    \n        \n        \n        \n        \n        \n        \n        \n        \n    \n    \n   \n    \n      \n  \n        \n    \n    \n  \n        \n    \n    \n  \n        \n    \n      \n  \n        \n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n        \n    \n\n\nLoading ITables v2.2.4 from the init_notebook_mode cell...\n(need help?)\n\n\n\n\n\n\n\nCode\n\n# Dropdown for selecting food items\nfood_items = df_range_filtered['Food_Items'].unique()\ndropdown = widgets.Dropdown(options=food_items, description=\"Food Item:\")\n\n# Output widget for displaying the plot\noutput = widgets.Output()\n\ndef update_plot(selected_food_item):\n    with output:\n        clear_output(wait=True)  # Ensure only one graph is displayed\n        filtered_dfr = df_range_filtered[df_range_filtered['Food_Items'] == selected_food_item]\n        price_stats = filtered_dfr.groupby('year')['Price'].agg(['min', 'max', 'mean']).reset_index()\n        \n        fig = go.Figure()\n        fig.add_trace(go.Scatter(x=price_stats['year'], y=price_stats['min'], mode='lines+markers', name='Min Price'))\n        fig.add_trace(go.Scatter(x=price_stats['year'], y=price_stats['max'], mode='lines+markers', name='Max Price'))\n        fig.add_trace(go.Scatter(x=price_stats['year'], y=price_stats['mean'], mode='lines+markers', name='Average Price'))\n        \n        fig.update_layout(\n            title=f'Min, Max, and Average Prices Per Year for {selected_food_item}',\n            xaxis_title='Year',\n            yaxis_title='Price',\n            legend_title='Price Type'\n        )\n        display(fig)  # Display updated graph\n\ndef on_dropdown_change(change):\n    update_plot(change['new'])\n\n# Attach event listener\ndropdown.observe(on_dropdown_change, names='value')\n\n# Display UI elements once\ndisplay(dropdown, output)\n\n# Show initial plot\nupdate_plot(food_items[0])\n\n\n\n\n\n\n\n\n\n\nCode\n# Dash app setup\napph = dash.Dash(__name__)\n\napph.layout = html.Div([\n    html.H3(\"Highest Prices Per Year by Region\"),\n    \n    # Dropdown for selecting food items\n    dcc.Dropdown(\n        id='food-item-dropdown',\n        options=[{'label': item, 'value': item} for item in df_range_filtered['Food_Items'].unique()],\n        value=df_range_filtered['Food_Items'].unique()[0],\n        placeholder=\"Select a food item\"\n    ),\n    \n    # Graph for displaying highest prices\n    dcc.Graph(id='highest-price-graph')\n])\n\n# Callback to update the graph based on selected food item\n@apph.callback(\n    Output('highest-price-graph', 'figure'),\n    [Input('food-item-dropdown', 'value')]\n)\ndef update_graph(selected_food_item):\n    # Filter data for the selected food item\n    filtered_dfr = df_range_filtered[df_range_filtered['Food_Items'] == selected_food_item]\n    \n    # Find the highest price per year and the corresponding region\n    highest_prices = (\n        filtered_dfr.loc[filtered_dfr.groupby('year')['Price'].idxmax()]\n        .reset_index(drop=True)\n    )\n    \n    # Create the bar chart\n    fig = px.bar(\n        highest_prices,\n        x='year',\n        y='Price',\n        color='Region',  # Highlight the region in the bar color\n        title=f'Highest Prices Per Year for {selected_food_item}',\n        labels={'Price': 'Price', 'year': 'year', 'Region': 'Region'}\n    )\n    \n    return fig\n\n# Run the app\nif __name__ == '__main__':\n    apph.run_server(debug=True, port=8051, mode='inline', name=\"apph\")\n\n\n\n        \n        \n\n\n\n\nCode\n# Dash app setup\nappl = dash.Dash(__name__)\n\nappl.layout = html.Div([\n    html.H3(\"lowest Prices Per Year by Region\"),\n    \n    # Dropdown for selecting food items\n    dcc.Dropdown(\n        id='food-item-dropdown',\n        options=[{'label': item, 'value': item} for item in df_range_filtered['Food_Items'].unique()],\n        value=df_range_filtered['Food_Items'].unique()[0],\n        placeholder=\"Select a food item\"\n    ),\n    \n    # Graph for displaying lowest prices\n    dcc.Graph(id='lowest-price-graph')\n])\n\n# Callback to update the graph based on selected food item\n@appl.callback(\n    Output('lowest-price-graph', 'figure'),\n    [Input('food-item-dropdown', 'value')]\n)\ndef update_graph(selected_food_item):\n    # Filter data for the selected food item\n    filtered_dfr = df_range_filtered[df_range_filtered['Food_Items'] == selected_food_item]\n    \n    # Find the lowest price per year and the corresponding region\n    lowest_prices = (\n        filtered_dfr.loc[filtered_dfr.groupby('year')['Price'].idxmin()]\n        .reset_index(drop=True)\n    )\n    \n    # Create the bar chart\n    fig = px.bar(\n        lowest_prices,\n        x='year',\n        y='Price',\n        color='Region',  # Highlight the region in the bar color\n        title=f'Lowest Prices Per Year for {selected_food_item}',\n        labels={'Price': 'Price', 'year': 'year', 'Region': 'Region'}\n    )\n    \n    return fig\n\n# Run the app, changing port to make it have different URL and not interfere with other app\nif __name__ == '__main__':\n    appl.run_server(debug=True, port=8052, mode='inline', name=\"appl\")\n\n\n\n        \n        \n\n\n\n\nCode\n# Dash App Setup\napprange = dash.Dash(__name__)\n\napprange.layout = html.Div([\n    html.H3(\"Price Range of Food Items per Year Across Regions\"),\n    \n    # Dropdown for selecting food items\n    dcc.Dropdown(\n        id='food-item-dropdown',\n        options=[{'label': item, 'value': item} for item in df_range_filtered['Food_Items'].unique()],\n        value=df_range_filtered['Food_Items'].unique()[0],\n        placeholder=\"Select a food item\"\n    ),\n    \n    # Graph for displaying the price range (min and max) per year\n    dcc.Graph(id='price-range-graph')\n])\n\n# Callback to update the graph based on selected food item\n@apprange.callback(\n    Output('price-range-graph', 'figure'),\n    [Input('food-item-dropdown', 'value')]\n)\ndef update_graph(selected_food_item):\n    # Filter data for the selected food item\n    filtered_df = df_range_filtered[df_range_filtered['Food_Items'] == selected_food_item]\n    \n    # Get the minimum and maximum price per year\n    price_range = (\n        filtered_df.groupby('year')['Price']\n        .agg(['min', 'max'])\n        .reset_index()\n    )\n    \n    # Create the graph (min and max prices as lines)\n    fig = px.line(\n        price_range, \n        x='year', \n        y=['min', 'max'], \n        title=f'Price Range (Min & Max) Per Year for {selected_food_item} Across Regions',\n        labels={'year': 'year', 'value': 'Price'},\n        line_shape='linear'\n    )\n    \n    return fig\n\n# Run the app\napprange.run_server(debug=True, port=8053, mode='inline', name=\"apprange\")\n\n\n\n        \n        \n\n\nKey Observations: 1. Overall Trend - Both the minimum and maximum prices show a general upward trend over the years, indicating an overall increase in the price of every food items. Some even recorded highest price increase on 2020, likely due to the COVID-19 pandemic and its impact on supply chains. 2. Price Range - The gap between the minimum and maximum prices for most items widens significantly in 2020 and 2021. This suggests that there were greater variations in prices across regions during these years.\nPosssible causes: 1. COVID-19 Pandemic - The pandemic disrupted supply chains and increased demand for certain food items, which could have led to price volatility. 2. Regional Differences - Differences in the impact of the pandemic on regional economies and agricultural production could have contributed to price variations.\nTo truly know if the regions really have price difference over the years, hypothesis testing must be done. Please refer to .._testing.ipynb to know why Kruskall-Wallis was used here.\n\n\nCode\n#open the csv file that was already analyzed with kruskall wallis test.\nhypothesis_results = \"../Data/Processed/hypothesis_testing_result.csv\"\nhyp_df = pd.read_csv(hypothesis_results)\n\n\n\n\nCode\n# View the first few rows of the dataset\nprint(hyp_df.head())\n\n\n   Year  Food_Item  H-statistic        p-value           Result\n0  2007      beans          NaN            NaN  Not Significant\n1  2007    c_beans  1077.368029  2.491117e-218      Significant\n2  2007  c_cabbage  1105.762042  2.066749e-224      Significant\n3  2007  c_carrots  1093.290901  9.693593e-222      Significant\n4  2007     c_eggs   905.101619  1.726764e-181      Significant\n\n\n\n\nCode\n# Filter the dataframe to keep only rows where 'food_item' starts with 'c_'\nhyp_df_filtered = hyp_df[hyp_df['Food_Item'].str.startswith('c_')]\n\nprint(hyp_df_filtered)\n\n\n      Year    Food_Item  H-statistic        p-value       Result\n1     2007      c_beans  1077.368029  2.491117e-218  Significant\n2     2007    c_cabbage  1105.762042  2.066749e-224  Significant\n3     2007    c_carrots  1093.290901  9.693593e-222  Significant\n4     2007       c_eggs   905.101619  1.726764e-181  Significant\n5     2007     c_garlic   393.719714   3.807277e-73  Significant\n...    ...          ...          ...            ...          ...\n1088  2025  c_meat_pork    44.757215   2.646148e-04  Significant\n1089  2025     c_onions   101.512409   4.662566e-14  Significant\n1090  2025   c_potatoes    90.632301   4.683642e-12  Significant\n1091  2025       c_rice    67.209085   6.484158e-08  Significant\n1092  2025   c_tomatoes    70.027332   2.133517e-08  Significant\n\n[228 rows x 5 columns]\n\n\n\n\nCode\n# removing prefix _c in the food items\nhyp_df_filtered.loc[:, 'Food_Item'] = hyp_df_filtered['Food_Item'].str.replace('c_', '', regex=True)\nprint(hyp_df_filtered)\n\n\n      Year  Food_Item  H-statistic        p-value       Result\n1     2007      beans  1077.368029  2.491117e-218  Significant\n2     2007    cabbage  1105.762042  2.066749e-224  Significant\n3     2007    carrots  1093.290901  9.693593e-222  Significant\n4     2007       eggs   905.101619  1.726764e-181  Significant\n5     2007     garlic   393.719714   3.807277e-73  Significant\n...    ...        ...          ...            ...          ...\n1088  2025  meat_pork    44.757215   2.646148e-04  Significant\n1089  2025     onions   101.512409   4.662566e-14  Significant\n1090  2025   potatoes    90.632301   4.683642e-12  Significant\n1091  2025       rice    67.209085   6.484158e-08  Significant\n1092  2025   tomatoes    70.027332   2.133517e-08  Significant\n\n[228 rows x 5 columns]\n\n\n\n\nCode\nyear_dropdown = widgets.Dropdown(\n    options=hyp_df_filtered[\"Year\"].unique(),\n    value=hyp_df_filtered[\"Year\"].min(),\n    description=\"Select Year:\",\n    style={'description_width': 'initial'}\n)\n\n# Output widget to display the table\noutput = widgets.Output()\n\ndef update_table(change):\n    with output:\n        output.clear_output()\n        display(hyp_df_filtered[hyp_df_filtered[\"Year\"] == year_dropdown.value])\n\n# Trigger update on change\nyear_dropdown.observe(update_table, names=\"value\")\n\n# Display widgets\ndisplay(year_dropdown, output)\n\n# Initial Table Display\nupdate_table(None)\n\n\n\n\n\n\n\n\n\n\nCode\n# or you can just count the number of unique Results\nhyp_df_filtered[\"Result\"].value_counts()\n\n\n\n\n    \n      \n      count\n    \n    \n      Result\n      \n    \n  \n\n\n    \n        \n        \n        \n        \n        \n        \n        \n        \n    \n    \n   \n    \n      \n  \n        \n    \n    \n  \n        \n    \n    \n  \n        \n    \n      \n  \n        \n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n\n            \n                \n                \n            \n        \n    \n\n\nLoading ITables v2.2.4 from the init_notebook_mode cell...\n(need help?)\n\n\n\n\n\nThis means all the items for all the regions over the year have different prices. But which regions have different prices?\n\n\nCode\n# Define the available items and years for the dropdowns\nitems = df_range_filtered['Food_Items'].unique().tolist()\nyears = df_range_filtered['year'].unique().tolist()\n\n# Step 1: Create the function that will update the graph based on selected item and year\ndef update_heatmap(selected_item, selected_year):\n    # Filter for the selected item and year\n    filter_df = df_range_filtered[(df_range_filtered['Food_Items'] == selected_item) & (df_range_filtered['year'] == selected_year)]\n    \n    # Perform Dunn's Test to check which regions differ\n    regions = filter_df['Region'].unique()\n    dunn_result = sp.posthoc_dunn(filter_df, val_col='Price', group_col='Region')\n\n    # Prepare heatmap data (p-values matrix)\n    p_values_matrix = np.zeros((len(regions), len(regions)))\n\n    for i, region1 in enumerate(regions):\n        for j, region2 in enumerate(regions):\n            if region1 != region2:\n                p_value = dunn_result.loc[region1, region2]\n                p_values_matrix[i, j] = p_value\n            else:\n                p_values_matrix[i, j] = np.nan  # No need for comparison within the same region\n\n    # Create a DataFrame for the heatmap using the regions as both rows and columns\n    heatmap_df = pd.DataFrame(p_values_matrix, columns=regions, index=regions)\n\n    # Replace NaN values with a large value (optional, to handle missing pairwise comparisons)\n    heatmap_df = heatmap_df.fillna(1.0)  # Optionally replace NaNs with 1 (indicating no comparison)\n\n    # Custom colorscale: green for 1 and red for 0\n    custom_colorscale = [\n        [0, \"darkred\"], # 0 -&gt; red\n        [0.166, \"red\"],\n        [0.332, \"lightcoral\"],\n        [0.5, \"yellow\"],\n        [0.66, \"palegreen\"],\n        [0.832, \"green\"],\n        [1, \"darkgreen\"]   # 1 -&gt; green  \n    ]\n\n    # Create the heatmap figure with custom colorscale\n    fig = go.Figure(data=go.Heatmap(\n        z=heatmap_df.values,\n        x=heatmap_df.columns,\n        y=heatmap_df.index,\n        colorscale=custom_colorscale,\n        colorbar=dict(title='p-value'),\n        zmin=0, zmax=1  # Normalize the range from 0 to 1\n    ))\n\n    # Update layout to improve axis labels and graph size\n    fig.update_layout(\n        title=f\"Dunn's Test p-values for {selected_item} in {selected_year} by Region\",\n        xaxis_title='Region',\n        yaxis_title='Region',\n        autosize=False,  # Disable autosize\n        width=800,  # Set width of the figure\n        height=800,  # Set height of the figure\n        margin=dict(l=100, r=100, t=100, b=100),  # Increase margins for better visibility\n        xaxis=dict(tickmode='array', tickvals=heatmap_df.columns, ticktext=heatmap_df.columns, tickangle=45),  # Rotate x-axis labels for better readability\n        yaxis=dict(tickmode='array', tickvals=heatmap_df.index, ticktext=heatmap_df.index, tickangle=0)  # Rotate y-axis labels for better readability\n    )\n\n    return fig\n\n# Step 2: Create the Dash app\nappDunns = dash.Dash(__name__)\n\n# Define the layout with dropdowns and the graph\nappDunns.layout = html.Div([\n    html.H3(\"Price Comparison Heatmap by Region\"),\n    \n    # Dropdown for selecting item\n    html.Label('Select Item:'),\n    dcc.Dropdown(\n        id='item-dropdown',\n        options=[{'label': item, 'value': item} for item in items],\n        value=items[0],  # default value\n        style={'width': '50%'}\n    ),\n    \n    # Dropdown for selecting year\n    html.Label('Select Year:'),\n    dcc.Dropdown(\n        id='year-dropdown',\n        options=[{'label': year, 'value': year} for year in years],\n        value=years[0],  # default value\n        style={'width': '50%'}\n    ),\n    \n    # Graph for showing the heatmap\n    dcc.Graph(id='heatmap-graph')\n])\n\n# Step 3: Create callback to update the heatmap based on dropdown selection\n@appDunns.callback(\n    dash.dependencies.Output('heatmap-graph', 'figure'),\n    [dash.dependencies.Input('item-dropdown', 'value'),\n     dash.dependencies.Input('year-dropdown', 'value')]\n)\ndef update_graph(selected_item, selected_year):\n    return update_heatmap(selected_item, selected_year)\n\n# Run the app\nif __name__ == '__main__':\n    appDunns.run_server(debug=True, port=8054, mode='inline', name=\"appDunns\")\n\n\n\n        \n        \n\n\nThis heatmap visualizes the results of a Dunn’s post-hoc test for significant differences in prices of different food items between regions across the years.  The color scale indicates the following: * Red (Close to 0): Indicates a statistically significant difference in bean prices between two regions. * Light Green to Yellow (Around 0.2 to 0.8): Suggests a possible difference, but not statistically significant based on the chosen significance level (typically 0.05) * Dark Green (Close to 0): Indicates no statistically significant difference in bean prices between the two regions.\n\n\n\n\nSignificant Differences Exist: The presence of so many red cells indicates that there are statistically significant differences in food prices in almost all regions at any given years.\nNo Significant Differences: patches of green indicate pairs of regions where the Dunn’s test did not find a statistically significant difference in food prices, but there are only few of them.\nMarket Average Comparison: The “Market Average” row/column allows you to see how each region’s prices compare to the overall average. Dark red cells in this row/column would indicate regions with prices significantly different from the market average.\n\nFood price Prediction 3 years into the future\n\n\nCode\n#dropping uneeded columns\ndf_unneeded_range = df_cleaned_range.drop(columns=['country', 'City', 'lat', 'lon', 'Province', 'year', 'month'])\n\n# Reshaping from wide to long format (including year and month as part of the identifier)\ndf_range = df_unneeded_range.melt(id_vars=['Region', 'Date'], var_name='Food_Items', value_name='Price')\n\ndf_range_filtered = df_range[df_range['Food_Items'].str.startswith('c_')]\n\ndf_range_filtered.loc[:, 'Food_Items'] = df_range_filtered['Food_Items'].str.replace('c_', '', regex=True)\n\n# Sort by date\ndf = df_range_filtered.sort_values(by=['Region', 'Date'])\n\n\n\n\nCode\n# Suppress specific warnings\nwarnings.filterwarnings(\"ignore\", category=UserWarning, module=\"sklearn\")\nwarnings.filterwarnings(\"ignore\", category=FutureWarning, module=\"sklearn\")\nwarnings.filterwarnings(\"ignore\", category=FutureWarning, module=\"pmdarima\")\nwarnings.filterwarnings(\"ignore\", category=DeprecationWarning, module=\"pmdarima\")\n\n\n# Convert date column to datetime\ndf['Date'] = pd.to_datetime(df['Date'])\n\n# Sort by date\ndf = df.sort_values(by=['Region', 'Date'])\n\n# Dropdown for interactive visualization\nregions = df['Region'].unique()\nitems = df['Food_Items'].unique()\n\nregion_dropdown = widgets.Dropdown(options=regions, description='Region:')\nitem_dropdown = widgets.Dropdown(options=items, description='Food Item:')\n\ndef preprocess_data(region, item):\n    region_df = df[(df['Region'] == region) & (df['Food_Items'] == item)]\n    region_df = (\n        region_df.groupby('Date', as_index=False)['Price']\n        .mean()  # Aggregate duplicate dates by averaging\n    )\n    region_df = region_df.set_index('Date').asfreq('MS')  # Ensure monthly frequency\n    region_df['Price'] = region_df['Price'].interpolate()  # Fill missing values\n    return region_df\n\ndef update_graph(region, item):\n    region_df = preprocess_data(region, item)\n\n    if len(region_df) &lt; 12:\n        print(f\"Not enough data for {region} - {item} to forecast.\")\n        return\n\n    # Use AutoARIMA to find the best model\n    model = auto_arima(region_df['Price'], seasonal=True, m=12, stepwise=True, trace=True, max_order=None, stationary=False)\n    \n    # Forecast the next 36 months\n    forecast = model.predict(n_periods=36)\n\n    # Plot the historical data and forecast\n    plt.figure(figsize=(12, 6))\n    plt.plot(region_df.index, region_df['Price'], label='Historical Prices')\n    plt.plot(pd.date_range(region_df.index[-1], periods=37, freq='MS')[1:], forecast, label='Forecast', linestyle='dashed', color='red')\n    plt.xlabel('Date')\n    plt.ylabel('Price')\n    plt.legend()\n    plt.title(f'Price Forecast for {region} - {item} (Next 36 Months)')\n    plt.show()\n\ninteractive_plot = widgets.interactive(update_graph, region=region_dropdown, item=item_dropdown)\ndisplay(interactive_plot)\n\n\n---------------------------------------------------------------------------\nKeyError                                  Traceback (most recent call last)\nCell In[223], line 30, in update_graph(selected_food_item='cabbage')\n     26 filtered_dfr = df_range_filtered[df_range_filtered['Food_Items'] == selected_food_item]\n     28 # Find the highest price per year and the corresponding region\n     29 highest_prices = (\n---&gt; 30     filtered_dfr.loc[filtered_dfr.groupby('year')['Price'].idxmax()]\n        highest_prices =                               Region  year Food_Items   Price\n0   Cordillera Administrative region  2007      beans   95.74\n1   Cordillera Administrative region  2008      beans  112.15\n2   Cordillera Administrative region  2009      beans  117.54\n3   Cordillera Administrative region  2010      beans  116.16\n4   Cordillera Administrative region  2011      beans  108.70\n5   Cordillera Administrative region  2012      beans  105.28\n6   Cordillera Administrative region  2013      beans  108.55\n7   Cordillera Administrative region  2014      beans  101.18\n8   Cordillera Administrative region  2015      beans  106.72\n9   Cordillera Administrative region  2016      beans  106.34\n10  Cordillera Administrative region  2017      beans  116.21\n11  Cordillera Administrative region  2018      beans  116.00\n12  Cordillera Administrative region  2019      beans  109.47\n13                         Region VI  2020      beans  206.06\n14                       Region IV-B  2021      beans  151.75\n15                       Region IV-B  2022      beans  131.95\n16                          Region X  2023      beans  133.52\n17  Cordillera Administrative region  2024      beans  130.00\n18  Cordillera Administrative region  2025      beans  124.01\n        filtered_dfr =                                   Region       Date Food_Items  Price\n449407  Cordillera Administrative region 2007-01-01    cabbage  26.26\n449408  Cordillera Administrative region 2007-02-01    cabbage  24.80\n449409  Cordillera Administrative region 2007-03-01    cabbage  24.33\n449410  Cordillera Administrative region 2007-04-01    cabbage  24.36\n449411  Cordillera Administrative region 2007-05-01    cabbage  24.68\n...                                  ...        ...        ...    ...\n473055                    Market Average 2024-09-01    cabbage  83.99\n473056                    Market Average 2024-10-01    cabbage  87.18\n473057                    Market Average 2024-11-01    cabbage  95.69\n473058                    Market Average 2024-12-01    cabbage  87.56\n473059                    Market Average 2025-01-01    cabbage  87.43\n\n[23653 rows x 4 columns]\n     31     .reset_index(drop=True)\n     32 )\n     34 # Create the bar chart\n     35 fig = px.bar(\n     36     highest_prices,\n     37     x='year',\n   (...)\n     41     labels={'Price': 'Price', 'year': 'year', 'Region': 'Region'}\n     42 )\n\nFile c:\\Users\\Admin\\Desktop\\personal_projects\\Data_Analysis\\.venv\\Lib\\site-packages\\pandas\\core\\frame.py:9183, in DataFrame.groupby(\n    self=                                  Region       D...01-01    cabbage  87.43\n\n[23653 rows x 4 columns],\n    by='year',\n    axis=0,\n    level=None,\n    as_index=True,\n    sort=True,\n    group_keys=True,\n    observed=&lt;no_default&gt;,\n    dropna=True\n)\n   9180 if level is None and by is None:\n   9181     raise TypeError(\"You have to supply one of 'by' and 'level'\")\n-&gt; 9183 return DataFrameGroupBy(\n        self =                                   Region       Date Food_Items  Price\n449407  Cordillera Administrative region 2007-01-01    cabbage  26.26\n449408  Cordillera Administrative region 2007-02-01    cabbage  24.80\n449409  Cordillera Administrative region 2007-03-01    cabbage  24.33\n449410  Cordillera Administrative region 2007-04-01    cabbage  24.36\n449411  Cordillera Administrative region 2007-05-01    cabbage  24.68\n...                                  ...        ...        ...    ...\n473055                    Market Average 2024-09-01    cabbage  83.99\n473056                    Market Average 2024-10-01    cabbage  87.18\n473057                    Market Average 2024-11-01    cabbage  95.69\n473058                    Market Average 2024-12-01    cabbage  87.56\n473059                    Market Average 2025-01-01    cabbage  87.43\n\n[23653 rows x 4 columns]\n        by = 'year'\n        axis = 0\n        level = None\n        as_index = True\n        sort = True\n        group_keys = True\n        observed = &lt;no_default&gt;\n        dropna = True\n   9184     obj=self,\n   9185     keys=by,\n   9186     axis=axis,\n   9187     level=level,\n   9188     as_index=as_index,\n   9189     sort=sort,\n   9190     group_keys=group_keys,\n   9191     observed=observed,\n   9192     dropna=dropna,\n   9193 )\n\nFile c:\\Users\\Admin\\Desktop\\personal_projects\\Data_Analysis\\.venv\\Lib\\site-packages\\pandas\\core\\groupby\\groupby.py:1329, in GroupBy.__init__(\n    self=&lt;pandas.core.groupby.generic.DataFrameGroupBy object&gt;,\n    obj=                                  Region       D...01-01    cabbage  87.43\n\n[23653 rows x 4 columns],\n    keys='year',\n    axis=0,\n    level=None,\n    grouper=None,\n    exclusions=None,\n    selection=None,\n    as_index=True,\n    sort=True,\n    group_keys=True,\n    observed=&lt;no_default&gt;,\n    dropna=True\n)\n   1326 self.dropna = dropna\n   1328 if grouper is None:\n-&gt; 1329     grouper, exclusions, obj = get_grouper(\n        obj =                                   Region       Date Food_Items  Price\n449407  Cordillera Administrative region 2007-01-01    cabbage  26.26\n449408  Cordillera Administrative region 2007-02-01    cabbage  24.80\n449409  Cordillera Administrative region 2007-03-01    cabbage  24.33\n449410  Cordillera Administrative region 2007-04-01    cabbage  24.36\n449411  Cordillera Administrative region 2007-05-01    cabbage  24.68\n...                                  ...        ...        ...    ...\n473055                    Market Average 2024-09-01    cabbage  83.99\n473056                    Market Average 2024-10-01    cabbage  87.18\n473057                    Market Average 2024-11-01    cabbage  95.69\n473058                    Market Average 2024-12-01    cabbage  87.56\n473059                    Market Average 2025-01-01    cabbage  87.43\n\n[23653 rows x 4 columns]\n        grouper = None\n        grouper, exclusions, obj = (None, None,                                   Region       Date Food_Items  Price\n449407  Cordillera Administrative region 2007-01-01    cabbage  26.26\n449408  Cordillera Administrative region 2007-02-01    cabbage  24.80\n449409  Cordillera Administrative region 2007-03-01    cabbage  24.33\n449410  Cordillera Administrative region 2007-04-01    cabbage  24.36\n449411  Cordillera Administrative region 2007-05-01    cabbage  24.68\n...                                  ...        ...        ...    ...\n473055                    Market Average 2024-09-01    cabbage  83.99\n473056                    Market Average 2024-10-01    cabbage  87.18\n473057                    Market Average 2024-11-01    cabbage  95.69\n473058                    Market Average 2024-12-01    cabbage  87.56\n473059                    Market Average 2025-01-01    cabbage  87.43\n\n[23653 rows x 4 columns])\n        exclusions = None\n        keys = 'year'\n        axis = 0\n        level = None\n        sort = True\n        lib.no_default = &lt;no_default&gt;\n        observed is lib.no_default = True\n        observed = &lt;no_default&gt;\n        lib = &lt;module 'pandas._libs.lib' from 'c:\\\\Users\\\\Admin\\\\Desktop\\\\personal_projects\\\\Data_Analysis\\\\.venv\\\\Lib\\\\site-packages\\\\pandas\\\\_libs\\\\lib.cp312-win_amd64.pyd'&gt;\n        self.dropna = True\n        self = &lt;pandas.core.groupby.generic.DataFrameGroupBy object at 0x0000024004023A10&gt;\n   1330         obj,\n   1331         keys,\n   1332         axis=axis,\n   1333         level=level,\n   1334         sort=sort,\n   1335         observed=False if observed is lib.no_default else observed,\n   1336         dropna=self.dropna,\n   1337     )\n   1339 if observed is lib.no_default:\n   1340     if any(ping._passed_categorical for ping in grouper.groupings):\n\nFile c:\\Users\\Admin\\Desktop\\personal_projects\\Data_Analysis\\.venv\\Lib\\site-packages\\pandas\\core\\groupby\\grouper.py:1043, in get_grouper(\n    obj=                                  Region       D...01-01    cabbage  87.43\n\n[23653 rows x 4 columns],\n    key='year',\n    axis=0,\n    level=None,\n    sort=True,\n    observed=False,\n    validate=True,\n    dropna=True\n)\n   1041         in_axis, level, gpr = False, gpr, None\n   1042     else:\n-&gt; 1043         raise KeyError(gpr)\n        gpr = 'year'\n   1044 elif isinstance(gpr, Grouper) and gpr.key is not None:\n   1045     # Add key to exclusions\n   1046     exclusions.add(gpr.key)\n\nKeyError: 'year'\n\n\n\n\n\n\n\n\n\n\nHistorical Price Volatility: The blue line representing historical prices shows significant fluctuations, especially noticeable spikes around 2008 and smaller ones in other years. This indicates that most food prices have been subject to considerable volatility over the past two decades.\nRecent Price Increase: There’s a clear upward trend in food prices in the period leading up to the forecast (roughly from 2020 to 2024). This suggests recent factors have been pushing prices higher.\nRelatively Stable Forecast: The red dashed line, representing the forecast for the next 36 months, shows a relatively stable and slightly upward trend. The model predicts a continued but moderated increase compared to the recent past.\n\n\n\n\n\nHistorical Volatility:\n\nWeather Patterns:adverse weather events in key agricultural regions can significantly impact supply and cause price volatility.\nChanges in Demand: Fluctuations in global demand, driven by population growth or economic factors, can also contribute to price swings.\n\nRecent Price Increase:\n\nInflation: General inflation in the economy could be pushing up agricultural commodity prices.\nSupply Chain Issues: Disruptions to global supply chains (e.g., due to pandemics, conflicts, or trade policies) can lead to shortages and price increases.\nIncreased Input Costs: Rising costs of fertilizers, fuel, and labor can increase the cost of food production, which could be passed on to consumers.\n\nRelatively Stable Forecast:\n\nModel Assumption: ARIMA models assume that, to some extent, future trends will resemble past patterns. The stable forecast suggests the model has not picked up any strong upward or downward pressures for the next 36 months beyond what is already captured in the recent trend."
  },
  {
    "objectID": "Philippine_food_price_Analysis_and_Visualization/Data/Processed/EDA.html",
    "href": "Philippine_food_price_Analysis_and_Visualization/Data/Processed/EDA.html",
    "title": "Start of analysis",
    "section": "",
    "text": "import pandas as pd\nimport numpy as np\nfrom scipy.stats import mode\n\n\n# Load dataset\nfile_path = \"../Interim/cleaned_food_prices.csv\"\ndf = pd.read_csv(file_path)\n\n\n# View the first few rows of the dataset\nprint(df.head())\n\n       country                            Region Province  City        lat  \\\n0  Philippines  Cordillera Administrative region     Abra  Abra  17.600651   \n1  Philippines  Cordillera Administrative region     Abra  Abra  17.600651   \n2  Philippines  Cordillera Administrative region     Abra  Abra  17.600651   \n3  Philippines  Cordillera Administrative region     Abra  Abra  17.600651   \n4  Philippines  Cordillera Administrative region     Abra  Abra  17.600651   \n\n          lon        Date  year  month  beans  ...  l_tomatoes  c_tomatoes  \\\n0  120.619362  2007-01-01  2007      1    NaN  ...       26.03       27.84   \n1  120.619362  2007-02-01  2007      2    NaN  ...       26.31       26.82   \n2  120.619362  2007-03-01  2007      3    NaN  ...       24.95       26.21   \n3  120.619362  2007-04-01  2007      4    NaN  ...       24.93       26.74   \n4  120.619362  2007-05-01  2007      5    NaN  ...       26.30       27.19   \n\n   inflation_tomatoes  trust_tomatoes  o_food_price_index  h_food_price_index  \\\n0                 NaN             8.0                0.68                0.69   \n1                 NaN             8.0                0.68                0.69   \n2                 NaN             8.0                0.66                0.67   \n3                 NaN             8.0                0.66                0.67   \n4                 NaN             8.0                0.67                0.68   \n\n   l_food_price_index  c_food_price_index  inflation_food_price_index  \\\n0                0.67                0.68                         NaN   \n1                0.67                0.67                         NaN   \n2                0.65                0.66                         NaN   \n3                0.65                0.66                         NaN   \n4                0.66                0.67                         NaN   \n\n   trust_food_price_index  \n0                     9.4  \n1                     9.4  \n2                     9.4  \n3                     9.4  \n4                     9.4  \n\n[5 rows x 99 columns]\n\n\n\n# Check the structure and datatypes\nprint(df.info())\n\n&lt;class 'pandas.core.frame.DataFrame'&gt;\nRangeIndex: 23653 entries, 0 to 23652\nData columns (total 99 columns):\n #   Column                        Non-Null Count  Dtype  \n---  ------                        --------------  -----  \n 0   country                       23653 non-null  object \n 1   Region                        23653 non-null  object \n 2   Province                      23653 non-null  object \n 3   City                          23653 non-null  object \n 4   lat                           23436 non-null  float64\n 5   lon                           23436 non-null  float64\n 6   Date                          23653 non-null  object \n 7   year                          23653 non-null  int64  \n 8   month                         23653 non-null  int64  \n 9   beans                         2384 non-null   float64\n 10  cabbage                       3696 non-null   float64\n 11  carrots                       3747 non-null   float64\n 12  eggs                          5391 non-null   float64\n 13  garlic                        3020 non-null   float64\n 14  meat_beef_chops               2702 non-null   float64\n 15  meat_chicken_whole            2601 non-null   float64\n 16  meat_pork                     2944 non-null   float64\n 17  onions                        5548 non-null   float64\n 18  potatoes                      3113 non-null   float64\n 19  rice                          6554 non-null   float64\n 20  tomatoes                      2399 non-null   float64\n 21  o_beans                       23653 non-null  float64\n 22  h_beans                       23653 non-null  float64\n 23  l_beans                       23653 non-null  float64\n 24  c_beans                       23653 non-null  float64\n 25  inflation_beans               22345 non-null  float64\n 26  trust_beans                   23653 non-null  float64\n 27  o_cabbage                     23653 non-null  float64\n 28  h_cabbage                     23653 non-null  float64\n 29  l_cabbage                     23653 non-null  float64\n 30  c_cabbage                     23653 non-null  float64\n 31  inflation_cabbage             22345 non-null  float64\n 32  trust_cabbage                 23653 non-null  float64\n 33  o_carrots                     23653 non-null  float64\n 34  h_carrots                     23653 non-null  float64\n 35  l_carrots                     23653 non-null  float64\n 36  c_carrots                     23653 non-null  float64\n 37  inflation_carrots             22345 non-null  float64\n 38  trust_carrots                 23653 non-null  float64\n 39  o_eggs                        23653 non-null  float64\n 40  h_eggs                        23653 non-null  float64\n 41  l_eggs                        23653 non-null  float64\n 42  c_eggs                        23653 non-null  float64\n 43  inflation_eggs                22345 non-null  float64\n 44  trust_eggs                    23653 non-null  float64\n 45  o_garlic                      23653 non-null  float64\n 46  h_garlic                      23653 non-null  float64\n 47  l_garlic                      23653 non-null  float64\n 48  c_garlic                      23653 non-null  float64\n 49  inflation_garlic              22345 non-null  float64\n 50  trust_garlic                  23653 non-null  float64\n 51  o_meat_beef_chops             23653 non-null  float64\n 52  h_meat_beef_chops             23653 non-null  float64\n 53  l_meat_beef_chops             23653 non-null  float64\n 54  c_meat_beef_chops             23653 non-null  float64\n 55  inflation_meat_beef_chops     22345 non-null  float64\n 56  trust_meat_beef_chops         23653 non-null  float64\n 57  o_meat_chicken_whole          23653 non-null  float64\n 58  h_meat_chicken_whole          23653 non-null  float64\n 59  l_meat_chicken_whole          23653 non-null  float64\n 60  c_meat_chicken_whole          23653 non-null  float64\n 61  inflation_meat_chicken_whole  22345 non-null  float64\n 62  trust_meat_chicken_whole      23653 non-null  float64\n 63  o_meat_pork                   23653 non-null  float64\n 64  h_meat_pork                   23653 non-null  float64\n 65  l_meat_pork                   23653 non-null  float64\n 66  c_meat_pork                   23653 non-null  float64\n 67  inflation_meat_pork           22345 non-null  float64\n 68  trust_meat_pork               23653 non-null  float64\n 69  o_onions                      23653 non-null  float64\n 70  h_onions                      23653 non-null  float64\n 71  l_onions                      23653 non-null  float64\n 72  c_onions                      23653 non-null  float64\n 73  inflation_onions              22345 non-null  float64\n 74  trust_onions                  23653 non-null  float64\n 75  o_potatoes                    23653 non-null  float64\n 76  h_potatoes                    23653 non-null  float64\n 77  l_potatoes                    23653 non-null  float64\n 78  c_potatoes                    23653 non-null  float64\n 79  inflation_potatoes            22345 non-null  float64\n 80  trust_potatoes                23653 non-null  float64\n 81  o_rice                        23653 non-null  float64\n 82  h_rice                        23653 non-null  float64\n 83  l_rice                        23653 non-null  float64\n 84  c_rice                        23653 non-null  float64\n 85  inflation_rice                22345 non-null  float64\n 86  trust_rice                    23653 non-null  float64\n 87  o_tomatoes                    23653 non-null  float64\n 88  h_tomatoes                    23653 non-null  float64\n 89  l_tomatoes                    23653 non-null  float64\n 90  c_tomatoes                    23653 non-null  float64\n 91  inflation_tomatoes            22345 non-null  float64\n 92  trust_tomatoes                23653 non-null  float64\n 93  o_food_price_index            23653 non-null  float64\n 94  h_food_price_index            23653 non-null  float64\n 95  l_food_price_index            23653 non-null  float64\n 96  c_food_price_index            23653 non-null  float64\n 97  inflation_food_price_index    22345 non-null  float64\n 98  trust_food_price_index        23653 non-null  float64\ndtypes: float64(92), int64(2), object(5)\nmemory usage: 17.9+ MB\nNone\n\n\n\n# Get summary statistics of numerical columns\nprint(df.describe())\n\n                lat           lon          year         month        beans  \\\ncount  23436.000000  23436.000000  23653.000000  23653.000000  2384.000000   \nmean      11.709358    122.876852   2015.543779      6.474654    98.049673   \nstd        3.640368      1.949177      5.216106      3.464248    15.231500   \nmin        5.029099    118.735278   2007.000000      1.000000    55.490000   \n25%        8.481003    121.086142   2011.000000      3.000000    87.162500   \n50%       11.570265    122.851105   2016.000000      6.000000    98.190000   \n75%       14.716339    124.667869   2020.000000      9.000000   107.500000   \nmax       18.194082    126.207645   2025.000000     12.000000   229.540000   \n\n          cabbage      carrots         eggs       garlic  meat_beef_chops  \\\ncount  3696.00000  3747.000000  5391.000000  3020.000000      2702.000000   \nmean     72.09049    91.267086     7.008577   169.917825       274.926121   \nstd      32.25439    37.874833     1.511605    60.216075        70.702813   \nmin       7.52000    14.200000     3.990000    80.910000       125.330000   \n25%      46.88000    62.395000     6.000000   131.250000       208.497500   \n50%      69.50000    85.670000     7.000000   150.600000       281.250000   \n75%      91.67500   115.660000     8.130000   187.805000       333.750000   \nmax     250.00000   236.250000    25.000000   594.440000       430.000000   \n\n       ...    l_tomatoes    c_tomatoes  inflation_tomatoes  trust_tomatoes  \\\ncount  ...  23653.000000  23653.000000        22345.000000    23653.000000   \nmean   ...     44.823604     47.712646            7.055514        8.519456   \nstd    ...     17.002781     19.381362           22.006638        0.824231   \nmin    ...      7.050000      7.830000          -75.960000        8.000000   \n25%    ...     34.000000     35.440000           -3.250000        8.000000   \n50%    ...     39.720000     41.240000            2.930000        8.000000   \n75%    ...     50.320000     53.540000           14.070000        9.100000   \nmax    ...    161.290000    209.830000          331.740000       10.000000   \n\n       o_food_price_index  h_food_price_index  l_food_price_index  \\\ncount        23653.000000        23653.000000        23653.000000   \nmean             0.976953            0.994561            0.959457   \nstd              0.221319            0.228211            0.215228   \nmin              0.640000            0.650000            0.610000   \n25%              0.820000            0.830000            0.800000   \n50%              0.910000            0.920000            0.890000   \n75%              1.070000            1.090000            1.050000   \nmax              1.810000            1.850000            1.740000   \n\n       c_food_price_index  inflation_food_price_index  trust_food_price_index  \ncount        23653.000000                22345.000000            23653.000000  \nmean             0.977137                    4.042098                9.521046  \nstd              0.223137                    6.929498                0.183176  \nmin              0.640000                  -17.670000                9.400000  \n25%              0.810000                   -0.720000                9.400000  \n50%              0.900000                    3.180000                9.400000  \n75%              1.070000                    7.570000                9.700000  \nmax              1.810000                   44.990000                9.900000  \n\n[8 rows x 94 columns]\n\n\n\n#dropping columns related to food price index\ndf_nofpi = df.drop(columns=['o_food_price_index', 'h_food_price_index', 'l_food_price_index', 'c_food_price_index', 'inflation_food_price_index', 'trust_food_price_index'])\n\n\n# Convert 'Date' column to datetime format\ndf_nofpi['Date'] = pd.to_datetime(df_nofpi['Date'])\n\n\n# Check the unique values of the 'Date' column (like ranges)\nprint(df_nofpi['Date'].min(), df_nofpi['Date'].max())\n\n2007-01-01 00:00:00 2025-01-01 00:00:00\n\n\n\n#dropping columns related to inflation\ndf_noinf = df_nofpi.drop(columns=['inflation_beans','inflation_cabbage', 'inflation_carrots', 'inflation_eggs', 'inflation_garlic', 'inflation_meat_beef_chops', 'inflation_meat_chicken_whole', 'inflation_meat_pork', 'inflation_onions', 'inflation_potatoes', 'inflation_rice', 'inflation_tomatoes'])\n\n\n#dropping columns related to trust scores\ndf_cleaned = df_noinf.drop(columns=['trust_beans','trust_cabbage', 'trust_carrots', 'trust_eggs', 'trust_garlic', 'trust_meat_beef_chops', 'trust_meat_chicken_whole', 'trust_meat_pork', 'trust_onions', 'trust_potatoes', 'trust_rice', 'trust_tomatoes'])\n\n\n# View the dataset after dropping columns\nprint(df_cleaned.head())\n\n       country                            Region Province  City        lat  \\\n0  Philippines  Cordillera Administrative region     Abra  Abra  17.600651   \n1  Philippines  Cordillera Administrative region     Abra  Abra  17.600651   \n2  Philippines  Cordillera Administrative region     Abra  Abra  17.600651   \n3  Philippines  Cordillera Administrative region     Abra  Abra  17.600651   \n4  Philippines  Cordillera Administrative region     Abra  Abra  17.600651   \n\n          lon       Date  year  month  beans  ...  l_potatoes  c_potatoes  \\\n0  120.619362 2007-01-01  2007      1    NaN  ...       34.28       35.26   \n1  120.619362 2007-02-01  2007      2    NaN  ...       34.21       34.21   \n2  120.619362 2007-03-01  2007      3    NaN  ...       33.13       33.83   \n3  120.619362 2007-04-01  2007      4    NaN  ...       33.09       33.85   \n4  120.619362 2007-05-01  2007      5    NaN  ...       33.44       34.56   \n\n   o_rice  h_rice  l_rice  c_rice  o_tomatoes  h_tomatoes  l_tomatoes  \\\n0   19.88   20.21   19.71   19.95       27.54       29.29       26.03   \n1   20.03   20.28   19.78   20.24       27.96       29.60       26.31   \n2   20.39   20.67   20.15   20.67       26.33       27.72       24.95   \n3   20.86   21.12   20.61   20.90       26.05       27.17       24.93   \n4   21.03   21.25   20.80   21.20       27.31       28.31       26.30   \n\n   c_tomatoes  \n0       27.84  \n1       26.82  \n2       26.21  \n3       26.74  \n4       27.19  \n\n[5 rows x 69 columns]\n\n\n\n#dropping uneeded columns\ndf_unneeded = df_cleaned.drop(columns=['country', 'City', 'lat', 'lon'])\n\n# Reshaping from wide to long format (including year and month as part of the identifier)\ndf_melted = df_unneeded.melt(id_vars=['Region', 'Province', 'Date', 'year', 'month'], var_name='Food_Items', value_name='Price')\n\n\n# View the dataset after reshaping\nprint(df_melted.head())\n\n                             Region Province       Date  year  month  \\\n0  Cordillera Administrative region     Abra 2007-01-01  2007      1   \n1  Cordillera Administrative region     Abra 2007-02-01  2007      2   \n2  Cordillera Administrative region     Abra 2007-03-01  2007      3   \n3  Cordillera Administrative region     Abra 2007-04-01  2007      4   \n4  Cordillera Administrative region     Abra 2007-05-01  2007      5   \n\n  Food_Items  Price  \n0      beans    NaN  \n1      beans    NaN  \n2      beans    NaN  \n3      beans    NaN  \n4      beans    NaN  \n\n\n\n1.Exploratory Data Analysis\n\nprint(df_melted['Region'].unique())\nprint(df_melted['Province'].unique())\nprint(df_melted['Food_Items'].unique())\n\n['Cordillera Administrative region' 'Region XIII' 'Region VI' 'Region V'\n 'Region III' 'Autonomous region in Muslim Mindanao' 'Region IV-A'\n 'Region VIII' 'Region VII' 'Region X' 'Region II' 'Region IV-B'\n 'Region XII' 'Region XI' 'Region I' 'National Capital region' 'Region IX'\n 'Market Average']\n['Abra' 'Agusan del Norte' 'Agusan del Sur' 'Aklan' 'Albay' 'Antique'\n 'Apayao' 'Aurora' 'Benguet' 'Basilan' 'Bataan' 'Batangas' 'Biliran'\n 'Bohol' 'Bukidnon' 'Bulacan' 'Nueva Ecija' 'Cagayan' 'Misamis Oriental'\n 'Oriental Mindoro' 'Camarines Norte' 'Masbate' 'Camiguin' 'Capiz'\n 'Catanduanes' 'Southern Leyte' 'Cavite' 'Cebu' 'North Cotabato'\n 'Maguindanao' 'Davao del Sur' 'Compostela Valley' 'Davao del Norte'\n 'Davao Oriental' 'Dinagat Islands' 'Eastern Samar' 'Guimaras' 'Ifugao'\n 'Ilocos Norte' 'Ilocos Sur' 'Iloilo' 'Isabela' 'Kalinga' 'South Cotabato'\n 'La Union' 'Laguna' 'Lanao del Norte' 'Lanao del Sur' 'Leyte'\n 'Pangasinan' 'Marinduque' 'Metropolitan Manila' 'Misamis Occidental'\n 'Mountain Province' 'Camarines Sur' 'Negros Occidental' 'Negros Oriental'\n 'Northern Samar' 'Nueva Vizcaya' 'Occidental Mindoro' 'Palawan' 'Quezon'\n 'Quirino' 'Rizal' 'Romblon' 'Samar' 'Sarangani' 'Siquijor' 'Sorsogon'\n 'Sultan Kudarat' 'Sulu' 'Surigao del Norte' 'Surigao del Sur' 'Tarlac'\n 'Tawi-Tawi' 'Zambales' 'Zamboanga del Sur' 'Zamboanga del Norte'\n 'Zamboanga Sibugay' 'Market Average']\n['beans' 'cabbage' 'carrots' 'eggs' 'garlic' 'meat_beef_chops'\n 'meat_chicken_whole' 'meat_pork' 'onions' 'potatoes' 'rice' 'tomatoes'\n 'o_beans' 'h_beans' 'l_beans' 'c_beans' 'o_cabbage' 'h_cabbage'\n 'l_cabbage' 'c_cabbage' 'o_carrots' 'h_carrots' 'l_carrots' 'c_carrots'\n 'o_eggs' 'h_eggs' 'l_eggs' 'c_eggs' 'o_garlic' 'h_garlic' 'l_garlic'\n 'c_garlic' 'o_meat_beef_chops' 'h_meat_beef_chops' 'l_meat_beef_chops'\n 'c_meat_beef_chops' 'o_meat_chicken_whole' 'h_meat_chicken_whole'\n 'l_meat_chicken_whole' 'c_meat_chicken_whole' 'o_meat_pork' 'h_meat_pork'\n 'l_meat_pork' 'c_meat_pork' 'o_onions' 'h_onions' 'l_onions' 'c_onions'\n 'o_potatoes' 'h_potatoes' 'l_potatoes' 'c_potatoes' 'o_rice' 'h_rice'\n 'l_rice' 'c_rice' 'o_tomatoes' 'h_tomatoes' 'l_tomatoes' 'c_tomatoes']\n\n\n\nMeasures of Central Tendency\n\ngrouped = df_melted.groupby(['Region', 'Province', 'Food_Items', 'year'])\nprint(grouped)\n\n&lt;pandas.core.groupby.generic.DataFrameGroupBy object at 0x000001CD933A4BF0&gt;\n\n\n\nmean and median\n\ncentral_tendency = grouped['Price'].agg(['mean', 'median']).reset_index()\nprint(central_tendency)\n\n                                     Region         Province Food_Items  year  \\\n0      Autonomous region in Muslim Mindanao          Basilan      beans  2007   \n1      Autonomous region in Muslim Mindanao          Basilan      beans  2008   \n2      Autonomous region in Muslim Mindanao          Basilan      beans  2009   \n3      Autonomous region in Muslim Mindanao          Basilan      beans  2010   \n4      Autonomous region in Muslim Mindanao          Basilan      beans  2011   \n...                                     ...              ...        ...   ...   \n91195                           Region XIII  Surigao del Sur   tomatoes  2021   \n91196                           Region XIII  Surigao del Sur   tomatoes  2022   \n91197                           Region XIII  Surigao del Sur   tomatoes  2023   \n91198                           Region XIII  Surigao del Sur   tomatoes  2024   \n91199                           Region XIII  Surigao del Sur   tomatoes  2025   \n\n          mean  median  \n0          NaN     NaN  \n1          NaN     NaN  \n2          NaN     NaN  \n3          NaN     NaN  \n4          NaN     NaN  \n...        ...     ...  \n91195  55.4925  55.545  \n91196  64.5000  60.000  \n91197  73.5000  77.500  \n91198  61.7200  61.250  \n91199      NaN     NaN  \n\n[91200 rows x 6 columns]\n\n\n\n\nmode\n\n#calculate mode\ndef calculate_mode(series):\n    # Drop NaN values\n    valid_values = series.dropna()\n    \n    if valid_values.empty:  # If no valid values, return NaN\n        return np.nan\n    \n    # Compute the mode\n    result = mode(valid_values)\n    \n    # Handle cases where result.mode might be scalar\n    if isinstance(result.mode, np.ndarray) and len(result.mode) &gt; 0:\n        return result.mode[0]\n    elif np.isscalar(result.mode):  # For scalar mode\n        return result.mode\n    else:\n        return np.nan\n\ncentral_tendency['Mode'] = grouped['Price'].transform(calculate_mode)\n\n\nprint(central_tendency)\n\n                                     Region         Province Food_Items  year  \\\n0      Autonomous region in Muslim Mindanao          Basilan      beans  2007   \n1      Autonomous region in Muslim Mindanao          Basilan      beans  2008   \n2      Autonomous region in Muslim Mindanao          Basilan      beans  2009   \n3      Autonomous region in Muslim Mindanao          Basilan      beans  2010   \n4      Autonomous region in Muslim Mindanao          Basilan      beans  2011   \n...                                     ...              ...        ...   ...   \n91195                           Region XIII  Surigao del Sur   tomatoes  2021   \n91196                           Region XIII  Surigao del Sur   tomatoes  2022   \n91197                           Region XIII  Surigao del Sur   tomatoes  2023   \n91198                           Region XIII  Surigao del Sur   tomatoes  2024   \n91199                           Region XIII  Surigao del Sur   tomatoes  2025   \n\n          mean  median  Mode  \n0          NaN     NaN   NaN  \n1          NaN     NaN   NaN  \n2          NaN     NaN   NaN  \n3          NaN     NaN   NaN  \n4          NaN     NaN   NaN  \n...        ...     ...   ...  \n91195  55.4925  55.545   NaN  \n91196  64.5000  60.000   NaN  \n91197  73.5000  77.500   NaN  \n91198  61.7200  61.250   NaN  \n91199      NaN     NaN   NaN  \n\n[91200 rows x 7 columns]\n\n\n\n\n\nMeasures of Dispersion\n\nRange\n\n#dropping uneeded columns\ndf_unneeded = df_cleaned.drop(columns=['country', 'City', 'lat', 'lon', 'Region', 'Province', 'Date', 'month'])\n\n# Reshaping from wide to long format (including year and month as part of the identifier)\ndf_melted = df_unneeded.melt(id_vars=['year'], var_name='Food_Items', value_name='Price')\n\ngrouped_range = df_melted.groupby(['Food_Items', 'year'])\nrange_df = grouped_range['Price'].agg(lambda x: x.max() - x.min()).reset_index()\nrange_df.rename(columns={'Price': 'Range'}, inplace=True)\n\n\n# Save cleaned data to a CSV file\nrange_df.to_csv(\"range_results.csv\", index=False)\n\n\n\nVariance and Standard Deviation\n\ndispersion_df = grouped['Price'].agg(['var', 'std']).reset_index()\ndispersion_df.rename(columns={'var': 'Variance', 'std': 'Standard Deviation'}, inplace=True)\n\n\n\nInterquartile Range\n\ndef compute_iqr(series):\n    q1 = series.quantile(0.25)\n    q3 = series.quantile(0.75)\n    return q3 - q1\n\niqr_df = grouped['Price'].agg(compute_iqr).reset_index()\niqr_df.rename(columns={'Price': 'IQR'}, inplace=True)\n\n\n\ncombine all into one DataFrame\n\ndispersion_merge_df = pd.merge(central_tendency, dispersion_df, on=['Region', 'Province', 'Food_Items', 'year'])\nfinal_eda_df = pd.merge(dispersion_merge_df, iqr_df, on=['Region', 'Province', 'Food_Items', 'year'])\n\n\nprint(final_eda_df)\n\n                                     Region         Province Food_Items  year  \\\n0      Autonomous region in Muslim Mindanao          Basilan      beans  2007   \n1      Autonomous region in Muslim Mindanao          Basilan      beans  2008   \n2      Autonomous region in Muslim Mindanao          Basilan      beans  2009   \n3      Autonomous region in Muslim Mindanao          Basilan      beans  2010   \n4      Autonomous region in Muslim Mindanao          Basilan      beans  2011   \n...                                     ...              ...        ...   ...   \n91195                           Region XIII  Surigao del Sur   tomatoes  2021   \n91196                           Region XIII  Surigao del Sur   tomatoes  2022   \n91197                           Region XIII  Surigao del Sur   tomatoes  2023   \n91198                           Region XIII  Surigao del Sur   tomatoes  2024   \n91199                           Region XIII  Surigao del Sur   tomatoes  2025   \n\n          mean  median  Mode    Variance  Standard Deviation      IQR  \n0          NaN     NaN   NaN         NaN                 NaN      NaN  \n1          NaN     NaN   NaN         NaN                 NaN      NaN  \n2          NaN     NaN   NaN         NaN                 NaN      NaN  \n3          NaN     NaN   NaN         NaN                 NaN      NaN  \n4          NaN     NaN   NaN         NaN                 NaN      NaN  \n...        ...     ...   ...         ...                 ...      ...  \n91195  55.4925  55.545   NaN  112.334092           10.598778  15.7225  \n91196  64.5000  60.000   NaN   73.906250            8.596874   8.7500  \n91197  73.5000  77.500   NaN  202.656250           14.235738  17.5000  \n91198  61.7200  61.250   NaN  183.125267           13.532378  20.1550  \n91199      NaN     NaN   NaN         NaN                 NaN      NaN  \n\n[91200 rows x 10 columns]\n\n\n\n# Save cleaned data to a CSV file\nfinal_eda_df.to_csv(\"eda_results.csv\", index=False)"
  },
  {
    "objectID": "Philippine_food_price_Analysis_and_Visualization/Data/External/food_prices_scraper.html",
    "href": "Philippine_food_price_Analysis_and_Visualization/Data/External/food_prices_scraper.html",
    "title": "N. V. Decio",
    "section": "",
    "text": "import requests\nimport pandas as pd\n\n\n# API URL and parameters\nurl = \"https://microdata.worldbank.org/index.php/api/tables/data/fcv/wld_2021_rtfp_v02_m\"\nlimit = 99  # Server-enforced limit\ncountry = 'Philippines'\n\n\n# Function to fetch all data\ndef fetch_all_data(url, limit):\n    data = []\n    offset = 0\n    total_records = None\n\n    while True:\n        # Make API request\n        response = requests.get(url, params={'limit': limit, 'offset': offset, 'country': country})\n        response.raise_for_status()\n        response_data = response.json()\n\n        # Extract data from 'data' key\n        batch_data = response_data.get('data', [])\n        \n        if not batch_data:\n            # Exit loop if no more data is returned\n            print(\"No more data to fetch.\")\n            break\n\n        # If this is the first response, check the total records\n        if total_records is None:\n            total_records = response_data.get('found', None)\n            if total_records:\n                print(f\"Total records available: {total_records}\")\n        \n        # Add fetched data to the main list\n        data.extend(batch_data)\n        print(f\"Fetched {len(batch_data)} rows. Total fetched so far: {len(data)}\")\n\n        # Break if we've fetched all available data (based on the 'total' field if available)\n        if total_records and len(data) &gt;= total_records:\n            print(\"Fetched all available records.\")\n            break\n        \n        # Increment offset\n        offset += limit\n\n    return data\n\n\n# Fetch the whole dataset\nall_data = fetch_all_data(url, limit)\n\n\n# Convert to a DataFrame\ndf = pd.DataFrame(all_data)\nprint(f\"Total rows fetched: {len(df)}\")\n\n\n# Save to CSV\ndf.to_csv('full_dataset.csv', index=False)\nprint(\"All data saved to full_dataset.csv\")"
  },
  {
    "objectID": "DataCamp data analyst asociate practical exam/DA_Assoc_Practical_Exam.html",
    "href": "DataCamp data analyst asociate practical exam/DA_Assoc_Practical_Exam.html",
    "title": "Practical Exam: Grocery Store Sales",
    "section": "",
    "text": "FoodYum is a grocery store chain that is based in the United States.\nFood Yum sells items such as produce, meat, dairy, baked goods, snacks, and other household food staples.\nAs food costs rise, FoodYum wants to make sure it keeps stocking products in all categories that cover a range of prices to ensure they have stock for a broad range of customers."
  },
  {
    "objectID": "DataCamp data analyst asociate practical exam/DA_Assoc_Practical_Exam.html#data",
    "href": "DataCamp data analyst asociate practical exam/DA_Assoc_Practical_Exam.html#data",
    "title": "Practical Exam: Grocery Store Sales",
    "section": "Data",
    "text": "Data\nThe data is available in the table products.\nThe dataset contains records of customers for their last full year of the loyalty program.\n\n\n\n\n\n\n\nColumn Name\nCriteria\n\n\n\n\nproduct_id\nNominal. The unique identifier of the product. Missing values are not possible due to the database structure.\n\n\nproduct_type\nNominal. The product category type of the product, one of 5 values (Produce, Meat, Dairy, Bakery, Snacks). Missing values should be replaced with “Unknown”.\n\n\nbrand\nNominal. The brand of the product. One of 7 possible values. Missing values should be replaced with “Unknown”.\n\n\nweight\nContinuous. The weight of the product in grams. This can be any positive value, rounded to 2 decimal places. Missing values should be replaced with the overall median weight.\n\n\nprice\nContinuous. The price the product is sold at, in US dollars. This can be any positive value, rounded to 2 decimal places. Missing values should be replaced with the overall median price.\n\n\naverage_units_sold\nDiscrete. The average number of units sold each month. This can be any positive integer value. Missing values should be replaced with 0.\n\n\nyear_added\nNominal. The year the product was first added to FoodYum stock.Missing values should be replaced with 2022.\n\n\nstock_location\nNominal. The location that stock originates. This can be one of four warehouse locations, A, B, C or D Missing values should be replaced with “Unknown”."
  },
  {
    "objectID": "Analyzing Motorcycle parts sale/notebook.html",
    "href": "Analyzing Motorcycle parts sale/notebook.html",
    "title": "portfolio_website",
    "section": "",
    "text": "Parked motorcycle\nYou’re working for a company that sells motorcycle parts, and they’ve asked for some help in analyzing their sales data!\nThey operate three warehouses in the area, selling both retail and wholesale. They offer a variety of parts and accept credit cards, cash, and bank transfer as payment methods. However, each payment type incurs a different fee.\nThe board of directors wants to gain a better understanding of wholesale revenue by product line, and how this varies month-to-month and across warehouses. You have been tasked with calculating net revenue for each product line and grouping results by month and warehouse. The results should be filtered so that only \"Wholesale\" orders are included.\nThey have provided you with access to their database, which contains the following table called sales:"
  },
  {
    "objectID": "Analyzing Motorcycle parts sale/notebook.html#sales",
    "href": "Analyzing Motorcycle parts sale/notebook.html#sales",
    "title": "portfolio_website",
    "section": "Sales",
    "text": "Sales\n\n\n\n\n\n\n\n\nColumn\nData type\nDescription\n\n\n\n\norder_number\nVARCHAR\nUnique order number.\n\n\ndate\nDATE\nDate of the order, from June to August 2021.\n\n\nwarehouse\nVARCHAR\nThe warehouse that the order was made from— North, Central, or West.\n\n\nclient_type\nVARCHAR\nWhether the order was Retail or Wholesale.\n\n\nproduct_line\nVARCHAR\nType of product ordered.\n\n\nquantity\nINT\nNumber of products ordered.\n\n\nunit_price\nFLOAT\nPrice per product (dollars).\n\n\ntotal\nFLOAT\nTotal price of the order (dollars).\n\n\npayment\nVARCHAR\nPayment method—Credit card, Transfer, or Cash.\n\n\npayment_fee\nFLOAT\nPercentage of total charged as a result of the payment method.\n\n\n\nYour query output should be presented in the following format:\n\n\n\n\n\n\n\n\n\nproduct_line\nmonth\nwarehouse\nnet_revenue\n\n\n\n\nproduct_one\n—\n—\n—\n\n\nproduct_one\n—\n—\n—\n\n\nproduct_one\n—\n—\n—\n\n\nproduct_one\n—\n—\n—\n\n\nproduct_one\n—\n—\n—\n\n\nproduct_one\n—\n—\n—\n\n\nproduct_two\n—\n—\n—\n\n\n…\n…\n…\n…\n\n\n\n::: {#ff58f388 .cell customType=‘sql’ dataFrameVariableName=‘revenue_by_product_line’ executionCancelledAt=‘null’ executionTime=‘842’ initial=‘false’ integrationId=‘89e17161-a224-4a8a-846b-0adc0fe7a4b1’ lastExecutedAt=‘1703148380931’ lastScheduledRunId=‘null’ lastSuccessfullyExecutedCode=’– Start coding here\nSELECT * FROM sales;’ execution_count=8}\nSELECT *\nFROM sales;\n\n\n\n\n\n\n\n\norder_number\ndate\nwarehouse\nclient_type\nproduct_line\nquantity\nunit_price\ntotal\npayment\npayment_fee\n\n\n\n\n0\nN1\n2021-06-01 00:00:00+00:00\nNorth\nRetail\nBreaking system\n9\n19.29\n173.61\nCash\n0.00\n\n\n1\nN2\n2021-06-01 00:00:00+00:00\nNorth\nRetail\nSuspension & traction\n8\n32.93\n263.45\nCredit card\n0.03\n\n\n2\nN3\n2021-06-01 00:00:00+00:00\nNorth\nWholesale\nFrame & body\n16\n37.84\n605.44\nTransfer\n0.01\n\n\n3\nN4\n2021-06-01 00:00:00+00:00\nNorth\nWholesale\nSuspension & traction\n40\n37.37\n1494.80\nTransfer\n0.01\n\n\n4\nN5\n2021-06-01 00:00:00+00:00\nNorth\nRetail\nFrame & body\n6\n45.44\n272.61\nCredit card\n0.03\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n995\nW176\n2021-08-27 00:00:00+00:00\nWest\nRetail\nElectrical system\n4\n21.47\n85.89\nCredit card\n0.03\n\n\n996\nW177\n2021-08-28 00:00:00+00:00\nWest\nWholesale\nMiscellaneous\n32\n25.42\n813.44\nTransfer\n0.01\n\n\n997\nW178\n2021-08-28 00:00:00+00:00\nWest\nRetail\nElectrical system\n6\n28.37\n170.21\nCredit card\n0.03\n\n\n998\nW179\n2021-08-28 00:00:00+00:00\nWest\nWholesale\nBreaking system\n32\n10.03\n320.96\nTransfer\n0.01\n\n\n999\nW180\n2021-08-28 00:00:00+00:00\nWest\nWholesale\nElectrical system\n12\n32.80\n393.64\nTransfer\n0.01\n\n\n\n\n1000 rows × 10 columns\n\n\n:::\n\nSELECT product_line,\n       CASE WHEN EXTRACT('month' from date) = 6 THEN 'June'\n       WHEN EXTRACT('month' from date) = 7 THEN 'July'\n       WHEN EXTRACT('month' from date) = 8 THEN 'August'\n       END AS month,\n       warehouse,\n       ROUND(SUM(total * (1 - payment_fee))::numeric, 2) AS net_revenue\nFROM sales\nWHERE client_type = 'Wholesale'\nGROUP BY product_line, warehouse, month\nORDER BY product_line ASC, month ASC, net_revenue DESC;\n\n\n\n\n\n\n\n\nproduct_line\nmonth\nwarehouse\nnet_revenue\n\n\n\n\n0\nBreaking system\nAugust\nCentral\n3009.10\n\n\n1\nBreaking system\nAugust\nWest\n2475.71\n\n\n2\nBreaking system\nAugust\nNorth\n1753.19\n\n\n3\nBreaking system\nJuly\nCentral\n3740.94\n\n\n4\nBreaking system\nJuly\nWest\n3030.39\n\n\n5\nBreaking system\nJuly\nNorth\n2568.55\n\n\n6\nBreaking system\nJune\nCentral\n3648.14\n\n\n7\nBreaking system\nJune\nNorth\n1472.93\n\n\n8\nBreaking system\nJune\nWest\n1200.64\n\n\n9\nElectrical system\nAugust\nNorth\n4673.99\n\n\n10\nElectrical system\nAugust\nCentral\n3095.22\n\n\n11\nElectrical system\nAugust\nWest\n1229.45\n\n\n12\nElectrical system\nJuly\nCentral\n5521.94\n\n\n13\nElectrical system\nJuly\nNorth\n1693.06\n\n\n14\nElectrical system\nJuly\nWest\n444.98\n\n\n15\nElectrical system\nJune\nCentral\n2875.93\n\n\n16\nElectrical system\nJune\nNorth\n2002.30\n\n\n17\nEngine\nAugust\nCentral\n9433.48\n\n\n18\nEngine\nAugust\nNorth\n2300.96\n\n\n19\nEngine\nJuly\nCentral\n1808.77\n\n\n20\nEngine\nJuly\nNorth\n997.08\n\n\n21\nEngine\nJune\nCentral\n6483.40\n\n\n22\nFrame & body\nAugust\nCentral\n8571.50\n\n\n23\nFrame & body\nAugust\nNorth\n7819.95\n\n\n24\nFrame & body\nAugust\nWest\n821.40\n\n\n25\nFrame & body\nJuly\nNorth\n6093.11\n\n\n26\nFrame & body\nJuly\nCentral\n3103.82\n\n\n27\nFrame & body\nJune\nCentral\n5060.29\n\n\n28\nFrame & body\nJune\nNorth\n4861.08\n\n\n29\nFrame & body\nJune\nWest\n2751.96\n\n\n30\nMiscellaneous\nAugust\nNorth\n1823.03\n\n\n31\nMiscellaneous\nAugust\nCentral\n1722.40\n\n\n32\nMiscellaneous\nAugust\nWest\n805.31\n\n\n33\nMiscellaneous\nJuly\nCentral\n3087.31\n\n\n34\nMiscellaneous\nJuly\nNorth\n2380.63\n\n\n35\nMiscellaneous\nJuly\nWest\n1145.26\n\n\n36\nMiscellaneous\nJune\nWest\n2258.20\n\n\n37\nMiscellaneous\nJune\nCentral\n1859.34\n\n\n38\nMiscellaneous\nJune\nNorth\n508.86\n\n\n39\nSuspension & traction\nAugust\nCentral\n5362.59\n\n\n40\nSuspension & traction\nAugust\nNorth\n4874.51\n\n\n41\nSuspension & traction\nAugust\nWest\n1069.99\n\n\n42\nSuspension & traction\nJuly\nCentral\n6392.23\n\n\n43\nSuspension & traction\nJuly\nNorth\n3677.21\n\n\n44\nSuspension & traction\nJuly\nWest\n2909.98\n\n\n45\nSuspension & traction\nJune\nNorth\n7985.17\n\n\n46\nSuspension & traction\nJune\nCentral\n3291.80\n\n\n47\nSuspension & traction\nJune\nWest\n2348.83"
  },
  {
    "objectID": "Analyzing Carbon Footprints/notebook.html",
    "href": "Analyzing Carbon Footprints/notebook.html",
    "title": "Analyzing Carbon Footprints in SQL",
    "section": "",
    "text": "Greenhouse gas emissions attributable to products—from food to sneakers to appliances—make up more than 75% of global emissions.\nCite: The Carbon Catalogue\nThe dataset, which is publicly availably on nature.com, stores product carbon footprints (PCFs) for various companies. PCFs are the greenhouse gas emissions attributable to a given product, measured in CO2e (carbon dioxide equivalent)."
  },
  {
    "objectID": "Analyzing Carbon Footprints/notebook.html#coca-colas-emissions",
    "href": "Analyzing Carbon Footprints/notebook.html#coca-colas-emissions",
    "title": "Analyzing Carbon Footprints in SQL",
    "section": "1: Coca-Cola’s emissions",
    "text": "1: Coca-Cola’s emissions\nFirst, let’s look at a small subset of the data: emissions reported by Coca-Cola. Coke is actually made up of multiple companies around the globe, so we’ll make sure our query returns data for any company name that starts with “Coca-Cola”. Coke used to report for every single different product it has, so we will limit the results to six.\n\nSelect all fields from the product_emissions table where the company name begins with “Coca-Cola”, limiting to the first six results.\n\n\n-- Select all fields where the company name is Coca-Cola, limiting to the first six results\nSELECT *\nFROM product_emissions\nWHERE company LIKE 'Coca-Cola%'\nLIMIT 6;\n\n\n\n\n\n\n\n\nid\nyear\nproduct_name\ncompany\ncountry\nindustry_group\nweight_kg\ncarbon_footprint_pcf\nupstream_percent_total_pcf\noperations_percent_total_pcf\ndownstream_percent_total_pcf\n\n\n\n\n0\n22710-1-2014\n2014\nCoca-Cola (all packaging and sizes)\nCoca-Cola HBC AG\nSwitzerland\nFood, Beverage & Tobacco\n1.093\n0.1673\n84.28%\n11.12%\n4.60%\n\n\n1\n22710-1-2015\n2015\nCoca-Cola (all packaging and sizes)\nCoca-Cola HBC AG\nSwitzerland\nFood & Beverage Processing\n1.093\n0.1580\n38.37%\n12.71%\n48.93%\n\n\n2\n22710-1-2016\n2016\nCoca-Cola (all packaging and sizes)\nCoca-Cola HBC AG\nSwitzerland\nFood, Beverage & Tobacco\n1.093\n0.1470\n42.17%\n10.98%\n46.85%\n\n\n3\n3565-10-2013\n2013\nCoke Zero 330 ml glass bottle\nCoca-Cola Enterprises, Inc.\nUSA\nFood, Beverage & Tobacco\n0.541\n0.3400\n73.95%\n3.42%\n22.63%\n\n\n4\n3565-11-2013\n2013\nCoke Zero 500ml PET\nCoca-Cola Enterprises, Inc.\nUSA\nFood, Beverage & Tobacco\n0.541\n0.2200\n52.09%\n12.32%\n35.59%\n\n\n5\n3565-1-2013\n2013\nCoca-Cola 300ml can\nCoca-Cola Enterprises, Inc.\nUSA\nFood, Beverage & Tobacco\n0.300\n0.1700\n69.76%\n7.00%\n23.24%\n\n\n\n\n\n\n\n\nA little background:\n\nUpstream emissions: emissions that occur before the company’s own operations such as emissions created by manufacturing bottles that Coke buys from suppliers\nOperations emissions: emissions that the company creates directly, such as when Coke is bottling its product\nDownstream emissions: emissions that occur after the product leaves the company, such as after Coke has sold drinks to McDonald’s"
  },
  {
    "objectID": "Analyzing Carbon Footprints/notebook.html#most-recent-data",
    "href": "Analyzing Carbon Footprints/notebook.html#most-recent-data",
    "title": "Analyzing Carbon Footprints in SQL",
    "section": "2: Most recent data",
    "text": "2: Most recent data\nWe’ll focus on recent emissions data during this code-along. When was the most recent data collected?\n\nReturn the most recent year for which data was collected.\n\n\n-- Return the most recent year for which data was collected\nSELECT MAX(year)\nFROM product_emissions;\n\n\n\n\n\n\n\n\nmax\n\n\n\n\n0\n2017"
  },
  {
    "objectID": "Analyzing Carbon Footprints/notebook.html#targeting-major-emitters",
    "href": "Analyzing Carbon Footprints/notebook.html#targeting-major-emitters",
    "title": "Analyzing Carbon Footprints in SQL",
    "section": "3: Targeting major emitters",
    "text": "3: Targeting major emitters\nWhat are the industries with the most emissions in 2017 (the most recent year that data is available)?\n\nReturn the industry_group and a rounded total of carbon_footprint_pcf for each industry, aliasing as total_industry_footprint.\nLimit to data for 2017 and order by total_industry_footprint.\n\n\n-- Return industry_group and a rounded total of carbon_footprint_pcf, aliased as total_industry_footprint\n-- Limit to data for 2017 and order by total_industry_footprint\nSELECT industry_group, ROUND(SUM(carbon_footprint_pcf), 2) AS total_industry_footprint\nFROM product_emissions\nWHERE year = 2017\nGROUP BY industry_group\nORDER BY SUM(carbon_footprint_pcf) DESC;\n\n\n\n\n\n\n\n\nindustry_group\ntotal_industry_footprint\n\n\n\n\n0\nMaterials\n107129.00\n\n\n1\nCapital Goods\n94942.67\n\n\n2\nTechnology Hardware & Equipment\n21865.09\n\n\n3\nFood, Beverage & Tobacco\n3161.47\n\n\n4\nCommercial & Professional Services\n740.60\n\n\n5\nSoftware & Services\n690.00"
  },
  {
    "objectID": "Analyzing Carbon Footprints/notebook.html#industry-representation",
    "href": "Analyzing Carbon Footprints/notebook.html#industry-representation",
    "title": "Analyzing Carbon Footprints in SQL",
    "section": "4: Industry representation",
    "text": "4: Industry representation\nIt looks like the Materials industry had a huge carbon footprint in 2017. But what if that’s just because there are many companies from the Materials industry in the dataset? Let’s check which industries are most heavily represented in that year.\n\nReturn each industry_group included in the table and a count of the number of records that list that industry group.\nLimit the results to only those from 2017 and lias the count as count_industry.\nOrder by count_industry, descending.\n\n\n-- Return the industry groups and a count of the number of records for each group\n-- Limit the results to only those from 2017 and alias the count as count_industry\n-- Order by count_industry, descending\nSELECT industry_group, COUNT(*) AS count_industry\nFROM public.product_emissions\nWHERE year = 2017\nGROUP BY industry_group\nORDER BY COUNT(industry_group) DESC;\n\n\n\n\n\n\n\n\nindustry_group\ncount_industry\n\n\n\n\n0\nTechnology Hardware & Equipment\n22\n\n\n1\nFood, Beverage & Tobacco\n22\n\n\n2\nMaterials\n11\n\n\n3\nCapital Goods\n4\n\n\n4\nCommercial & Professional Services\n2\n\n\n5\nSoftware & Services\n1"
  },
  {
    "objectID": "Analyzing Carbon Footprints/notebook.html#capital-goods-industry",
    "href": "Analyzing Carbon Footprints/notebook.html#capital-goods-industry",
    "title": "Analyzing Carbon Footprints in SQL",
    "section": "5: Capital Goods industry",
    "text": "5: Capital Goods industry\nWe can see that the Materials industry is the biggest emitter despite having less representation in our dataset than several other industries—yikes! The Capital Goods industry looks similar. Let’s explore the companies and products reporting for 2017 in the Capital Goods industry.\n\nReturn industry_group, company, and product_name for all records reporting in the Capital Goods industry during 2017.\n\n\n-- Return industry_group, company, and product_name for all records reporting in the Capital Goods industry during 2017\nSELECT industry_group, company, product_name\nFROM public.product_emissions\nWHERE industry_group = 'Capital Goods' \n    and year = 2017;\n\n\n\n\n\n\n\n\nindustry_group\ncompany\nproduct_name\n\n\n\n\n0\nCapital Goods\nMitsui Mining & Smelting Co., Ltd.\nZinc Oxide\n\n\n1\nCapital Goods\nDaikin Industries, Ltd.\nResidential Air Conditioner\n\n\n2\nCapital Goods\nDaikin Industries, Ltd.\nCommercial Air Conditioner\n\n\n3\nCapital Goods\nDaikin Industries, Ltd.\nLight commercial Air Conditioner"
  },
  {
    "objectID": "Analyzing Carbon Footprints/notebook.html#capital-goods-lifecycle-emissions",
    "href": "Analyzing Carbon Footprints/notebook.html#capital-goods-lifecycle-emissions",
    "title": "Analyzing Carbon Footprints in SQL",
    "section": "6: Capital Goods lifecycle emissions",
    "text": "6: Capital Goods lifecycle emissions\nDaikin is an air conditioning and refrigeration manufacturer. Let’s look at emissions throughout the life cycle of Daikin products. Can you guess whether most emissions are upstream, downstream, or during operations?\n\nReturn product_name, company, upstream_percent_total_pcf, operations_percent_total_pcf, and downstream_percent_total_pcf for Daikin Industries, Ltd. in 2017.\n\n\n-- Return product_name, company, and all stages of pcf emissions for Daikin in 2017\nSELECT product_name, \n    company,\n    upstream_percent_total_pcf, \n    operations_percent_total_pcf, \n    downstream_percent_total_pcf\nFROM public.product_emissions\nWHERE year = 2017\n    and company = 'Daikin Industries, Ltd.'\n\n\n\n\n\n\n\n\nproduct_name\ncompany\nupstream_percent_total_pcf\noperations_percent_total_pcf\ndownstream_percent_total_pcf\n\n\n\n\n0\nResidential Air Conditioner\nDaikin Industries, Ltd.\n3.96%\n0.55%\n95.50%\n\n\n1\nCommercial Air Conditioner\nDaikin Industries, Ltd.\n0.98%\n0.13%\n98.88%\n\n\n2\nLight commercial Air Conditioner\nDaikin Industries, Ltd.\n0.70%\n0.10%\n99.21%"
  },
  {
    "objectID": "Analyzing Carbon Footprints/notebook.html#exploring-visually-with-plotly-express",
    "href": "Analyzing Carbon Footprints/notebook.html#exploring-visually-with-plotly-express",
    "title": "Analyzing Carbon Footprints in SQL",
    "section": "Exploring visually with plotly express",
    "text": "Exploring visually with plotly express\nLet’s do some quick visualizations with plotly.express, a free an open-source graphing library. We don’t assume any knowledge of plotly on your part!\n\n# Import the plotly express package\nimport plotly.express as px"
  },
  {
    "objectID": "Analyzing Carbon Footprints/notebook.html#country-representation",
    "href": "Analyzing Carbon Footprints/notebook.html#country-representation",
    "title": "Analyzing Carbon Footprints in SQL",
    "section": "7: Country representation",
    "text": "7: Country representation\nLet’s take a look at emissions by country. You may have noticed that each time we run a query, the query results are available as df. So if we were to select all information from product_emissions, that would create a DataFrame called df that we can use in a plotly visualization! Let’s try it.\n\nSelect all information from product_emissions.\n\n\n-- Select all information from product_emissions\nSELECT *\nFROM product_emissions;\n\n\n\n\n\n\n\n\nid\nyear\nproduct_name\ncompany\ncountry\nindustry_group\nweight_kg\ncarbon_footprint_pcf\nupstream_percent_total_pcf\noperations_percent_total_pcf\ndownstream_percent_total_pcf\n\n\n\n\n0\n10056-1-2014\n2014\nFrosted Flakes(R) Cereal\nKellogg Company\nUSA\nFood, Beverage & Tobacco\n0.748500\n2.00\n57.50%\n30.00%\n12.50%\n\n\n1\n10056-1-2015\n2015\nFrosted Flakes, 23 oz, produced in Lancaster, ...\nKellogg Company\nUSA\nFood & Beverage Processing\n0.748500\n2.00\n57.50%\n30.00%\n12.50%\n\n\n2\n10222-1-2013\n2013\nOffice Chair\nKNOLL INC\nUSA\nCapital Goods\n20.680000\n72.54\n80.63%\n17.36%\n2.01%\n\n\n3\n10261-1-2017\n2017\nMultifunction Printers\nKonica Minolta, Inc.\nJapan\nTechnology Hardware & Equipment\n110.000000\n1488.00\n30.65%\n5.51%\n63.84%\n\n\n4\n10261-2-2017\n2017\nMultifunction Printers\nKonica Minolta, Inc.\nJapan\nTechnology Hardware & Equipment\n110.000000\n1818.00\n25.08%\n4.51%\n70.41%\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n861\n9298-2-2014\n2014\nDesktop CPU\nIntel Corporation\nUSA\nSemiconductors & Semiconductor Equipment\n0.408233\n14.00\n32.14%\n54.29%\n13.57%\n\n\n862\n9298-3-2013\n2013\nMobile CPU\nIntel Corporation\nUSA\nTechnology Hardware & Equipment\n0.408233\n7.00\n28.57%\n71.43%\n0.00%\n\n\n863\n9298-3-2014\n2014\nMobile CPU\nIntel Corporation\nUSA\nSemiconductors & Semiconductor Equipment\n0.408233\n7.00\n31.43%\n54.29%\n14.29%\n\n\n864\n9792-1-2017\n2017\nComplete catalyst system for diesel-powered pa...\nJohnson Matthey\nUnited Kingdom\nMaterials\n2.000000\n188.00\nN/a (product with insufficient stage-level data)\nN/a (product with insufficient stage-level data)\nN/a (product with insufficient stage-level data)\n\n\n865\n9792-2-2017\n2017\nThree-way Catalyst for gasoline-powered passen...\nJohnson Matthey\nUnited Kingdom\nMaterials\n2.000000\n63.00\nN/a (product with insufficient stage-level data)\nN/a (product with insufficient stage-level data)\nN/a (product with insufficient stage-level data)\n\n\n\n\n866 rows × 11 columns\n\n\n\nLet’s look at country representation in our dataset by creating a bar chart using the country column of df.\n\nCreate a plotly bar chart of the country distribution for companies in our dataset.\n\n\n# Create a plotly bar chart of the country distribution for companies in our dataset\npx.bar(product_emission_df, x=\"country\")\n\nUnable to display output for mime type(s): application/vnd.plotly.v1+json"
  },
  {
    "objectID": "Analyzing Carbon Footprints/notebook.html#emissions-by-country",
    "href": "Analyzing Carbon Footprints/notebook.html#emissions-by-country",
    "title": "Analyzing Carbon Footprints in SQL",
    "section": "8: Emissions by country",
    "text": "8: Emissions by country\nHow does this compare to the emissions of companies reporting from each country?\n\nFirst, get the results of interest using SQL: grouping by country, select country and the sum of total carbon_footprint_pcf by country, aliasing as total_country_footprint.\n\n\n-- Group by country\n-- Select country and the sum of total carbon_footprint_pcf by country, aliasing as total_country_footprint\nSELECT country, SUM(carbon_footprint_pcf) AS total_country_footprint\nFROM product_emissions\nGROUP BY country;\n\n\n\n\n\n\n\n\ncountry\ntotal_country_footprint\n\n\n\n\n0\nIndonesia\n7.210000e+02\n\n\n1\nSwitzerland\n1.406263e+02\n\n\n2\nItaly\n1.940500e+01\n\n\n3\nChina\n1.425430e+02\n\n\n4\nLuxembourg\n1.670073e+05\n\n\n5\nSweden\n4.533010e+03\n\n\n6\nUSA\n4.518692e+05\n\n\n7\nUnited Kingdom\n6.735140e+03\n\n\n8\nNetherlands\n7.041534e+04\n\n\n9\nBrazil\n1.675877e+05\n\n\n10\nAustralia\n2.384670e+02\n\n\n11\nGermany\n2.251225e+06\n\n\n12\nIreland\n5.130000e+03\n\n\n13\nCanada\n3.822000e+02\n\n\n14\nFinland\n2.158100e+04\n\n\n15\nSouth Korea\n1.409941e+05\n\n\n16\nColombia\n8.300000e-04\n\n\n17\nLithuania\n1.080000e-02\n\n\n18\nSpain\n9.786126e+06\n\n\n19\nGreece\n7.000000e-01\n\n\n20\nIndia\n2.457400e+04\n\n\n21\nBelgium\n9.400000e+00\n\n\n22\nChile\n1.555600e+03\n\n\n23\nFrance\n1.613803e+03\n\n\n24\nSouth Africa\n1.231090e+04\n\n\n25\nMalaysia\n2.336700e+02\n\n\n26\nTaiwan\n6.151307e+04\n\n\n27\nJapan\n5.193443e+05\n\n\n\n\n\n\n\n\nCreate a plotly bar plot of the emissions by country in our dataset.\n\n\n# Create a plotly bar plot of the emissions by country in our dataset\npx.bar(df, x=\"country\", y=\"total_country_footprint\")\n\nUnable to display output for mime type(s): application/vnd.plotly.v1+json"
  },
  {
    "objectID": "Analyzing Carbon Footprints/notebook.html#does-the-graph-above-make-sense",
    "href": "Analyzing Carbon Footprints/notebook.html#does-the-graph-above-make-sense",
    "title": "Analyzing Carbon Footprints in SQL",
    "section": "9: Does the graph above make sense?",
    "text": "9: Does the graph above make sense?\nWow! Spain has a lot of emissions! Where do they come from? To finish our exploration together, let’s take a quick look at the underlying data as a gut-check.\n\nIn SQL, select company and carbon_footprint_pcf for companies in Spain.\n\n\n-- Select company and carbon_footprint_pcf for companies in Spain\nSELECT company, carbon_footprint_pcf\nFROM public.product_emissions\nWHERE country = 'Spain';\n\n\n\n\n\n\n\n\ncompany\ncarbon_footprint_pcf\n\n\n\n\n0\nMiquel Y Costas\n3.00\n\n\n1\nGamesa Corporación Tecnológica, S.A.\n1251625.00\n\n\n2\nGamesa Corporación Tecnológica, S.A.\n1532608.00\n\n\n3\nGamesa Corporación Tecnológica, S.A.\n3718044.00\n\n\n4\nGamesa Corporación Tecnológica, S.A.\n3276187.00\n\n\n5\nCompañía Española de Petróleos, S.A.U. CEPSA\n6109.00\n\n\n6\nCompañía Española de Petróleos, S.A.U. CEPSA\n890.00\n\n\n7\nCrimidesa\n180.00\n\n\n8\nCrimidesa\n140.00\n\n\n9\nAgraz\n155.71\n\n\n10\nAgraz\n12.52\n\n\n11\nAgraz\n155.78\n\n\n12\nAgraz\n16.22\n\n\n\n\n\n\n\nGamesa Corporación Tecnológica is actually a renewable energy company specializing in wind power! Why might it have such high emissions? Discovering these twists in the data is very important before real analysis can begin. I hope you continue exploring this data on your own!"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site"
  },
  {
    "objectID": "Analyze International Debt Statistics/notebook.html",
    "href": "Analyze International Debt Statistics/notebook.html",
    "title": "portfolio_website",
    "section": "",
    "text": "In this notebook, I am analyzing international debt data collected by The World Bank. The dataset contains information about the amount of debt (in USD) owed by developing countries across several categories. I am going to find the answers to questions like:\n\nWhat is the total amount of debt that is owed by the countries listed in the dataset?\nWhich country owns the maximum amount of debt and what does that amount look like?\nWhat is the average amount of debt owed by countries across different debt indicators?\n\n\nBelow is a snapshot of the database you will be working with:\n\n\n\n\n\n\n\n\n\n\ncountry_name\ncountry_code\nindicator_name\nindicator_code\ndebt\n\n\n\n\nAfghanistan\nAFG\n“Disbursements on external debt, long-term (DIS, current US\\()\"    |DT.DIS.DLXF.CD|72894453.7 |\n|Afghanistan |AFG         |\"Interest payments on external debt, long-term (INT, current US\\))”\nDT.INT.DLXF.CD\n53239440.1\n\n\nAfghanistan\nAFG\n“PPG, bilateral (AMT, current US\\()\"                               |DT.AMT.BLAT.CD|61739336.9 |\n|Afghanistan |AFG         |\"PPG, bilateral (DIS, current US\\))”\nDT.DIS.BLAT.CD\n49114729.4\n\n\nAfghanistan\nAFG\n“PPG, bilateral (INT, current US\\()\"                               |DT.INT.BLAT.CD|39903620.1 |\n|Afghanistan |AFG         |\"PPG, multilateral (AMT, current US\\))”\nDT.AMT.MLAT.CD\n39107845\n\n\nAfghanistan\nAFG\n“PPG, multilateral (DIS, current US\\()\"                            |DT.DIS.MLAT.CD|23779724.3 |\n|Afghanistan |AFG         |\"PPG, multilateral (INT, current US\\))”\nDT.INT.MLAT.CD\n13335820\n\n\nAfghanistan\nAFG\n“PPG, official creditors (AMT, current US\\()\"                      |DT.AMT.OFFT.CD|100847181.9|\n|Afghanistan |AFG         |\"PPG, official creditors (DIS, current US\\))”\nDT.DIS.OFFT.CD\n72894453.7\n\n\n\nYou will execute SQL queries to answer six questions, as listed in the instructions.\n\nimport pandas as pd\nfrom sqlalchemy import create_engine, text, inspect\n\ndf = pd.read_csv('international_debt.csv')\n\n\n\n# Create an in-memory SQLite engine\nengine = create_engine('sqlite:///:memory:')\n\n# Create SQL table and insert data\ndf.to_sql('inter_debt', engine, if_exists='replace', index=False)\n\n# Verify the data insertion (Optional)\nwith engine.connect() as connection:\n    result = connection.execute(text(\"SELECT * FROM inter_debt\"))\n    for row in result:\n        print(row)\n\n('Afghanistan', 'AFG', '\"Disbursements on external debt, long-term (DIS, current US$)\"', 'DT.DIS.DLXF.CD', 72894453.7)\n('Afghanistan', 'AFG', '\"Interest payments on external debt, long-term (INT, current US$)\"', 'DT.INT.DLXF.CD', 53239440.1)\n('Afghanistan', 'AFG', '\"PPG, bilateral (AMT, current US$)\"', 'DT.AMT.BLAT.CD', 61739336.9)\n('Afghanistan', 'AFG', '\"PPG, bilateral (DIS, current US$)\"', 'DT.DIS.BLAT.CD', 49114729.4)\n('Afghanistan', 'AFG', '\"PPG, bilateral (INT, current US$)\"', 'DT.INT.BLAT.CD', 39903620.1)\n('Afghanistan', 'AFG', '\"PPG, multilateral (AMT, current US$)\"', 'DT.AMT.MLAT.CD', 39107845.0)\n('Afghanistan', 'AFG', '\"PPG, multilateral (DIS, current US$)\"', 'DT.DIS.MLAT.CD', 23779724.3)\n('Afghanistan', 'AFG', '\"PPG, multilateral (INT, current US$)\"', 'DT.INT.MLAT.CD', 13335820.0)\n('Afghanistan', 'AFG', '\"PPG, official creditors (AMT, current US$)\"', 'DT.AMT.OFFT.CD', 100847181.9)\n('Afghanistan', 'AFG', '\"PPG, official creditors (DIS, current US$)\"', 'DT.DIS.OFFT.CD', 72894453.7)\n('Afghanistan', 'AFG', '\"PPG, official creditors (INT, current US$)\"', 'DT.INT.OFFT.CD', 53239440.1)\n('Afghanistan', 'AFG', '\"Principal repayments on external debt, long-term (AMT, current US$)\"', 'DT.AMT.DLXF.CD', 100847181.9)\n('Albania', 'ALB', '\"Disbursements on external debt, long-term (DIS, current US$)\"', 'DT.DIS.DLXF.CD', 317194512.5)\n('Albania', 'ALB', '\"Interest payments on external debt, long-term (INT, current US$)\"', 'DT.INT.DLXF.CD', 165602386.9)\n('Albania', 'ALB', '\"Interest payments on external debt, private nonguaranteed (PNG) (INT, current US$)\"', 'DT.INT.DPNG.CD', 87884000.0)\n('Albania', 'ALB', '\"PPG, bilateral (AMT, current US$)\"', 'DT.AMT.BLAT.CD', 54250280.6)\n('Albania', 'ALB', '\"PPG, bilateral (DIS, current US$)\"', 'DT.DIS.BLAT.CD', 76050616.09999998)\n('Albania', 'ALB', '\"PPG, bilateral (INT, current US$)\"', 'DT.INT.BLAT.CD', 13847333.6)\n('Albania', 'ALB', '\"PPG, bonds (AMT, current US$)\"', 'DT.AMT.PBND.CD', 0.0)\n('Albania', 'ALB', '\"PPG, bonds (INT, current US$)\"', 'DT.INT.PBND.CD', 31030688.2)\n('Albania', 'ALB', '\"PPG, commercial banks (AMT, current US$)\"', 'DT.AMT.PCBK.CD', 39445139.5)\n('Albania', 'ALB', '\"PPG, commercial banks (DIS, current US$)\"', 'DT.DIS.PCBK.CD', 4542664.9)\n('Albania', 'ALB', '\"PPG, commercial banks (INT, current US$)\"', 'DT.INT.PCBK.CD', 4618504.3)\n('Albania', 'ALB', '\"PPG, multilateral (AMT, current US$)\"', 'DT.AMT.MLAT.CD', 182197616.7)\n('Albania', 'ALB', '\"PPG, multilateral (DIS, current US$)\"', 'DT.DIS.MLAT.CD', 234321242.3)\n('Albania', 'ALB', '\"PPG, multilateral (INT, current US$)\"', 'DT.INT.MLAT.CD', 28101536.1)\n('Albania', 'ALB', '\"PPG, official creditors (AMT, current US$)\"', 'DT.AMT.OFFT.CD', 236447897.3)\n('Albania', 'ALB', '\"PPG, official creditors (DIS, current US$)\"', 'DT.DIS.OFFT.CD', 310371858.4)\n('Albania', 'ALB', '\"PPG, official creditors (INT, current US$)\"', 'DT.INT.OFFT.CD', 41948869.7)\n('Albania', 'ALB', '\"PPG, other private creditors (AMT, current US$)\"', 'DT.AMT.PROP.CD', 170018.4)\n('Albania', 'ALB', '\"PPG, other private creditors (DIS, current US$)\"', 'DT.DIS.PROP.CD', 2279989.2)\n('Albania', 'ALB', '\"PPG, other private creditors (INT, current US$)\"', 'DT.INT.PROP.CD', 120324.7)\n('Albania', 'ALB', '\"PPG, private creditors (AMT, current US$)\"', 'DT.AMT.PRVT.CD', 39615157.9)\n('Albania', 'ALB', '\"PPG, private creditors (DIS, current US$)\"', 'DT.DIS.PRVT.CD', 6822654.1)\n('Albania', 'ALB', '\"PPG, private creditors (INT, current US$)\"', 'DT.INT.PRVT.CD', 35769517.2)\n('Albania', 'ALB', '\"Principal repayments on external debt, long-term (AMT, current US$)\"', 'DT.AMT.DLXF.CD', 790248675.2)\n('Albania', 'ALB', '\"Principal repayments on external debt, private nonguaranteed (PNG) (AMT, current US$)\"', 'DT.AMT.DPNG.CD', 514185620.0)\n('Algeria', 'DZA', '\"Disbursements on external debt, long-term (DIS, current US$)\"', 'DT.DIS.DLXF.CD', 10320772.2)\n('Algeria', 'DZA', '\"Interest payments on external debt, long-term (INT, current US$)\"', 'DT.INT.DLXF.CD', 19031728.7)\n('Algeria', 'DZA', '\"Interest payments on external debt, private nonguaranteed (PNG) (INT, current US$)\"', 'DT.INT.DPNG.CD', 3220000.0)\n('Algeria', 'DZA', '\"PPG, bilateral (AMT, current US$)\"', 'DT.AMT.BLAT.CD', 95188724.6)\n('Algeria', 'DZA', '\"PPG, bilateral (DIS, current US$)\"', 'DT.DIS.BLAT.CD', 10320772.2)\n('Algeria', 'DZA', '\"PPG, bilateral (INT, current US$)\"', 'DT.INT.BLAT.CD', 7680627.6)\n('Algeria', 'DZA', '\"PPG, commercial banks (AMT, current US$)\"', 'DT.AMT.PCBK.CD', 576463.5)\n('Algeria', 'DZA', '\"PPG, commercial banks (INT, current US$)\"', 'DT.INT.PCBK.CD', 13192.3)\n('Algeria', 'DZA', '\"PPG, multilateral (AMT, current US$)\"', 'DT.AMT.MLAT.CD', 0.0)\n('Algeria', 'DZA', '\"PPG, multilateral (INT, current US$)\"', 'DT.INT.MLAT.CD', 8094779.0)\n('Algeria', 'DZA', '\"PPG, official creditors (AMT, current US$)\"', 'DT.AMT.OFFT.CD', 95188724.6)\n('Algeria', 'DZA', '\"PPG, official creditors (DIS, current US$)\"', 'DT.DIS.OFFT.CD', 10320772.2)\n('Algeria', 'DZA', '\"PPG, official creditors (INT, current US$)\"', 'DT.INT.OFFT.CD', 15775406.6)\n('Algeria', 'DZA', '\"PPG, other private creditors (AMT, current US$)\"', 'DT.AMT.PROP.CD', 0.0)\n('Algeria', 'DZA', '\"PPG, other private creditors (INT, current US$)\"', 'DT.INT.PROP.CD', 23129.8)\n('Algeria', 'DZA', '\"PPG, private creditors (AMT, current US$)\"', 'DT.AMT.PRVT.CD', 576463.5)\n('Algeria', 'DZA', '\"PPG, private creditors (INT, current US$)\"', 'DT.INT.PRVT.CD', 36322.1)\n('Algeria', 'DZA', '\"Principal repayments on external debt, long-term (AMT, current US$)\"', 'DT.AMT.DLXF.CD', 171185188.1)\n('Algeria', 'DZA', '\"Principal repayments on external debt, private nonguaranteed (PNG) (AMT, current US$)\"', 'DT.AMT.DPNG.CD', 75420000.0)\n('Angola', 'AGO', '\"Disbursements on external debt, long-term (DIS, current US$)\"', 'DT.DIS.DLXF.CD', 10924018093.1)\n('Angola', 'AGO', '\"Interest payments on external debt, long-term (INT, current US$)\"', 'DT.INT.DLXF.CD', 1798550445.5)\n('Angola', 'AGO', '\"PPG, bilateral (AMT, current US$)\"', 'DT.AMT.BLAT.CD', 8473824016.3)\n('Angola', 'AGO', '\"PPG, bilateral (DIS, current US$)\"', 'DT.DIS.BLAT.CD', 8838256901.1)\n('Angola', 'AGO', '\"PPG, bilateral (INT, current US$)\"', 'DT.INT.BLAT.CD', 1005053965.1)\n('Angola', 'AGO', '\"PPG, bonds (AMT, current US$)\"', 'DT.AMT.PBND.CD', 1000000000.0)\n('Angola', 'AGO', '\"PPG, bonds (INT, current US$)\"', 'DT.INT.PBND.CD', 70000000.0)\n('Angola', 'AGO', '\"PPG, commercial banks (AMT, current US$)\"', 'DT.AMT.PCBK.CD', 1125088719.9)\n('Angola', 'AGO', '\"PPG, commercial banks (DIS, current US$)\"', 'DT.DIS.PCBK.CD', 1906771593.8)\n('Angola', 'AGO', '\"PPG, commercial banks (INT, current US$)\"', 'DT.INT.PCBK.CD', 580902004.3)\n('Angola', 'AGO', '\"PPG, multilateral (AMT, current US$)\"', 'DT.AMT.MLAT.CD', 124688691.9)\n('Angola', 'AGO', '\"PPG, multilateral (DIS, current US$)\"', 'DT.DIS.MLAT.CD', 178989598.2)\n('Angola', 'AGO', '\"PPG, multilateral (INT, current US$)\"', 'DT.INT.MLAT.CD', 47038476.1)\n('Angola', 'AGO', '\"PPG, official creditors (AMT, current US$)\"', 'DT.AMT.OFFT.CD', 8598512708.2)\n('Angola', 'AGO', '\"PPG, official creditors (DIS, current US$)\"', 'DT.DIS.OFFT.CD', 9017246499.3)\n('Angola', 'AGO', '\"PPG, official creditors (INT, current US$)\"', 'DT.INT.OFFT.CD', 1052092441.2)\n('Angola', 'AGO', '\"PPG, other private creditors (AMT, current US$)\"', 'DT.AMT.PROP.CD', 343444200.0)\n('Angola', 'AGO', '\"PPG, other private creditors (INT, current US$)\"', 'DT.INT.PROP.CD', 95556000.0)\n('Angola', 'AGO', '\"PPG, private creditors (AMT, current US$)\"', 'DT.AMT.PRVT.CD', 2468532919.9)\n('Angola', 'AGO', '\"PPG, private creditors (DIS, current US$)\"', 'DT.DIS.PRVT.CD', 1906771593.8)\n('Angola', 'AGO', '\"PPG, private creditors (INT, current US$)\"', 'DT.INT.PRVT.CD', 746458004.2999998)\n('Angola', 'AGO', '\"Principal repayments on external debt, long-term (AMT, current US$)\"', 'DT.AMT.DLXF.CD', 11067045628.1)\n('Armenia', 'ARM', '\"Disbursements on external debt, long-term (DIS, current US$)\"', 'DT.DIS.DLXF.CD', 426959175.6)\n('Armenia', 'ARM', '\"Interest payments on external debt, long-term (INT, current US$)\"', 'DT.INT.DLXF.CD', 275292981.1)\n('Armenia', 'ARM', '\"Interest payments on external debt, private nonguaranteed (PNG) (INT, current US$)\"', 'DT.INT.DPNG.CD', 128076000.0)\n('Armenia', 'ARM', '\"PPG, bilateral (AMT, current US$)\"', 'DT.AMT.BLAT.CD', 68968314.7)\n('Armenia', 'ARM', '\"PPG, bilateral (DIS, current US$)\"', 'DT.DIS.BLAT.CD', 174269846.7)\n('Armenia', 'ARM', '\"PPG, bilateral (INT, current US$)\"', 'DT.INT.BLAT.CD', 24094832.0)\n('Armenia', 'ARM', '\"PPG, bonds (AMT, current US$)\"', 'DT.AMT.PBND.CD', 0.0)\n('Armenia', 'ARM', '\"PPG, bonds (INT, current US$)\"', 'DT.INT.PBND.CD', 65754000.0)\n('Armenia', 'ARM', '\"PPG, commercial banks (AMT, current US$)\"', 'DT.AMT.PCBK.CD', 1635012.0)\n('Armenia', 'ARM', '\"PPG, commercial banks (INT, current US$)\"', 'DT.INT.PCBK.CD', 196685.2)\n('Armenia', 'ARM', '\"PPG, multilateral (AMT, current US$)\"', 'DT.AMT.MLAT.CD', 94331207.1)\n('Armenia', 'ARM', '\"PPG, multilateral (DIS, current US$)\"', 'DT.DIS.MLAT.CD', 252689328.9)\n('Armenia', 'ARM', '\"PPG, multilateral (INT, current US$)\"', 'DT.INT.MLAT.CD', 57171463.9)\n('Armenia', 'ARM', '\"PPG, official creditors (AMT, current US$)\"', 'DT.AMT.OFFT.CD', 163299521.8)\n('Armenia', 'ARM', '\"PPG, official creditors (DIS, current US$)\"', 'DT.DIS.OFFT.CD', 426959175.6)\n('Armenia', 'ARM', '\"PPG, official creditors (INT, current US$)\"', 'DT.INT.OFFT.CD', 81266295.9)\n('Armenia', 'ARM', '\"PPG, private creditors (AMT, current US$)\"', 'DT.AMT.PRVT.CD', 1635012.0)\n('Armenia', 'ARM', '\"PPG, private creditors (INT, current US$)\"', 'DT.INT.PRVT.CD', 65950685.2)\n('Armenia', 'ARM', '\"Principal repayments on external debt, long-term (AMT, current US$)\"', 'DT.AMT.DLXF.CD', 845630723.7999998)\n('Armenia', 'ARM', '\"Principal repayments on external debt, private nonguaranteed (PNG) (AMT, current US$)\"', 'DT.AMT.DPNG.CD', 680696190.0)\n('Azerbaijan', 'AZE', '\"Disbursements on external debt, long-term (DIS, current US$)\"', 'DT.DIS.DLXF.CD', 1088458061.2)\n('Azerbaijan', 'AZE', '\"Interest payments on external debt, long-term (INT, current US$)\"', 'DT.INT.DLXF.CD', 495732858.1)\n('Azerbaijan', 'AZE', '\"Interest payments on external debt, private nonguaranteed (PNG) (INT, current US$)\"', 'DT.INT.DPNG.CD', 74183981.0)\n('Azerbaijan', 'AZE', '\"PPG, bilateral (AMT, current US$)\"', 'DT.AMT.BLAT.CD', 106369937.0)\n('Azerbaijan', 'AZE', '\"PPG, bilateral (DIS, current US$)\"', 'DT.DIS.BLAT.CD', 84748079.59999998)\n('Azerbaijan', 'AZE', '\"PPG, bilateral (INT, current US$)\"', 'DT.INT.BLAT.CD', 10085950.0)\n('Azerbaijan', 'AZE', '\"PPG, bonds (AMT, current US$)\"', 'DT.AMT.PBND.CD', 0.0)\n('Azerbaijan', 'AZE', '\"PPG, bonds (INT, current US$)\"', 'DT.INT.PBND.CD', 225022000.0)\n('Azerbaijan', 'AZE', '\"PPG, commercial banks (AMT, current US$)\"', 'DT.AMT.PCBK.CD', 423613103.8)\n('Azerbaijan', 'AZE', '\"PPG, commercial banks (DIS, current US$)\"', 'DT.DIS.PCBK.CD', 347550999.6)\n('Azerbaijan', 'AZE', '\"PPG, commercial banks (INT, current US$)\"', 'DT.INT.PCBK.CD', 49574780.2)\n('Azerbaijan', 'AZE', '\"PPG, multilateral (AMT, current US$)\"', 'DT.AMT.MLAT.CD', 513623656.5)\n('Azerbaijan', 'AZE', '\"PPG, multilateral (DIS, current US$)\"', 'DT.DIS.MLAT.CD', 656158982.0)\n('Azerbaijan', 'AZE', '\"PPG, multilateral (INT, current US$)\"', 'DT.INT.MLAT.CD', 136577146.9)\n('Azerbaijan', 'AZE', '\"PPG, official creditors (AMT, current US$)\"', 'DT.AMT.OFFT.CD', 619993593.5)\n('Azerbaijan', 'AZE', '\"PPG, official creditors (DIS, current US$)\"', 'DT.DIS.OFFT.CD', 740907061.6)\n('Azerbaijan', 'AZE', '\"PPG, official creditors (INT, current US$)\"', 'DT.INT.OFFT.CD', 146663096.9)\n('Azerbaijan', 'AZE', '\"PPG, other private creditors (AMT, current US$)\"', 'DT.AMT.PROP.CD', 4110150.2)\n('Azerbaijan', 'AZE', '\"PPG, other private creditors (INT, current US$)\"', 'DT.INT.PROP.CD', 289000.0)\n('Azerbaijan', 'AZE', '\"PPG, private creditors (AMT, current US$)\"', 'DT.AMT.PRVT.CD', 427723254.0)\n('Azerbaijan', 'AZE', '\"PPG, private creditors (DIS, current US$)\"', 'DT.DIS.PRVT.CD', 347550999.6)\n('Azerbaijan', 'AZE', '\"PPG, private creditors (INT, current US$)\"', 'DT.INT.PRVT.CD', 274885780.2)\n('Azerbaijan', 'AZE', '\"Principal repayments on external debt, long-term (AMT, current US$)\"', 'DT.AMT.DLXF.CD', 1513813661.4)\n('Azerbaijan', 'AZE', '\"Principal repayments on external debt, private nonguaranteed (PNG) (AMT, current US$)\"', 'DT.AMT.DPNG.CD', 466096813.9)\n('Bangladesh', 'BGD', '\"Disbursements on external debt, long-term (DIS, current US$)\"', 'DT.DIS.DLXF.CD', 9050557611.9)\n('Bangladesh', 'BGD', '\"Interest payments on external debt, long-term (INT, current US$)\"', 'DT.INT.DLXF.CD', 821146448.7)\n('Bangladesh', 'BGD', '\"Interest payments on external debt, private nonguaranteed (PNG) (INT, current US$)\"', 'DT.INT.DPNG.CD', 155543000.0)\n('Bangladesh', 'BGD', '\"PPG, bilateral (AMT, current US$)\"', 'DT.AMT.BLAT.CD', 386702219.8)\n('Bangladesh', 'BGD', '\"PPG, bilateral (DIS, current US$)\"', 'DT.DIS.BLAT.CD', 6141785637.5)\n('Bangladesh', 'BGD', '\"PPG, bilateral (INT, current US$)\"', 'DT.INT.BLAT.CD', 309079773.4)\n('Bangladesh', 'BGD', '\"PPG, commercial banks (AMT, current US$)\"', 'DT.AMT.PCBK.CD', 3943983.7)\n('Bangladesh', 'BGD', '\"PPG, commercial banks (INT, current US$)\"', 'DT.INT.PCBK.CD', 0.0)\n('Bangladesh', 'BGD', '\"PPG, multilateral (AMT, current US$)\"', 'DT.AMT.MLAT.CD', 1039564682.7)\n('Bangladesh', 'BGD', '\"PPG, multilateral (DIS, current US$)\"', 'DT.DIS.MLAT.CD', 2908771974.4)\n('Bangladesh', 'BGD', '\"PPG, multilateral (INT, current US$)\"', 'DT.INT.MLAT.CD', 356392675.3)\n('Bangladesh', 'BGD', '\"PPG, official creditors (AMT, current US$)\"', 'DT.AMT.OFFT.CD', 1426266902.5)\n('Bangladesh', 'BGD', '\"PPG, official creditors (DIS, current US$)\"', 'DT.DIS.OFFT.CD', 9050557611.9)\n('Bangladesh', 'BGD', '\"PPG, official creditors (INT, current US$)\"', 'DT.INT.OFFT.CD', 665472448.7)\n('Bangladesh', 'BGD', '\"PPG, other private creditors (AMT, current US$)\"', 'DT.AMT.PROP.CD', 1683666.7)\n('Bangladesh', 'BGD', '\"PPG, other private creditors (INT, current US$)\"', 'DT.INT.PROP.CD', 131000.0)\n('Bangladesh', 'BGD', '\"PPG, private creditors (AMT, current US$)\"', 'DT.AMT.PRVT.CD', 5627650.4)\n('Bangladesh', 'BGD', '\"PPG, private creditors (INT, current US$)\"', 'DT.INT.PRVT.CD', 131000.0)\n('Bangladesh', 'BGD', '\"Principal repayments on external debt, long-term (AMT, current US$)\"', 'DT.AMT.DLXF.CD', 2077014552.9)\n('Bangladesh', 'BGD', '\"Principal repayments on external debt, private nonguaranteed (PNG) (AMT, current US$)\"', 'DT.AMT.DPNG.CD', 645120000.0)\n('Belarus', 'BLR', '\"Disbursements on external debt, long-term (DIS, current US$)\"', 'DT.DIS.DLXF.CD', 2525227414.9)\n('Belarus', 'BLR', '\"Interest payments on external debt, long-term (INT, current US$)\"', 'DT.INT.DLXF.CD', 1214489897.1)\n('Belarus', 'BLR', '\"Interest payments on external debt, private nonguaranteed (PNG) (INT, current US$)\"', 'DT.INT.DPNG.CD', 272640306.4)\n('Belarus', 'BLR', '\"PPG, bilateral (AMT, current US$)\"', 'DT.AMT.BLAT.CD', 1487363278.5)\n('Belarus', 'BLR', '\"PPG, bilateral (DIS, current US$)\"', 'DT.DIS.BLAT.CD', 2265336386.7)\n('Belarus', 'BLR', '\"PPG, bilateral (INT, current US$)\"', 'DT.INT.BLAT.CD', 630234914.9)\n('Belarus', 'BLR', '\"PPG, bonds (AMT, current US$)\"', 'DT.AMT.PBND.CD', 0.0)\n('Belarus', 'BLR', '\"PPG, bonds (INT, current US$)\"', 'DT.INT.PBND.CD', 100750000.0)\n('Belarus', 'BLR', '\"PPG, commercial banks (AMT, current US$)\"', 'DT.AMT.PCBK.CD', 935058288.4)\n('Belarus', 'BLR', '\"PPG, commercial banks (INT, current US$)\"', 'DT.INT.PCBK.CD', 77099095.9)\n('Belarus', 'BLR', '\"PPG, multilateral (AMT, current US$)\"', 'DT.AMT.MLAT.CD', 595438826.0)\n('Belarus', 'BLR', '\"PPG, multilateral (DIS, current US$)\"', 'DT.DIS.MLAT.CD', 241493806.0)\n('Belarus', 'BLR', '\"PPG, multilateral (INT, current US$)\"', 'DT.INT.MLAT.CD', 133026579.9)\n('Belarus', 'BLR', '\"PPG, official creditors (AMT, current US$)\"', 'DT.AMT.OFFT.CD', 2082802104.5)\n('Belarus', 'BLR', '\"PPG, official creditors (DIS, current US$)\"', 'DT.DIS.OFFT.CD', 2506830192.7)\n('Belarus', 'BLR', '\"PPG, official creditors (INT, current US$)\"', 'DT.INT.OFFT.CD', 763261494.7999998)\n('Belarus', 'BLR', '\"PPG, other private creditors (AMT, current US$)\"', 'DT.AMT.PROP.CD', 28912000.0)\n('Belarus', 'BLR', '\"PPG, other private creditors (DIS, current US$)\"', 'DT.DIS.PROP.CD', 18397222.2)\n('Belarus', 'BLR', '\"PPG, other private creditors (INT, current US$)\"', 'DT.INT.PROP.CD', 739000.0)\n('Belarus', 'BLR', '\"PPG, private creditors (AMT, current US$)\"', 'DT.AMT.PRVT.CD', 963970288.4)\n('Belarus', 'BLR', '\"PPG, private creditors (DIS, current US$)\"', 'DT.DIS.PRVT.CD', 18397222.2)\n('Belarus', 'BLR', '\"PPG, private creditors (INT, current US$)\"', 'DT.INT.PRVT.CD', 178588095.9)\n('Belarus', 'BLR', '\"Principal repayments on external debt, long-term (AMT, current US$)\"', 'DT.AMT.DLXF.CD', 4640037884.2)\n('Belarus', 'BLR', '\"Principal repayments on external debt, private nonguaranteed (PNG) (AMT, current US$)\"', 'DT.AMT.DPNG.CD', 1593265491.3)\n('Belize', 'BLZ', '\"Disbursements on external debt, long-term (DIS, current US$)\"', 'DT.DIS.DLXF.CD', 53429527.6)\n('Belize', 'BLZ', '\"Interest payments on external debt, long-term (INT, current US$)\"', 'DT.INT.DLXF.CD', 53565437.1)\n('Belize', 'BLZ', '\"Interest payments on external debt, private nonguaranteed (PNG) (INT, current US$)\"', 'DT.INT.DPNG.CD', 4480000.0)\n('Belize', 'BLZ', '\"PPG, bilateral (AMT, current US$)\"', 'DT.AMT.BLAT.CD', 23329498.4)\n('Belize', 'BLZ', '\"PPG, bilateral (DIS, current US$)\"', 'DT.DIS.BLAT.CD', 3581448.7)\n('Belize', 'BLZ', '\"PPG, bilateral (INT, current US$)\"', 'DT.INT.BLAT.CD', 3455608.4)\n('Belize', 'BLZ', '\"PPG, bonds (AMT, current US$)\"', 'DT.AMT.PBND.CD', 26325100.0)\n('Belize', 'BLZ', '\"PPG, bonds (INT, current US$)\"', 'DT.INT.PBND.CD', 33549000.0)\n('Belize', 'BLZ', '\"PPG, commercial banks (AMT, current US$)\"', 'DT.AMT.PCBK.CD', 0.0)\n('Belize', 'BLZ', '\"PPG, commercial banks (INT, current US$)\"', 'DT.INT.PCBK.CD', 1084000.0)\n('Belize', 'BLZ', '\"PPG, multilateral (AMT, current US$)\"', 'DT.AMT.MLAT.CD', 29683326.5)\n('Belize', 'BLZ', '\"PPG, multilateral (DIS, current US$)\"', 'DT.DIS.MLAT.CD', 49848078.9)\n('Belize', 'BLZ', '\"PPG, multilateral (INT, current US$)\"', 'DT.INT.MLAT.CD', 10996828.7)\n('Belize', 'BLZ', '\"PPG, official creditors (AMT, current US$)\"', 'DT.AMT.OFFT.CD', 53012824.9)\n('Belize', 'BLZ', '\"PPG, official creditors (DIS, current US$)\"', 'DT.DIS.OFFT.CD', 53429527.6)\n('Belize', 'BLZ', '\"PPG, official creditors (INT, current US$)\"', 'DT.INT.OFFT.CD', 14452437.1)\n('Belize', 'BLZ', '\"PPG, private creditors (AMT, current US$)\"', 'DT.AMT.PRVT.CD', 26325100.0)\n('Belize', 'BLZ', '\"PPG, private creditors (INT, current US$)\"', 'DT.INT.PRVT.CD', 34633000.0)\n('Belize', 'BLZ', '\"Principal repayments on external debt, long-term (AMT, current US$)\"', 'DT.AMT.DLXF.CD', 105609924.9)\n('Belize', 'BLZ', '\"Principal repayments on external debt, private nonguaranteed (PNG) (AMT, current US$)\"', 'DT.AMT.DPNG.CD', 26272000.0)\n('Benin', 'BEN', '\"Disbursements on external debt, long-term (DIS, current US$)\"', 'DT.DIS.DLXF.CD', 648444772.9)\n('Benin', 'BEN', '\"Interest payments on external debt, long-term (INT, current US$)\"', 'DT.INT.DLXF.CD', 50293011.9)\n('Benin', 'BEN', '\"PPG, bilateral (AMT, current US$)\"', 'DT.AMT.BLAT.CD', 26014505.8)\n('Benin', 'BEN', '\"PPG, bilateral (DIS, current US$)\"', 'DT.DIS.BLAT.CD', 334698287.3)\n('Benin', 'BEN', '\"PPG, bilateral (INT, current US$)\"', 'DT.INT.BLAT.CD', 13208408.6)\n('Benin', 'BEN', '\"PPG, commercial banks (AMT, current US$)\"', 'DT.AMT.PCBK.CD', 28675813.0)\n('Benin', 'BEN', '\"PPG, commercial banks (DIS, current US$)\"', 'DT.DIS.PCBK.CD', 43999044.4)\n('Benin', 'BEN', '\"PPG, commercial banks (INT, current US$)\"', 'DT.INT.PCBK.CD', 3565299.6)\n('Benin', 'BEN', '\"PPG, multilateral (AMT, current US$)\"', 'DT.AMT.MLAT.CD', 91631639.5)\n('Benin', 'BEN', '\"PPG, multilateral (DIS, current US$)\"', 'DT.DIS.MLAT.CD', 269747441.2)\n('Benin', 'BEN', '\"PPG, multilateral (INT, current US$)\"', 'DT.INT.MLAT.CD', 33519303.7)\n('Benin', 'BEN', '\"PPG, official creditors (AMT, current US$)\"', 'DT.AMT.OFFT.CD', 117646145.3)\n('Benin', 'BEN', '\"PPG, official creditors (DIS, current US$)\"', 'DT.DIS.OFFT.CD', 604445728.5)\n('Benin', 'BEN', '\"PPG, official creditors (INT, current US$)\"', 'DT.INT.OFFT.CD', 46727712.3)\n('Benin', 'BEN', '\"PPG, private creditors (AMT, current US$)\"', 'DT.AMT.PRVT.CD', 28675813.0)\n('Benin', 'BEN', '\"PPG, private creditors (DIS, current US$)\"', 'DT.DIS.PRVT.CD', 43999044.4)\n('Benin', 'BEN', '\"PPG, private creditors (INT, current US$)\"', 'DT.INT.PRVT.CD', 3565299.6)\n('Benin', 'BEN', '\"Principal repayments on external debt, long-term (AMT, current US$)\"', 'DT.AMT.DLXF.CD', 146321958.3)\n('Bhutan', 'BTN', '\"Disbursements on external debt, long-term (DIS, current US$)\"', 'DT.DIS.DLXF.CD', 149814565.8)\n('Bhutan', 'BTN', '\"Interest payments on external debt, long-term (INT, current US$)\"', 'DT.INT.DLXF.CD', 201006184.1)\n('Bhutan', 'BTN', '\"PPG, bilateral (AMT, current US$)\"', 'DT.AMT.BLAT.CD', 189877869.8)\n('Bhutan', 'BTN', '\"PPG, bilateral (DIS, current US$)\"', 'DT.DIS.BLAT.CD', 95819437.4)\n('Bhutan', 'BTN', '\"PPG, bilateral (INT, current US$)\"', 'DT.INT.BLAT.CD', 184064524.8)\n('Bhutan', 'BTN', '\"PPG, commercial banks (AMT, current US$)\"', 'DT.AMT.PCBK.CD', 5990246.6)\n('Bhutan', 'BTN', '\"PPG, commercial banks (DIS, current US$)\"', 'DT.DIS.PCBK.CD', 11867672.1)\n('Bhutan', 'BTN', '\"PPG, commercial banks (INT, current US$)\"', 'DT.INT.PCBK.CD', 8052276.3)\n('Bhutan', 'BTN', '\"PPG, multilateral (AMT, current US$)\"', 'DT.AMT.MLAT.CD', 17390420.5)\n('Bhutan', 'BTN', '\"PPG, multilateral (DIS, current US$)\"', 'DT.DIS.MLAT.CD', 42127456.3)\n('Bhutan', 'BTN', '\"PPG, multilateral (INT, current US$)\"', 'DT.INT.MLAT.CD', 8889383.0)\n('Bhutan', 'BTN', '\"PPG, official creditors (AMT, current US$)\"', 'DT.AMT.OFFT.CD', 207268290.3)\n('Bhutan', 'BTN', '\"PPG, official creditors (DIS, current US$)\"', 'DT.DIS.OFFT.CD', 137946893.7)\n('Bhutan', 'BTN', '\"PPG, official creditors (INT, current US$)\"', 'DT.INT.OFFT.CD', 192953907.8)\n('Bhutan', 'BTN', '\"PPG, private creditors (AMT, current US$)\"', 'DT.AMT.PRVT.CD', 5990246.6)\n('Bhutan', 'BTN', '\"PPG, private creditors (DIS, current US$)\"', 'DT.DIS.PRVT.CD', 11867672.1)\n('Bhutan', 'BTN', '\"PPG, private creditors (INT, current US$)\"', 'DT.INT.PRVT.CD', 8052276.3)\n('Bhutan', 'BTN', '\"Principal repayments on external debt, long-term (AMT, current US$)\"', 'DT.AMT.DLXF.CD', 213258536.9)\n('Bolivia', 'BOL', '\"Disbursements on external debt, long-term (DIS, current US$)\"', 'DT.DIS.DLXF.CD', 1421491255.2)\n('Bolivia', 'BOL', '\"Interest payments on external debt, long-term (INT, current US$)\"', 'DT.INT.DLXF.CD', 394855845.9)\n('Bolivia', 'BOL', '\"Interest payments on external debt, private nonguaranteed (PNG) (INT, current US$)\"', 'DT.INT.DPNG.CD', 108075000.0)\n('Bolivia', 'BOL', '\"PPG, bilateral (AMT, current US$)\"', 'DT.AMT.BLAT.CD', 67814879.9)\n('Bolivia', 'BOL', '\"PPG, bilateral (DIS, current US$)\"', 'DT.DIS.BLAT.CD', 554128686.3)\n('Bolivia', 'BOL', '\"PPG, bilateral (INT, current US$)\"', 'DT.INT.BLAT.CD', 32609012.4)\n('Bolivia', 'BOL', '\"PPG, bonds (AMT, current US$)\"', 'DT.AMT.PBND.CD', 0.0)\n('Bolivia', 'BOL', '\"PPG, bonds (INT, current US$)\"', 'DT.INT.PBND.CD', 99122000.0)\n('Bolivia', 'BOL', '\"PPG, commercial banks (AMT, current US$)\"', 'DT.AMT.PCBK.CD', 266701.5)\n('Bolivia', 'BOL', '\"PPG, commercial banks (DIS, current US$)\"', 'DT.DIS.PCBK.CD', 16528896.5)\n('Bolivia', 'BOL', '\"PPG, commercial banks (INT, current US$)\"', 'DT.INT.PCBK.CD', 62662.5)\n('Bolivia', 'BOL', '\"PPG, multilateral (AMT, current US$)\"', 'DT.AMT.MLAT.CD', 357721211.5)\n('Bolivia', 'BOL', '\"PPG, multilateral (DIS, current US$)\"', 'DT.DIS.MLAT.CD', 850833672.3999999)\n('Bolivia', 'BOL', '\"PPG, multilateral (INT, current US$)\"', 'DT.INT.MLAT.CD', 154977576.6)\n('Bolivia', 'BOL', '\"PPG, official creditors (AMT, current US$)\"', 'DT.AMT.OFFT.CD', 425536091.4)\n('Bolivia', 'BOL', '\"PPG, official creditors (DIS, current US$)\"', 'DT.DIS.OFFT.CD', 1404962358.7)\n('Bolivia', 'BOL', '\"PPG, official creditors (INT, current US$)\"', 'DT.INT.OFFT.CD', 187586589.0)\n('Bolivia', 'BOL', '\"PPG, other private creditors (AMT, current US$)\"', 'DT.AMT.PROP.CD', 1076571.6)\n('Bolivia', 'BOL', '\"PPG, other private creditors (INT, current US$)\"', 'DT.INT.PROP.CD', 9594.4)\n('Bolivia', 'BOL', '\"PPG, private creditors (AMT, current US$)\"', 'DT.AMT.PRVT.CD', 1343273.1)\n('Bolivia', 'BOL', '\"PPG, private creditors (DIS, current US$)\"', 'DT.DIS.PRVT.CD', 16528896.5)\n('Bolivia', 'BOL', '\"PPG, private creditors (INT, current US$)\"', 'DT.INT.PRVT.CD', 99194256.9)\n('Bolivia', 'BOL', '\"Principal repayments on external debt, long-term (AMT, current US$)\"', 'DT.AMT.DLXF.CD', 1060650554.5)\n('Bolivia', 'BOL', '\"Principal repayments on external debt, private nonguaranteed (PNG) (AMT, current US$)\"', 'DT.AMT.DPNG.CD', 633771190.0)\n('Bosnia and Herzegovina', 'BIH', '\"Disbursements on external debt, long-term (DIS, current US$)\"', 'DT.DIS.DLXF.CD', 253819587.3)\n('Bosnia and Herzegovina', 'BIH', '\"Interest payments on external debt, long-term (INT, current US$)\"', 'DT.INT.DLXF.CD', 604620360.0)\n('Bosnia and Herzegovina', 'BIH', '\"Interest payments on external debt, private nonguaranteed (PNG) (INT, current US$)\"', 'DT.INT.DPNG.CD', 545519000.0)\n('Bosnia and Herzegovina', 'BIH', '\"PPG, bilateral (AMT, current US$)\"', 'DT.AMT.BLAT.CD', 108704966.2)\n('Bosnia and Herzegovina', 'BIH', '\"PPG, bilateral (DIS, current US$)\"', 'DT.DIS.BLAT.CD', 114375048.3)\n('Bosnia and Herzegovina', 'BIH', '\"PPG, bilateral (INT, current US$)\"', 'DT.INT.BLAT.CD', 12605397.7)\n('Bosnia and Herzegovina', 'BIH', '\"PPG, bonds (AMT, current US$)\"', 'DT.AMT.PBND.CD', 22306080.5)\n('Bosnia and Herzegovina', 'BIH', '\"PPG, bonds (INT, current US$)\"', 'DT.INT.PBND.CD', 1625051.5)\n('Bosnia and Herzegovina', 'BIH', '\"PPG, commercial banks (AMT, current US$)\"', 'DT.AMT.PCBK.CD', 8958027.7)\n('Bosnia and Herzegovina', 'BIH', '\"PPG, commercial banks (INT, current US$)\"', 'DT.INT.PCBK.CD', 953443.5)\n('Bosnia and Herzegovina', 'BIH', '\"PPG, multilateral (AMT, current US$)\"', 'DT.AMT.MLAT.CD', 290170946.5)\n('Bosnia and Herzegovina', 'BIH', '\"PPG, multilateral (DIS, current US$)\"', 'DT.DIS.MLAT.CD', 139444539.0)\n('Bosnia and Herzegovina', 'BIH', '\"PPG, multilateral (INT, current US$)\"', 'DT.INT.MLAT.CD', 43917467.3)\n('Bosnia and Herzegovina', 'BIH', '\"PPG, official creditors (AMT, current US$)\"', 'DT.AMT.OFFT.CD', 398875912.7)\n('Bosnia and Herzegovina', 'BIH', '\"PPG, official creditors (DIS, current US$)\"', 'DT.DIS.OFFT.CD', 253819587.3)\n('Bosnia and Herzegovina', 'BIH', '\"PPG, official creditors (INT, current US$)\"', 'DT.INT.OFFT.CD', 56522865.0)\n('Bosnia and Herzegovina', 'BIH', '\"PPG, private creditors (AMT, current US$)\"', 'DT.AMT.PRVT.CD', 31264108.2)\n('Bosnia and Herzegovina', 'BIH', '\"PPG, private creditors (INT, current US$)\"', 'DT.INT.PRVT.CD', 2578495.0)\n('Bosnia and Herzegovina', 'BIH', '\"Principal repayments on external debt, long-term (AMT, current US$)\"', 'DT.AMT.DLXF.CD', 2112748020.9)\n('Bosnia and Herzegovina', 'BIH', '\"Principal repayments on external debt, private nonguaranteed (PNG) (AMT, current US$)\"', 'DT.AMT.DPNG.CD', 1682608000.0)\n('Botswana', 'BWA', '\"Disbursements on external debt, long-term (DIS, current US$)\"', 'DT.DIS.DLXF.CD', 53337570.1)\n('Botswana', 'BWA', '\"Interest payments on external debt, long-term (INT, current US$)\"', 'DT.INT.DLXF.CD', 24028273.8)\n('Botswana', 'BWA', '\"PPG, bilateral (AMT, current US$)\"', 'DT.AMT.BLAT.CD', 7903563.5)\n('Botswana', 'BWA', '\"PPG, bilateral (DIS, current US$)\"', 'DT.DIS.BLAT.CD', 1316332.2)\n('Botswana', 'BWA', '\"PPG, bilateral (INT, current US$)\"', 'DT.INT.BLAT.CD', 884447.5)\n('Botswana', 'BWA', '\"PPG, multilateral (AMT, current US$)\"', 'DT.AMT.MLAT.CD', 125652344.5)\n('Botswana', 'BWA', '\"PPG, multilateral (DIS, current US$)\"', 'DT.DIS.MLAT.CD', 52021237.9)\n('Botswana', 'BWA', '\"PPG, multilateral (INT, current US$)\"', 'DT.INT.MLAT.CD', 23103826.3)\n('Botswana', 'BWA', '\"PPG, official creditors (AMT, current US$)\"', 'DT.AMT.OFFT.CD', 133555908.0)\n('Botswana', 'BWA', '\"PPG, official creditors (DIS, current US$)\"', 'DT.DIS.OFFT.CD', 53337570.1)\n('Botswana', 'BWA', '\"PPG, official creditors (INT, current US$)\"', 'DT.INT.OFFT.CD', 23988273.8)\n('Botswana', 'BWA', '\"PPG, other private creditors (AMT, current US$)\"', 'DT.AMT.PROP.CD', 4440000.0)\n('Botswana', 'BWA', '\"PPG, other private creditors (INT, current US$)\"', 'DT.INT.PROP.CD', 40000.0)\n('Botswana', 'BWA', '\"PPG, private creditors (AMT, current US$)\"', 'DT.AMT.PRVT.CD', 4440000.0)\n('Botswana', 'BWA', '\"PPG, private creditors (INT, current US$)\"', 'DT.INT.PRVT.CD', 40000.0)\n('Botswana', 'BWA', '\"Principal repayments on external debt, long-term (AMT, current US$)\"', 'DT.AMT.DLXF.CD', 137995908.0)\n('Brazil', 'BRA', '\"Disbursements on external debt, long-term (DIS, current US$)\"', 'DT.DIS.DLXF.CD', 4092388651.4)\n('Brazil', 'BRA', '\"Interest payments on external debt, long-term (INT, current US$)\"', 'DT.INT.DLXF.CD', 17001653109.2)\n('Brazil', 'BRA', '\"Interest payments on external debt, private nonguaranteed (PNG) (INT, current US$)\"', 'DT.INT.DPNG.CD', 10952236000.0)\n('Brazil', 'BRA', '\"PPG, bilateral (AMT, current US$)\"', 'DT.AMT.BLAT.CD', 2097380010.6)\n('Brazil', 'BRA', '\"PPG, bilateral (DIS, current US$)\"', 'DT.DIS.BLAT.CD', 1179125278.8)\n('Brazil', 'BRA', '\"PPG, bilateral (INT, current US$)\"', 'DT.INT.BLAT.CD', 333237826.9)\n('Brazil', 'BRA', '\"PPG, bonds (AMT, current US$)\"', 'DT.AMT.PBND.CD', 1940858500.0)\n('Brazil', 'BRA', '\"PPG, bonds (INT, current US$)\"', 'DT.INT.PBND.CD', 2550410063.2)\n('Brazil', 'BRA', '\"PPG, commercial banks (AMT, current US$)\"', 'DT.AMT.PCBK.CD', 6538835248.6)\n('Brazil', 'BRA', '\"PPG, commercial banks (DIS, current US$)\"', 'DT.DIS.PCBK.CD', 964149852.8)\n('Brazil', 'BRA', '\"PPG, commercial banks (INT, current US$)\"', 'DT.INT.PCBK.CD', 1846318920.2)\n('Brazil', 'BRA', '\"PPG, multilateral (AMT, current US$)\"', 'DT.AMT.MLAT.CD', 2514318741.6)\n('Brazil', 'BRA', '\"PPG, multilateral (DIS, current US$)\"', 'DT.DIS.MLAT.CD', 1949113519.8)\n('Brazil', 'BRA', '\"PPG, multilateral (INT, current US$)\"', 'DT.INT.MLAT.CD', 706029298.9)\n('Brazil', 'BRA', '\"PPG, official creditors (AMT, current US$)\"', 'DT.AMT.OFFT.CD', 4611698752.2)\n('Brazil', 'BRA', '\"PPG, official creditors (DIS, current US$)\"', 'DT.DIS.OFFT.CD', 3128238798.6)\n('Brazil', 'BRA', '\"PPG, official creditors (INT, current US$)\"', 'DT.INT.OFFT.CD', 1039267125.8)\n('Brazil', 'BRA', '\"PPG, other private creditors (AMT, current US$)\"', 'DT.AMT.PROP.CD', 35119003750.0)\n('Brazil', 'BRA', '\"PPG, other private creditors (INT, current US$)\"', 'DT.INT.PROP.CD', 613421000.0)\n('Brazil', 'BRA', '\"PPG, private creditors (AMT, current US$)\"', 'DT.AMT.PRVT.CD', 43598697498.6)\n('Brazil', 'BRA', '\"PPG, private creditors (DIS, current US$)\"', 'DT.DIS.PRVT.CD', 964149852.8)\n('Brazil', 'BRA', '\"PPG, private creditors (INT, current US$)\"', 'DT.INT.PRVT.CD', 5010149983.4)\n('Brazil', 'BRA', '\"Principal repayments on external debt, long-term (AMT, current US$)\"', 'DT.AMT.DLXF.CD', 90041840304.1)\n('Brazil', 'BRA', '\"Principal repayments on external debt, private nonguaranteed (PNG) (AMT, current US$)\"', 'DT.AMT.DPNG.CD', 41831444053.3)\n('Bulgaria', 'BGR', '\"Disbursements on external debt, long-term (DIS, current US$)\"', 'DT.DIS.DLXF.CD', 15032935.4)\n('Bulgaria', 'BGR', '\"Interest payments on external debt, long-term (INT, current US$)\"', 'DT.INT.DLXF.CD', 1012039083.1)\n('Bulgaria', 'BGR', '\"Interest payments on external debt, private nonguaranteed (PNG) (INT, current US$)\"', 'DT.INT.DPNG.CD', 743516000.0)\n('Bulgaria', 'BGR', '\"PPG, bilateral (AMT, current US$)\"', 'DT.AMT.BLAT.CD', 35764202.8)\n('Bulgaria', 'BGR', '\"PPG, bilateral (INT, current US$)\"', 'DT.INT.BLAT.CD', 6012379.2)\n('Bulgaria', 'BGR', '\"PPG, bonds (AMT, current US$)\"', 'DT.AMT.PBND.CD', 0.0)\n('Bulgaria', 'BGR', '\"PPG, bonds (INT, current US$)\"', 'DT.INT.PBND.CD', 204322342.4)\n('Bulgaria', 'BGR', '\"PPG, commercial banks (AMT, current US$)\"', 'DT.AMT.PCBK.CD', 234043.4)\n('Bulgaria', 'BGR', '\"PPG, commercial banks (INT, current US$)\"', 'DT.INT.PCBK.CD', 87548.9)\n('Bulgaria', 'BGR', '\"PPG, multilateral (AMT, current US$)\"', 'DT.AMT.MLAT.CD', 228993019.8)\n('Bulgaria', 'BGR', '\"PPG, multilateral (DIS, current US$)\"', 'DT.DIS.MLAT.CD', 15032935.4)\n('Bulgaria', 'BGR', '\"PPG, multilateral (INT, current US$)\"', 'DT.INT.MLAT.CD', 58100812.6)\n('Bulgaria', 'BGR', '\"PPG, official creditors (AMT, current US$)\"', 'DT.AMT.OFFT.CD', 264757222.6)\n('Bulgaria', 'BGR', '\"PPG, official creditors (DIS, current US$)\"', 'DT.DIS.OFFT.CD', 15032935.4)\n('Bulgaria', 'BGR', '\"PPG, official creditors (INT, current US$)\"', 'DT.INT.OFFT.CD', 64113191.8)\n('Bulgaria', 'BGR', '\"PPG, private creditors (AMT, current US$)\"', 'DT.AMT.PRVT.CD', 234043.4)\n('Bulgaria', 'BGR', '\"PPG, private creditors (INT, current US$)\"', 'DT.INT.PRVT.CD', 204409891.3)\n('Bulgaria', 'BGR', '\"Principal repayments on external debt, long-term (AMT, current US$)\"', 'DT.AMT.DLXF.CD', 1883205166.2)\n('Bulgaria', 'BGR', '\"Principal repayments on external debt, private nonguaranteed (PNG) (AMT, current US$)\"', 'DT.AMT.DPNG.CD', 1618213900.2)\n('Burkina Faso', 'BFA', '\"Disbursements on external debt, long-term (DIS, current US$)\"', 'DT.DIS.DLXF.CD', 617436227.2)\n('Burkina Faso', 'BFA', '\"Interest payments on external debt, long-term (INT, current US$)\"', 'DT.INT.DLXF.CD', 42083630.7)\n('Burkina Faso', 'BFA', '\"PPG, bilateral (AMT, current US$)\"', 'DT.AMT.BLAT.CD', 27371336.0)\n('Burkina Faso', 'BFA', '\"PPG, bilateral (DIS, current US$)\"', 'DT.DIS.BLAT.CD', 90915960.2)\n('Burkina Faso', 'BFA', '\"PPG, bilateral (INT, current US$)\"', 'DT.INT.BLAT.CD', 7382485.5)\n('Burkina Faso', 'BFA', '\"PPG, multilateral (AMT, current US$)\"', 'DT.AMT.MLAT.CD', 119510893.0)\n('Burkina Faso', 'BFA', '\"PPG, multilateral (DIS, current US$)\"', 'DT.DIS.MLAT.CD', 526520267.0)\n('Burkina Faso', 'BFA', '\"PPG, multilateral (INT, current US$)\"', 'DT.INT.MLAT.CD', 34701145.2)\n('Burkina Faso', 'BFA', '\"PPG, official creditors (AMT, current US$)\"', 'DT.AMT.OFFT.CD', 146882229.0)\n('Burkina Faso', 'BFA', '\"PPG, official creditors (DIS, current US$)\"', 'DT.DIS.OFFT.CD', 617436227.2)\n('Burkina Faso', 'BFA', '\"PPG, official creditors (INT, current US$)\"', 'DT.INT.OFFT.CD', 42083630.7)\n('Burkina Faso', 'BFA', '\"Principal repayments on external debt, long-term (AMT, current US$)\"', 'DT.AMT.DLXF.CD', 146882229.0)\n('Burundi', 'BDI', '\"Disbursements on external debt, long-term (DIS, current US$)\"', 'DT.DIS.DLXF.CD', 64846467.3)\n('Burundi', 'BDI', '\"Interest payments on external debt, long-term (INT, current US$)\"', 'DT.INT.DLXF.CD', 2573479.6)\n('Burundi', 'BDI', '\"PPG, bilateral (AMT, current US$)\"', 'DT.AMT.BLAT.CD', 10461498.5)\n('Burundi', 'BDI', '\"PPG, bilateral (DIS, current US$)\"', 'DT.DIS.BLAT.CD', 42339024.4)\n('Burundi', 'BDI', '\"PPG, bilateral (INT, current US$)\"', 'DT.INT.BLAT.CD', 520425.7)\n('Burundi', 'BDI', '\"PPG, multilateral (AMT, current US$)\"', 'DT.AMT.MLAT.CD', 16115111.8)\n('Burundi', 'BDI', '\"PPG, multilateral (DIS, current US$)\"', 'DT.DIS.MLAT.CD', 22507442.9)\n('Burundi', 'BDI', '\"PPG, multilateral (INT, current US$)\"', 'DT.INT.MLAT.CD', 2053053.9)\n('Burundi', 'BDI', '\"PPG, official creditors (AMT, current US$)\"', 'DT.AMT.OFFT.CD', 26576610.3)\n('Burundi', 'BDI', '\"PPG, official creditors (DIS, current US$)\"', 'DT.DIS.OFFT.CD', 64846467.3)\n('Burundi', 'BDI', '\"PPG, official creditors (INT, current US$)\"', 'DT.INT.OFFT.CD', 2573479.6)\n('Burundi', 'BDI', '\"Principal repayments on external debt, long-term (AMT, current US$)\"', 'DT.AMT.DLXF.CD', 26576610.3)\n('Cabo Verde', 'CPV', '\"Disbursements on external debt, long-term (DIS, current US$)\"', 'DT.DIS.DLXF.CD', 109582071.9)\n('Cabo Verde', 'CPV', '\"Interest payments on external debt, long-term (INT, current US$)\"', 'DT.INT.DLXF.CD', 21568390.7)\n('Cabo Verde', 'CPV', '\"PPG, bilateral (AMT, current US$)\"', 'DT.AMT.BLAT.CD', 11767654.3)\n('Cabo Verde', 'CPV', '\"PPG, bilateral (DIS, current US$)\"', 'DT.DIS.BLAT.CD', 37178444.8)\n('Cabo Verde', 'CPV', '\"PPG, bilateral (INT, current US$)\"', 'DT.INT.BLAT.CD', 4216236.3)\n('Cabo Verde', 'CPV', '\"PPG, commercial banks (AMT, current US$)\"', 'DT.AMT.PCBK.CD', 15990666.7)\n('Cabo Verde', 'CPV', '\"PPG, commercial banks (DIS, current US$)\"', 'DT.DIS.PCBK.CD', 27099862.5)\n('Cabo Verde', 'CPV', '\"PPG, commercial banks (INT, current US$)\"', 'DT.INT.PCBK.CD', 10062127.0)\n('Cabo Verde', 'CPV', '\"PPG, multilateral (AMT, current US$)\"', 'DT.AMT.MLAT.CD', 39970124.9)\n('Cabo Verde', 'CPV', '\"PPG, multilateral (DIS, current US$)\"', 'DT.DIS.MLAT.CD', 45303764.6)\n('Cabo Verde', 'CPV', '\"PPG, multilateral (INT, current US$)\"', 'DT.INT.MLAT.CD', 7290027.4)\n('Cabo Verde', 'CPV', '\"PPG, official creditors (AMT, current US$)\"', 'DT.AMT.OFFT.CD', 51737779.2)\n('Cabo Verde', 'CPV', '\"PPG, official creditors (DIS, current US$)\"', 'DT.DIS.OFFT.CD', 82482209.4)\n('Cabo Verde', 'CPV', '\"PPG, official creditors (INT, current US$)\"', 'DT.INT.OFFT.CD', 11506263.7)\n('Cabo Verde', 'CPV', '\"PPG, private creditors (AMT, current US$)\"', 'DT.AMT.PRVT.CD', 15990666.7)\n('Cabo Verde', 'CPV', '\"PPG, private creditors (DIS, current US$)\"', 'DT.DIS.PRVT.CD', 27099862.5)\n('Cabo Verde', 'CPV', '\"PPG, private creditors (INT, current US$)\"', 'DT.INT.PRVT.CD', 10062127.0)\n('Cabo Verde', 'CPV', '\"Principal repayments on external debt, long-term (AMT, current US$)\"', 'DT.AMT.DLXF.CD', 67728445.9)\n('Cambodia', 'KHM', '\"Disbursements on external debt, long-term (DIS, current US$)\"', 'DT.DIS.DLXF.CD', 642047150.8)\n('Cambodia', 'KHM', '\"Interest payments on external debt, long-term (INT, current US$)\"', 'DT.INT.DLXF.CD', 183222625.4)\n('Cambodia', 'KHM', '\"Interest payments on external debt, private nonguaranteed (PNG) (INT, current US$)\"', 'DT.INT.DPNG.CD', 93702000.0)\n('Cambodia', 'KHM', '\"PPG, bilateral (AMT, current US$)\"', 'DT.AMT.BLAT.CD', 223300273.6)\n('Cambodia', 'KHM', '\"PPG, bilateral (DIS, current US$)\"', 'DT.DIS.BLAT.CD', 476683829.4)\n('Cambodia', 'KHM', '\"PPG, bilateral (INT, current US$)\"', 'DT.INT.BLAT.CD', 63836683.2)\n('Cambodia', 'KHM', '\"PPG, multilateral (AMT, current US$)\"', 'DT.AMT.MLAT.CD', 72307001.79999998)\n('Cambodia', 'KHM', '\"PPG, multilateral (DIS, current US$)\"', 'DT.DIS.MLAT.CD', 165363321.4)\n('Cambodia', 'KHM', '\"PPG, multilateral (INT, current US$)\"', 'DT.INT.MLAT.CD', 25683942.2)\n('Cambodia', 'KHM', '\"PPG, official creditors (AMT, current US$)\"', 'DT.AMT.OFFT.CD', 295607275.4)\n('Cambodia', 'KHM', '\"PPG, official creditors (DIS, current US$)\"', 'DT.DIS.OFFT.CD', 642047150.8)\n('Cambodia', 'KHM', '\"PPG, official creditors (INT, current US$)\"', 'DT.INT.OFFT.CD', 89520625.4)\n('Cambodia', 'KHM', '\"Principal repayments on external debt, long-term (AMT, current US$)\"', 'DT.AMT.DLXF.CD', 775955981.2999998)\n('Cambodia', 'KHM', '\"Principal repayments on external debt, private nonguaranteed (PNG) (AMT, current US$)\"', 'DT.AMT.DPNG.CD', 480348705.9)\n('Cameroon', 'CMR', '\"Disbursements on external debt, long-term (DIS, current US$)\"', 'DT.DIS.DLXF.CD', 18186662060.4)\n('Cameroon', 'CMR', '\"Interest payments on external debt, long-term (INT, current US$)\"', 'DT.INT.DLXF.CD', 280795576.4)\n('Cameroon', 'CMR', '\"Interest payments on external debt, private nonguaranteed (PNG) (INT, current US$)\"', 'DT.INT.DPNG.CD', 23235000.0)\n('Cameroon', 'CMR', '\"PPG, bilateral (AMT, current US$)\"', 'DT.AMT.BLAT.CD', 9999925153.3)\n('Cameroon', 'CMR', '\"PPG, bilateral (DIS, current US$)\"', 'DT.DIS.BLAT.CD', 17090544247.5)\n('Cameroon', 'CMR', '\"PPG, bilateral (INT, current US$)\"', 'DT.INT.BLAT.CD', 120877158.5)\n('Cameroon', 'CMR', '\"PPG, bonds (AMT, current US$)\"', 'DT.AMT.PBND.CD', 0.0)\n('Cameroon', 'CMR', '\"PPG, bonds (INT, current US$)\"', 'DT.INT.PBND.CD', 65222000.0)\n('Cameroon', 'CMR', '\"PPG, commercial banks (AMT, current US$)\"', 'DT.AMT.PCBK.CD', 128608183.9)\n('Cameroon', 'CMR', '\"PPG, commercial banks (DIS, current US$)\"', 'DT.DIS.PCBK.CD', 196167124.8)\n('Cameroon', 'CMR', '\"PPG, commercial banks (INT, current US$)\"', 'DT.INT.PCBK.CD', 20590696.1)\n('Cameroon', 'CMR', '\"PPG, multilateral (AMT, current US$)\"', 'DT.AMT.MLAT.CD', 152095968.1)\n('Cameroon', 'CMR', '\"PPG, multilateral (DIS, current US$)\"', 'DT.DIS.MLAT.CD', 850036788.1)\n('Cameroon', 'CMR', '\"PPG, multilateral (INT, current US$)\"', 'DT.INT.MLAT.CD', 45124721.8)\n('Cameroon', 'CMR', '\"PPG, official creditors (AMT, current US$)\"', 'DT.AMT.OFFT.CD', 10152021121.4)\n('Cameroon', 'CMR', '\"PPG, official creditors (DIS, current US$)\"', 'DT.DIS.OFFT.CD', 17940581035.6)\n('Cameroon', 'CMR', '\"PPG, official creditors (INT, current US$)\"', 'DT.INT.OFFT.CD', 166001880.3)\n('Cameroon', 'CMR', '\"PPG, other private creditors (AMT, current US$)\"', 'DT.AMT.PROP.CD', 21809210.5)\n('Cameroon', 'CMR', '\"PPG, other private creditors (DIS, current US$)\"', 'DT.DIS.PROP.CD', 49913900.0)\n('Cameroon', 'CMR', '\"PPG, other private creditors (INT, current US$)\"', 'DT.INT.PROP.CD', 5746000.0)\n('Cameroon', 'CMR', '\"PPG, private creditors (AMT, current US$)\"', 'DT.AMT.PRVT.CD', 150417394.4)\n('Cameroon', 'CMR', '\"PPG, private creditors (DIS, current US$)\"', 'DT.DIS.PRVT.CD', 246081024.8)\n('Cameroon', 'CMR', '\"PPG, private creditors (INT, current US$)\"', 'DT.INT.PRVT.CD', 91558696.1)\n('Cameroon', 'CMR', '\"Principal repayments on external debt, long-term (AMT, current US$)\"', 'DT.AMT.DLXF.CD', 10404814960.2)\n('Cameroon', 'CMR', '\"Principal repayments on external debt, private nonguaranteed (PNG) (AMT, current US$)\"', 'DT.AMT.DPNG.CD', 102376444.4)\n('Central African Republic', 'CAF', '\"Disbursements on external debt, long-term (DIS, current US$)\"', 'DT.DIS.DLXF.CD', 53717612.9)\n('Central African Republic', 'CAF', '\"Interest payments on external debt, long-term (INT, current US$)\"', 'DT.INT.DLXF.CD', 2354220.8)\n('Central African Republic', 'CAF', '\"PPG, bilateral (AMT, current US$)\"', 'DT.AMT.BLAT.CD', 8462062.9)\n('Central African Republic', 'CAF', '\"PPG, bilateral (DIS, current US$)\"', 'DT.DIS.BLAT.CD', 19477551.6)\n('Central African Republic', 'CAF', '\"PPG, bilateral (INT, current US$)\"', 'DT.INT.BLAT.CD', 860961.0)\n('Central African Republic', 'CAF', '\"PPG, multilateral (AMT, current US$)\"', 'DT.AMT.MLAT.CD', 2241813.8)\n('Central African Republic', 'CAF', '\"PPG, multilateral (DIS, current US$)\"', 'DT.DIS.MLAT.CD', 34240061.3)\n('Central African Republic', 'CAF', '\"PPG, multilateral (INT, current US$)\"', 'DT.INT.MLAT.CD', 1373259.8)\n('Central African Republic', 'CAF', '\"PPG, official creditors (AMT, current US$)\"', 'DT.AMT.OFFT.CD', 10703876.7)\n('Central African Republic', 'CAF', '\"PPG, official creditors (DIS, current US$)\"', 'DT.DIS.OFFT.CD', 53717612.9)\n('Central African Republic', 'CAF', '\"PPG, official creditors (INT, current US$)\"', 'DT.INT.OFFT.CD', 2234220.8)\n('Central African Republic', 'CAF', '\"PPG, other private creditors (AMT, current US$)\"', 'DT.AMT.PROP.CD', 400000.0)\n('Central African Republic', 'CAF', '\"PPG, other private creditors (INT, current US$)\"', 'DT.INT.PROP.CD', 120000.0)\n('Central African Republic', 'CAF', '\"PPG, private creditors (AMT, current US$)\"', 'DT.AMT.PRVT.CD', 400000.0)\n('Central African Republic', 'CAF', '\"PPG, private creditors (INT, current US$)\"', 'DT.INT.PRVT.CD', 120000.0)\n('Central African Republic', 'CAF', '\"Principal repayments on external debt, long-term (AMT, current US$)\"', 'DT.AMT.DLXF.CD', 11103876.7)\n('Chad', 'TCD', '\"Disbursements on external debt, long-term (DIS, current US$)\"', 'DT.DIS.DLXF.CD', 207090418.3)\n('Chad', 'TCD', '\"Interest payments on external debt, long-term (INT, current US$)\"', 'DT.INT.DLXF.CD', 139946001.3)\n('Chad', 'TCD', '\"PPG, bilateral (AMT, current US$)\"', 'DT.AMT.BLAT.CD', 82357214.9)\n('Chad', 'TCD', '\"PPG, bilateral (DIS, current US$)\"', 'DT.DIS.BLAT.CD', 27987660.9)\n('Chad', 'TCD', '\"PPG, bilateral (INT, current US$)\"', 'DT.INT.BLAT.CD', 11882770.9)\n('Chad', 'TCD', '\"PPG, commercial banks (AMT, current US$)\"', 'DT.AMT.PCBK.CD', 11033.6)\n('Chad', 'TCD', '\"PPG, commercial banks (INT, current US$)\"', 'DT.INT.PCBK.CD', 4797.2)\n('Chad', 'TCD', '\"PPG, multilateral (AMT, current US$)\"', 'DT.AMT.MLAT.CD', 95738709.5)\n('Chad', 'TCD', '\"PPG, multilateral (DIS, current US$)\"', 'DT.DIS.MLAT.CD', 179102757.4)\n('Chad', 'TCD', '\"PPG, multilateral (INT, current US$)\"', 'DT.INT.MLAT.CD', 15590433.2)\n('Chad', 'TCD', '\"PPG, official creditors (AMT, current US$)\"', 'DT.AMT.OFFT.CD', 178095924.4)\n('Chad', 'TCD', '\"PPG, official creditors (DIS, current US$)\"', 'DT.DIS.OFFT.CD', 207090418.3)\n('Chad', 'TCD', '\"PPG, official creditors (INT, current US$)\"', 'DT.INT.OFFT.CD', 27473204.1)\n('Chad', 'TCD', '\"PPG, other private creditors (AMT, current US$)\"', 'DT.AMT.PROP.CD', 0.0)\n('Chad', 'TCD', '\"PPG, other private creditors (INT, current US$)\"', 'DT.INT.PROP.CD', 112468000.0)\n('Chad', 'TCD', '\"PPG, private creditors (AMT, current US$)\"', 'DT.AMT.PRVT.CD', 11033.6)\n('Chad', 'TCD', '\"PPG, private creditors (INT, current US$)\"', 'DT.INT.PRVT.CD', 112472797.2)\n('Chad', 'TCD', '\"Principal repayments on external debt, long-term (AMT, current US$)\"', 'DT.AMT.DLXF.CD', 178106958.0)\n('China', 'CHN', '\"Disbursements on external debt, long-term (DIS, current US$)\"', 'DT.DIS.DLXF.CD', 15692563746.1)\n('China', 'CHN', '\"Interest payments on external debt, long-term (INT, current US$)\"', 'DT.INT.DLXF.CD', 17866548651.4)\n('China', 'CHN', '\"Interest payments on external debt, private nonguaranteed (PNG) (INT, current US$)\"', 'DT.INT.DPNG.CD', 14142718751.6)\n('China', 'CHN', '\"PPG, bilateral (AMT, current US$)\"', 'DT.AMT.BLAT.CD', 6532446441.9)\n('China', 'CHN', '\"PPG, bilateral (INT, current US$)\"', 'DT.INT.BLAT.CD', 514898407.1)\n('China', 'CHN', '\"PPG, bonds (AMT, current US$)\"', 'DT.AMT.PBND.CD', 9834677000.0)\n('China', 'CHN', '\"PPG, bonds (INT, current US$)\"', 'DT.INT.PBND.CD', 1224249000.0)\n('China', 'CHN', '\"PPG, commercial banks (AMT, current US$)\"', 'DT.AMT.PCBK.CD', 4046243298.5)\n('China', 'CHN', '\"PPG, commercial banks (DIS, current US$)\"', 'DT.DIS.PCBK.CD', 3777050273.3)\n('China', 'CHN', '\"PPG, commercial banks (INT, current US$)\"', 'DT.INT.PCBK.CD', 969933090.0)\n('China', 'CHN', '\"PPG, multilateral (AMT, current US$)\"', 'DT.AMT.MLAT.CD', 2615723714.1)\n('China', 'CHN', '\"PPG, multilateral (DIS, current US$)\"', 'DT.DIS.MLAT.CD', 3079501272.1)\n('China', 'CHN', '\"PPG, multilateral (INT, current US$)\"', 'DT.INT.MLAT.CD', 858406974.7999998)\n('China', 'CHN', '\"PPG, official creditors (AMT, current US$)\"', 'DT.AMT.OFFT.CD', 9148170156.0)\n('China', 'CHN', '\"PPG, official creditors (DIS, current US$)\"', 'DT.DIS.OFFT.CD', 3079501272.1)\n('China', 'CHN', '\"PPG, official creditors (INT, current US$)\"', 'DT.INT.OFFT.CD', 1373305381.9)\n('China', 'CHN', '\"PPG, other private creditors (AMT, current US$)\"', 'DT.AMT.PROP.CD', 796544167.3999999)\n('China', 'CHN', '\"PPG, other private creditors (DIS, current US$)\"', 'DT.DIS.PROP.CD', 334012200.7)\n('China', 'CHN', '\"PPG, other private creditors (INT, current US$)\"', 'DT.INT.PROP.CD', 156342427.9)\n('China', 'CHN', '\"PPG, private creditors (AMT, current US$)\"', 'DT.AMT.PRVT.CD', 14677464465.9)\n('China', 'CHN', '\"PPG, private creditors (DIS, current US$)\"', 'DT.DIS.PRVT.CD', 4111062474.0)\n('China', 'CHN', '\"PPG, private creditors (INT, current US$)\"', 'DT.INT.PRVT.CD', 2350524517.9)\n('China', 'CHN', '\"Principal repayments on external debt, long-term (AMT, current US$)\"', 'DT.AMT.DLXF.CD', 96218620835.7)\n('China', 'CHN', '\"Principal repayments on external debt, private nonguaranteed (PNG) (AMT, current US$)\"', 'DT.AMT.DPNG.CD', 72392986213.8)\n('Colombia', 'COL', '\"Disbursements on external debt, long-term (DIS, current US$)\"', 'DT.DIS.DLXF.CD', 704314557.6)\n('Colombia', 'COL', '\"Interest payments on external debt, long-term (INT, current US$)\"', 'DT.INT.DLXF.CD', 4564574602.1)\n('Colombia', 'COL', '\"Interest payments on external debt, private nonguaranteed (PNG) (INT, current US$)\"', 'DT.INT.DPNG.CD', 1424280000.0)\n('Colombia', 'COL', '\"PPG, bilateral (AMT, current US$)\"', 'DT.AMT.BLAT.CD', 447557894.1)\n('Colombia', 'COL', '\"PPG, bilateral (DIS, current US$)\"', 'DT.DIS.BLAT.CD', 110671664.3)\n('Colombia', 'COL', '\"PPG, bilateral (INT, current US$)\"', 'DT.INT.BLAT.CD', 122715407.2)\n('Colombia', 'COL', '\"PPG, bonds (AMT, current US$)\"', 'DT.AMT.PBND.CD', 4398582816.7)\n('Colombia', 'COL', '\"PPG, bonds (INT, current US$)\"', 'DT.INT.PBND.CD', 2362344669.4)\n('Colombia', 'COL', '\"PPG, commercial banks (AMT, current US$)\"', 'DT.AMT.PCBK.CD', 1129332984.3)\n('Colombia', 'COL', '\"PPG, commercial banks (DIS, current US$)\"', 'DT.DIS.PCBK.CD', 13429800.0)\n('Colombia', 'COL', '\"PPG, commercial banks (INT, current US$)\"', 'DT.INT.PCBK.CD', 176027787.7)\n('Colombia', 'COL', '\"PPG, multilateral (AMT, current US$)\"', 'DT.AMT.MLAT.CD', 1100907553.6)\n('Colombia', 'COL', '\"PPG, multilateral (DIS, current US$)\"', 'DT.DIS.MLAT.CD', 580213093.3)\n('Colombia', 'COL', '\"PPG, multilateral (INT, current US$)\"', 'DT.INT.MLAT.CD', 479206737.8)\n('Colombia', 'COL', '\"PPG, official creditors (AMT, current US$)\"', 'DT.AMT.OFFT.CD', 1548465447.7)\n('Colombia', 'COL', '\"PPG, official creditors (DIS, current US$)\"', 'DT.DIS.OFFT.CD', 690884757.6)\n('Colombia', 'COL', '\"PPG, official creditors (INT, current US$)\"', 'DT.INT.OFFT.CD', 601922145.0)\n('Colombia', 'COL', '\"PPG, private creditors (AMT, current US$)\"', 'DT.AMT.PRVT.CD', 5527915801.0)\n('Colombia', 'COL', '\"PPG, private creditors (DIS, current US$)\"', 'DT.DIS.PRVT.CD', 13429800.0)\n('Colombia', 'COL', '\"PPG, private creditors (INT, current US$)\"', 'DT.INT.PRVT.CD', 2538372457.1)\n('Colombia', 'COL', '\"Principal repayments on external debt, long-term (AMT, current US$)\"', 'DT.AMT.DLXF.CD', 11985674438.7)\n('Colombia', 'COL', '\"Principal repayments on external debt, private nonguaranteed (PNG) (AMT, current US$)\"', 'DT.AMT.DPNG.CD', 4909293190.0)\n('Comoros', 'COM', '\"Disbursements on external debt, long-term (DIS, current US$)\"', 'DT.DIS.DLXF.CD', 13460035.4)\n('Comoros', 'COM', '\"Interest payments on external debt, long-term (INT, current US$)\"', 'DT.INT.DLXF.CD', 937189.9)\n('Comoros', 'COM', '\"PPG, bilateral (AMT, current US$)\"', 'DT.AMT.BLAT.CD', 2610216.0)\n('Comoros', 'COM', '\"PPG, bilateral (DIS, current US$)\"', 'DT.DIS.BLAT.CD', 8492726.4)\n('Comoros', 'COM', '\"PPG, bilateral (INT, current US$)\"', 'DT.INT.BLAT.CD', 782831.5)\n('Comoros', 'COM', '\"PPG, multilateral (AMT, current US$)\"', 'DT.AMT.MLAT.CD', 2182053.1)\n('Comoros', 'COM', '\"PPG, multilateral (DIS, current US$)\"', 'DT.DIS.MLAT.CD', 4967309.0)\n('Comoros', 'COM', '\"PPG, multilateral (INT, current US$)\"', 'DT.INT.MLAT.CD', 154358.4)\n('Comoros', 'COM', '\"PPG, official creditors (AMT, current US$)\"', 'DT.AMT.OFFT.CD', 4792269.1)\n('Comoros', 'COM', '\"PPG, official creditors (DIS, current US$)\"', 'DT.DIS.OFFT.CD', 13460035.4)\n('Comoros', 'COM', '\"PPG, official creditors (INT, current US$)\"', 'DT.INT.OFFT.CD', 937189.9)\n('Comoros', 'COM', '\"Principal repayments on external debt, long-term (AMT, current US$)\"', 'DT.AMT.DLXF.CD', 4792269.1)\n('\"Congo, Dem. Rep.\"', 'COD', '\"Disbursements on external debt, long-term (DIS, current US$)\"', 'DT.DIS.DLXF.CD', 370323229.6)\n('\"Congo, Dem. Rep.\"', 'COD', '\"Interest payments on external debt, long-term (INT, current US$)\"', 'DT.INT.DLXF.CD', 116207399.2)\n('\"Congo, Dem. Rep.\"', 'COD', '\"PPG, bilateral (AMT, current US$)\"', 'DT.AMT.BLAT.CD', 116452329.4)\n('\"Congo, Dem. Rep.\"', 'COD', '\"PPG, bilateral (DIS, current US$)\"', 'DT.DIS.BLAT.CD', 103263632.0)\n('\"Congo, Dem. Rep.\"', 'COD', '\"PPG, bilateral (INT, current US$)\"', 'DT.INT.BLAT.CD', 62260653.1)\n('\"Congo, Dem. Rep.\"', 'COD', '\"PPG, commercial banks (AMT, current US$)\"', 'DT.AMT.PCBK.CD', 278750.0)\n('\"Congo, Dem. Rep.\"', 'COD', '\"PPG, commercial banks (INT, current US$)\"', 'DT.INT.PCBK.CD', 0.0)\n('\"Congo, Dem. Rep.\"', 'COD', '\"PPG, multilateral (AMT, current US$)\"', 'DT.AMT.MLAT.CD', 143105462.0)\n('\"Congo, Dem. Rep.\"', 'COD', '\"PPG, multilateral (DIS, current US$)\"', 'DT.DIS.MLAT.CD', 267059597.6)\n('\"Congo, Dem. Rep.\"', 'COD', '\"PPG, multilateral (INT, current US$)\"', 'DT.INT.MLAT.CD', 53946746.1)\n('\"Congo, Dem. Rep.\"', 'COD', '\"PPG, official creditors (AMT, current US$)\"', 'DT.AMT.OFFT.CD', 259557791.4)\n('\"Congo, Dem. Rep.\"', 'COD', '\"PPG, official creditors (DIS, current US$)\"', 'DT.DIS.OFFT.CD', 370323229.6)\n('\"Congo, Dem. Rep.\"', 'COD', '\"PPG, official creditors (INT, current US$)\"', 'DT.INT.OFFT.CD', 116207399.2)\n('\"Congo, Dem. Rep.\"', 'COD', '\"PPG, private creditors (AMT, current US$)\"', 'DT.AMT.PRVT.CD', 278750.0)\n('\"Congo, Dem. Rep.\"', 'COD', '\"PPG, private creditors (INT, current US$)\"', 'DT.INT.PRVT.CD', 0.0)\n('\"Congo, Dem. Rep.\"', 'COD', '\"Principal repayments on external debt, long-term (AMT, current US$)\"', 'DT.AMT.DLXF.CD', 259836541.4)\n('\"Congo, Rep.\"', 'COG', '\"Disbursements on external debt, long-term (DIS, current US$)\"', 'DT.DIS.DLXF.CD', 247432137.7)\n('\"Congo, Rep.\"', 'COG', '\"Interest payments on external debt, long-term (INT, current US$)\"', 'DT.INT.DLXF.CD', 33115657.6)\n('\"Congo, Rep.\"', 'COG', '\"PPG, bilateral (AMT, current US$)\"', 'DT.AMT.BLAT.CD', 186071498.1)\n('\"Congo, Rep.\"', 'COG', '\"PPG, bilateral (DIS, current US$)\"', 'DT.DIS.BLAT.CD', 150347308.2)\n('\"Congo, Rep.\"', 'COG', '\"PPG, bilateral (INT, current US$)\"', 'DT.INT.BLAT.CD', 19522109.8)\n('\"Congo, Rep.\"', 'COG', '\"PPG, bonds (AMT, current US$)\"', 'DT.AMT.PBND.CD', 0.0)\n('\"Congo, Rep.\"', 'COG', '\"PPG, bonds (INT, current US$)\"', 'DT.INT.PBND.CD', 8736000.0)\n('\"Congo, Rep.\"', 'COG', '\"PPG, commercial banks (AMT, current US$)\"', 'DT.AMT.PCBK.CD', 21696428.5)\n('\"Congo, Rep.\"', 'COG', '\"PPG, commercial banks (INT, current US$)\"', 'DT.INT.PCBK.CD', 189000.0)\n('\"Congo, Rep.\"', 'COG', '\"PPG, multilateral (AMT, current US$)\"', 'DT.AMT.MLAT.CD', 18114469.0)\n('\"Congo, Rep.\"', 'COG', '\"PPG, multilateral (DIS, current US$)\"', 'DT.DIS.MLAT.CD', 97084829.5)\n('\"Congo, Rep.\"', 'COG', '\"PPG, multilateral (INT, current US$)\"', 'DT.INT.MLAT.CD', 4668547.8)\n('\"Congo, Rep.\"', 'COG', '\"PPG, official creditors (AMT, current US$)\"', 'DT.AMT.OFFT.CD', 204185967.1)\n('\"Congo, Rep.\"', 'COG', '\"PPG, official creditors (DIS, current US$)\"', 'DT.DIS.OFFT.CD', 247432137.7)\n('\"Congo, Rep.\"', 'COG', '\"PPG, official creditors (INT, current US$)\"', 'DT.INT.OFFT.CD', 24190657.6)\n('\"Congo, Rep.\"', 'COG', '\"PPG, private creditors (AMT, current US$)\"', 'DT.AMT.PRVT.CD', 21696428.5)\n('\"Congo, Rep.\"', 'COG', '\"PPG, private creditors (INT, current US$)\"', 'DT.INT.PRVT.CD', 8925000.0)\n('\"Congo, Rep.\"', 'COG', '\"Principal repayments on external debt, long-term (AMT, current US$)\"', 'DT.AMT.DLXF.CD', 225882395.6)\n('Costa Rica', 'CRI', '\"Disbursements on external debt, long-term (DIS, current US$)\"', 'DT.DIS.DLXF.CD', 600552336.8)\n('Costa Rica', 'CRI', '\"Interest payments on external debt, long-term (INT, current US$)\"', 'DT.INT.DLXF.CD', 1031562783.4)\n('Costa Rica', 'CRI', '\"Interest payments on external debt, private nonguaranteed (PNG) (INT, current US$)\"', 'DT.INT.DPNG.CD', 491033000.0)\n('Costa Rica', 'CRI', '\"PPG, bilateral (AMT, current US$)\"', 'DT.AMT.BLAT.CD', 34085176.1)\n('Costa Rica', 'CRI', '\"PPG, bilateral (DIS, current US$)\"', 'DT.DIS.BLAT.CD', 105969275.9)\n('Costa Rica', 'CRI', '\"PPG, bilateral (INT, current US$)\"', 'DT.INT.BLAT.CD', 10709783.4)\n('Costa Rica', 'CRI', '\"PPG, bonds (AMT, current US$)\"', 'DT.AMT.PBND.CD', 0.0)\n('Costa Rica', 'CRI', '\"PPG, bonds (INT, current US$)\"', 'DT.INT.PBND.CD', 361312000.0)\n('Costa Rica', 'CRI', '\"PPG, commercial banks (AMT, current US$)\"', 'DT.AMT.PCBK.CD', 351141926.7)\n('Costa Rica', 'CRI', '\"PPG, commercial banks (DIS, current US$)\"', 'DT.DIS.PCBK.CD', 1234500.0)\n('Costa Rica', 'CRI', '\"PPG, commercial banks (INT, current US$)\"', 'DT.INT.PCBK.CD', 59937000.0)\n('Costa Rica', 'CRI', '\"PPG, multilateral (AMT, current US$)\"', 'DT.AMT.MLAT.CD', 272808260.7)\n('Costa Rica', 'CRI', '\"PPG, multilateral (DIS, current US$)\"', 'DT.DIS.MLAT.CD', 493348560.9)\n('Costa Rica', 'CRI', '\"PPG, multilateral (INT, current US$)\"', 'DT.INT.MLAT.CD', 108571000.0)\n('Costa Rica', 'CRI', '\"PPG, official creditors (AMT, current US$)\"', 'DT.AMT.OFFT.CD', 306893436.8)\n('Costa Rica', 'CRI', '\"PPG, official creditors (DIS, current US$)\"', 'DT.DIS.OFFT.CD', 599317836.8)\n('Costa Rica', 'CRI', '\"PPG, official creditors (INT, current US$)\"', 'DT.INT.OFFT.CD', 119280783.4)\n('Costa Rica', 'CRI', '\"PPG, private creditors (AMT, current US$)\"', 'DT.AMT.PRVT.CD', 351141926.7)\n('Costa Rica', 'CRI', '\"PPG, private creditors (DIS, current US$)\"', 'DT.DIS.PRVT.CD', 1234500.0)\n('Costa Rica', 'CRI', '\"PPG, private creditors (INT, current US$)\"', 'DT.INT.PRVT.CD', 421249000.0)\n('Costa Rica', 'CRI', '\"Principal repayments on external debt, long-term (AMT, current US$)\"', 'DT.AMT.DLXF.CD', 1776491747.9)\n('Costa Rica', 'CRI', '\"Principal repayments on external debt, private nonguaranteed (PNG) (AMT, current US$)\"', 'DT.AMT.DPNG.CD', 1118456384.4)\n(\"Cote d'Ivoire\", 'CIV', '\"Disbursements on external debt, long-term (DIS, current US$)\"', 'DT.DIS.DLXF.CD', 1081936422.8)\n(\"Cote d'Ivoire\", 'CIV', '\"Interest payments on external debt, long-term (INT, current US$)\"', 'DT.INT.DLXF.CD', 422427447.9)\n(\"Cote d'Ivoire\", 'CIV', '\"Interest payments on external debt, private nonguaranteed (PNG) (INT, current US$)\"', 'DT.INT.DPNG.CD', 30540339.7)\n(\"Cote d'Ivoire\", 'CIV', '\"PPG, bilateral (AMT, current US$)\"', 'DT.AMT.BLAT.CD', 478283000.5)\n(\"Cote d'Ivoire\", 'CIV', '\"PPG, bilateral (DIS, current US$)\"', 'DT.DIS.BLAT.CD', 526901028.0)\n(\"Cote d'Ivoire\", 'CIV', '\"PPG, bilateral (INT, current US$)\"', 'DT.INT.BLAT.CD', 73124399.9)\n(\"Cote d'Ivoire\", 'CIV', '\"PPG, bonds (AMT, current US$)\"', 'DT.AMT.PBND.CD', 126548133.3)\n(\"Cote d'Ivoire\", 'CIV', '\"PPG, bonds (INT, current US$)\"', 'DT.INT.PBND.CD', 282160778.3)\n(\"Cote d'Ivoire\", 'CIV', '\"PPG, multilateral (AMT, current US$)\"', 'DT.AMT.MLAT.CD', 84629406.5)\n(\"Cote d'Ivoire\", 'CIV', '\"PPG, multilateral (DIS, current US$)\"', 'DT.DIS.MLAT.CD', 555035394.8)\n(\"Cote d'Ivoire\", 'CIV', '\"PPG, multilateral (INT, current US$)\"', 'DT.INT.MLAT.CD', 36573930.0)\n(\"Cote d'Ivoire\", 'CIV', '\"PPG, official creditors (AMT, current US$)\"', 'DT.AMT.OFFT.CD', 562912407.0)\n(\"Cote d'Ivoire\", 'CIV', '\"PPG, official creditors (DIS, current US$)\"', 'DT.DIS.OFFT.CD', 1081936422.8)\n(\"Cote d'Ivoire\", 'CIV', '\"PPG, official creditors (INT, current US$)\"', 'DT.INT.OFFT.CD', 109698329.9)\n(\"Cote d'Ivoire\", 'CIV', '\"PPG, other private creditors (AMT, current US$)\"', 'DT.AMT.PROP.CD', 11333333.3)\n(\"Cote d'Ivoire\", 'CIV', '\"PPG, other private creditors (INT, current US$)\"', 'DT.INT.PROP.CD', 28000.0)\n(\"Cote d'Ivoire\", 'CIV', '\"PPG, private creditors (AMT, current US$)\"', 'DT.AMT.PRVT.CD', 137881466.6)\n(\"Cote d'Ivoire\", 'CIV', '\"PPG, private creditors (INT, current US$)\"', 'DT.INT.PRVT.CD', 282188778.3)\n(\"Cote d'Ivoire\", 'CIV', '\"Principal repayments on external debt, long-term (AMT, current US$)\"', 'DT.AMT.DLXF.CD', 979241934.4)\n(\"Cote d'Ivoire\", 'CIV', '\"Principal repayments on external debt, private nonguaranteed (PNG) (AMT, current US$)\"', 'DT.AMT.DPNG.CD', 278448060.8)\n('Djibouti', 'DJI', '\"Disbursements on external debt, long-term (DIS, current US$)\"', 'DT.DIS.DLXF.CD', 176522478.2)\n('Djibouti', 'DJI', '\"Interest payments on external debt, long-term (INT, current US$)\"', 'DT.INT.DLXF.CD', 54325937.5)\n('Djibouti', 'DJI', '\"PPG, bilateral (AMT, current US$)\"', 'DT.AMT.BLAT.CD', 48803279.1)\n('Djibouti', 'DJI', '\"PPG, bilateral (DIS, current US$)\"', 'DT.DIS.BLAT.CD', 85687012.09999998)\n('Djibouti', 'DJI', '\"PPG, bilateral (INT, current US$)\"', 'DT.INT.BLAT.CD', 44878881.9)\n('Djibouti', 'DJI', '\"PPG, commercial banks (AMT, current US$)\"', 'DT.AMT.PCBK.CD', 127000.0)\n('Djibouti', 'DJI', '\"PPG, commercial banks (INT, current US$)\"', 'DT.INT.PCBK.CD', 11000.0)\n('Djibouti', 'DJI', '\"PPG, multilateral (AMT, current US$)\"', 'DT.AMT.MLAT.CD', 34254909.2)\n('Djibouti', 'DJI', '\"PPG, multilateral (DIS, current US$)\"', 'DT.DIS.MLAT.CD', 90835466.1)\n('Djibouti', 'DJI', '\"PPG, multilateral (INT, current US$)\"', 'DT.INT.MLAT.CD', 9436055.6)\n('Djibouti', 'DJI', '\"PPG, official creditors (AMT, current US$)\"', 'DT.AMT.OFFT.CD', 83058188.29999998)\n('Djibouti', 'DJI', '\"PPG, official creditors (DIS, current US$)\"', 'DT.DIS.OFFT.CD', 176522478.2)\n('Djibouti', 'DJI', '\"PPG, official creditors (INT, current US$)\"', 'DT.INT.OFFT.CD', 54314937.5)\n('Djibouti', 'DJI', '\"PPG, private creditors (AMT, current US$)\"', 'DT.AMT.PRVT.CD', 127000.0)\n('Djibouti', 'DJI', '\"PPG, private creditors (INT, current US$)\"', 'DT.INT.PRVT.CD', 11000.0)\n('Djibouti', 'DJI', '\"Principal repayments on external debt, long-term (AMT, current US$)\"', 'DT.AMT.DLXF.CD', 83185188.29999998)\n('Dominica', 'DMA', '\"Disbursements on external debt, long-term (DIS, current US$)\"', 'DT.DIS.DLXF.CD', 17673239.0)\n('Dominica', 'DMA', '\"Interest payments on external debt, long-term (INT, current US$)\"', 'DT.INT.DLXF.CD', 6947369.4)\n('Dominica', 'DMA', '\"PPG, bilateral (AMT, current US$)\"', 'DT.AMT.BLAT.CD', 8487067.1)\n('Dominica', 'DMA', '\"PPG, bilateral (DIS, current US$)\"', 'DT.DIS.BLAT.CD', 1092575.0)\n('Dominica', 'DMA', '\"PPG, bilateral (INT, current US$)\"', 'DT.INT.BLAT.CD', 1693891.5)\n('Dominica', 'DMA', '\"PPG, bonds (AMT, current US$)\"', 'DT.AMT.PBND.CD', 97108.5)\n('Dominica', 'DMA', '\"PPG, bonds (INT, current US$)\"', 'DT.INT.PBND.CD', 1706962.9)\n('Dominica', 'DMA', '\"PPG, commercial banks (AMT, current US$)\"', 'DT.AMT.PCBK.CD', 1142907.2)\n('Dominica', 'DMA', '\"PPG, commercial banks (INT, current US$)\"', 'DT.INT.PCBK.CD', 288740.8)\n('Dominica', 'DMA', '\"PPG, multilateral (AMT, current US$)\"', 'DT.AMT.MLAT.CD', 11130355.8)\n('Dominica', 'DMA', '\"PPG, multilateral (DIS, current US$)\"', 'DT.DIS.MLAT.CD', 16580664.0)\n('Dominica', 'DMA', '\"PPG, multilateral (INT, current US$)\"', 'DT.INT.MLAT.CD', 3120737.1)\n('Dominica', 'DMA', '\"PPG, official creditors (AMT, current US$)\"', 'DT.AMT.OFFT.CD', 19617422.9)\n('Dominica', 'DMA', '\"PPG, official creditors (DIS, current US$)\"', 'DT.DIS.OFFT.CD', 17673239.0)\n('Dominica', 'DMA', '\"PPG, official creditors (INT, current US$)\"', 'DT.INT.OFFT.CD', 4814628.6)\n('Dominica', 'DMA', '\"PPG, other private creditors (AMT, current US$)\"', 'DT.AMT.PROP.CD', 536719.6)\n('Dominica', 'DMA', '\"PPG, other private creditors (INT, current US$)\"', 'DT.INT.PROP.CD', 137037.1)\n('Dominica', 'DMA', '\"PPG, private creditors (AMT, current US$)\"', 'DT.AMT.PRVT.CD', 1776735.3)\n('Dominica', 'DMA', '\"PPG, private creditors (INT, current US$)\"', 'DT.INT.PRVT.CD', 2132740.8)\n('Dominica', 'DMA', '\"Principal repayments on external debt, long-term (AMT, current US$)\"', 'DT.AMT.DLXF.CD', 21394158.2)\n('Dominican Republic', 'DOM', '\"Disbursements on external debt, long-term (DIS, current US$)\"', 'DT.DIS.DLXF.CD', 643781535.5)\n('Dominican Republic', 'DOM', '\"Interest payments on external debt, long-term (INT, current US$)\"', 'DT.INT.DLXF.CD', 1365524193.4)\n('Dominican Republic', 'DOM', '\"Interest payments on external debt, private nonguaranteed (PNG) (INT, current US$)\"', 'DT.INT.DPNG.CD', 424284000.0)\n('Dominican Republic', 'DOM', '\"PPG, bilateral (AMT, current US$)\"', 'DT.AMT.BLAT.CD', 214014574.6)\n('Dominican Republic', 'DOM', '\"PPG, bilateral (DIS, current US$)\"', 'DT.DIS.BLAT.CD', 311336450.8)\n('Dominican Republic', 'DOM', '\"PPG, bilateral (INT, current US$)\"', 'DT.INT.BLAT.CD', 43812226.9)\n('Dominican Republic', 'DOM', '\"PPG, bonds (AMT, current US$)\"', 'DT.AMT.PBND.CD', 0.0)\n('Dominican Republic', 'DOM', '\"PPG, bonds (INT, current US$)\"', 'DT.INT.PBND.CD', 766308000.0)\n('Dominican Republic', 'DOM', '\"PPG, commercial banks (AMT, current US$)\"', 'DT.AMT.PCBK.CD', 313591688.9)\n('Dominican Republic', 'DOM', '\"PPG, commercial banks (DIS, current US$)\"', 'DT.DIS.PCBK.CD', 136346421.2)\n('Dominican Republic', 'DOM', '\"PPG, commercial banks (INT, current US$)\"', 'DT.INT.PCBK.CD', 39744531.5)\n('Georgia', 'GEO', '\"PPG, multilateral (INT, current US$)\"', 'DT.INT.MLAT.CD', 63295059.0)\n('Dominican Republic', 'DOM', '\"PPG, multilateral (AMT, current US$)\"', 'DT.AMT.MLAT.CD', 254728306.1)\n('Dominican Republic', 'DOM', '\"PPG, multilateral (DIS, current US$)\"', 'DT.DIS.MLAT.CD', 186149762.4)\n('Dominican Republic', 'DOM', '\"PPG, multilateral (INT, current US$)\"', 'DT.INT.MLAT.CD', 91151435.0)\n('Dominican Republic', 'DOM', '\"PPG, official creditors (AMT, current US$)\"', 'DT.AMT.OFFT.CD', 468742880.7)\n('Dominican Republic', 'DOM', '\"PPG, official creditors (DIS, current US$)\"', 'DT.DIS.OFFT.CD', 497486213.2)\n('Dominican Republic', 'DOM', '\"PPG, official creditors (INT, current US$)\"', 'DT.INT.OFFT.CD', 134963661.9)\n('Dominican Republic', 'DOM', '\"PPG, other private creditors (AMT, current US$)\"', 'DT.AMT.PROP.CD', 9497666.6)\n('Dominican Republic', 'DOM', '\"PPG, other private creditors (DIS, current US$)\"', 'DT.DIS.PROP.CD', 9948901.1)\n('Dominican Republic', 'DOM', '\"PPG, other private creditors (INT, current US$)\"', 'DT.INT.PROP.CD', 224000.0)\n('Dominican Republic', 'DOM', '\"PPG, private creditors (AMT, current US$)\"', 'DT.AMT.PRVT.CD', 323089355.5)\n('Dominican Republic', 'DOM', '\"PPG, private creditors (DIS, current US$)\"', 'DT.DIS.PRVT.CD', 146295322.3)\n('Dominican Republic', 'DOM', '\"PPG, private creditors (INT, current US$)\"', 'DT.INT.PRVT.CD', 806276531.5)\n('Dominican Republic', 'DOM', '\"Principal repayments on external debt, long-term (AMT, current US$)\"', 'DT.AMT.DLXF.CD', 1978111141.2)\n('Dominican Republic', 'DOM', '\"Principal repayments on external debt, private nonguaranteed (PNG) (AMT, current US$)\"', 'DT.AMT.DPNG.CD', 1186278905.0)\n('Ecuador', 'ECU', '\"Disbursements on external debt, long-term (DIS, current US$)\"', 'DT.DIS.DLXF.CD', 819756142.2)\n('Ecuador', 'ECU', '\"Interest payments on external debt, long-term (INT, current US$)\"', 'DT.INT.DLXF.CD', 1902464851.8)\n('Ecuador', 'ECU', '\"Interest payments on external debt, private nonguaranteed (PNG) (INT, current US$)\"', 'DT.INT.DPNG.CD', 222441000.0)\n('Ecuador', 'ECU', '\"PPG, bilateral (AMT, current US$)\"', 'DT.AMT.BLAT.CD', 1177917742.6)\n('Ecuador', 'ECU', '\"PPG, bilateral (DIS, current US$)\"', 'DT.DIS.BLAT.CD', 415778474.8)\n('Ecuador', 'ECU', '\"PPG, bilateral (INT, current US$)\"', 'DT.INT.BLAT.CD', 424453624.8)\n('Ecuador', 'ECU', '\"PPG, bonds (AMT, current US$)\"', 'DT.AMT.PBND.CD', 360282500.0)\n('Ecuador', 'ECU', '\"PPG, bonds (INT, current US$)\"', 'DT.INT.PBND.CD', 809837000.0)\n('Ecuador', 'ECU', '\"PPG, commercial banks (AMT, current US$)\"', 'DT.AMT.PCBK.CD', 79394343.7)\n('Ecuador', 'ECU', '\"PPG, commercial banks (DIS, current US$)\"', 'DT.DIS.PCBK.CD', 60256258.1)\n('Ecuador', 'ECU', '\"PPG, commercial banks (INT, current US$)\"', 'DT.INT.PCBK.CD', 207314486.5)\n('Ecuador', 'ECU', '\"PPG, multilateral (AMT, current US$)\"', 'DT.AMT.MLAT.CD', 578894793.9)\n('Ecuador', 'ECU', '\"PPG, multilateral (DIS, current US$)\"', 'DT.DIS.MLAT.CD', 343721409.3)\n('Ecuador', 'ECU', '\"PPG, multilateral (INT, current US$)\"', 'DT.INT.MLAT.CD', 237657740.5)\n('Ecuador', 'ECU', '\"PPG, official creditors (AMT, current US$)\"', 'DT.AMT.OFFT.CD', 1756812536.5)\n('Ecuador', 'ECU', '\"PPG, official creditors (DIS, current US$)\"', 'DT.DIS.OFFT.CD', 759499884.1)\n('Ecuador', 'ECU', '\"PPG, official creditors (INT, current US$)\"', 'DT.INT.OFFT.CD', 662111365.3)\n('Ecuador', 'ECU', '\"PPG, other private creditors (AMT, current US$)\"', 'DT.AMT.PROP.CD', 122807000.0)\n('Ecuador', 'ECU', '\"PPG, other private creditors (INT, current US$)\"', 'DT.INT.PROP.CD', 761000.0)\n('Ecuador', 'ECU', '\"PPG, private creditors (AMT, current US$)\"', 'DT.AMT.PRVT.CD', 562483843.7)\n('Ecuador', 'ECU', '\"PPG, private creditors (DIS, current US$)\"', 'DT.DIS.PRVT.CD', 60256258.1)\n('Ecuador', 'ECU', '\"PPG, private creditors (INT, current US$)\"', 'DT.INT.PRVT.CD', 1017912486.5)\n('Ecuador', 'ECU', '\"Principal repayments on external debt, long-term (AMT, current US$)\"', 'DT.AMT.DLXF.CD', 3623731570.2)\n('Ecuador', 'ECU', '\"Principal repayments on external debt, private nonguaranteed (PNG) (AMT, current US$)\"', 'DT.AMT.DPNG.CD', 1304435190.0)\n('\"Egypt, Arab Rep.\"', 'EGY', '\"Disbursements on external debt, long-term (DIS, current US$)\"', 'DT.DIS.DLXF.CD', 9552207423.5)\n('\"Egypt, Arab Rep.\"', 'EGY', '\"Interest payments on external debt, long-term (INT, current US$)\"', 'DT.INT.DLXF.CD', 1480967451.0)\n('\"Egypt, Arab Rep.\"', 'EGY', '\"Interest payments on external debt, private nonguaranteed (PNG) (INT, current US$)\"', 'DT.INT.DPNG.CD', 3477000.0)\n('\"Egypt, Arab Rep.\"', 'EGY', '\"PPG, bilateral (AMT, current US$)\"', 'DT.AMT.BLAT.CD', 6949184320.5)\n('\"Egypt, Arab Rep.\"', 'EGY', '\"PPG, bilateral (DIS, current US$)\"', 'DT.DIS.BLAT.CD', 7275502144.399999)\n('\"Egypt, Arab Rep.\"', 'EGY', '\"PPG, bilateral (INT, current US$)\"', 'DT.INT.BLAT.CD', 462561367.0)\n('\"Egypt, Arab Rep.\"', 'EGY', '\"PPG, bonds (AMT, current US$)\"', 'DT.AMT.PBND.CD', 0.0)\n('\"Egypt, Arab Rep.\"', 'EGY', '\"PPG, bonds (INT, current US$)\"', 'DT.INT.PBND.CD', 607496000.0)\n('\"Egypt, Arab Rep.\"', 'EGY', '\"PPG, commercial banks (AMT, current US$)\"', 'DT.AMT.PCBK.CD', 222817364.8)\n('\"Egypt, Arab Rep.\"', 'EGY', '\"PPG, commercial banks (DIS, current US$)\"', 'DT.DIS.PCBK.CD', 196463721.6)\n('\"Egypt, Arab Rep.\"', 'EGY', '\"PPG, commercial banks (INT, current US$)\"', 'DT.INT.PCBK.CD', 85717906.5)\n('\"Egypt, Arab Rep.\"', 'EGY', '\"PPG, multilateral (AMT, current US$)\"', 'DT.AMT.MLAT.CD', 2424904078.0)\n('\"Egypt, Arab Rep.\"', 'EGY', '\"PPG, multilateral (DIS, current US$)\"', 'DT.DIS.MLAT.CD', 2080241557.5)\n('\"Egypt, Arab Rep.\"', 'EGY', '\"PPG, multilateral (INT, current US$)\"', 'DT.INT.MLAT.CD', 321643387.3)\n('\"Egypt, Arab Rep.\"', 'EGY', '\"PPG, official creditors (AMT, current US$)\"', 'DT.AMT.OFFT.CD', 9374088398.5)\n('\"Egypt, Arab Rep.\"', 'EGY', '\"PPG, official creditors (DIS, current US$)\"', 'DT.DIS.OFFT.CD', 9355743701.9)\n('\"Egypt, Arab Rep.\"', 'EGY', '\"PPG, official creditors (INT, current US$)\"', 'DT.INT.OFFT.CD', 784204754.2999998)\n('\"Egypt, Arab Rep.\"', 'EGY', '\"PPG, other private creditors (AMT, current US$)\"', 'DT.AMT.PROP.CD', 546016.3)\n('\"Egypt, Arab Rep.\"', 'EGY', '\"PPG, other private creditors (INT, current US$)\"', 'DT.INT.PROP.CD', 71790.2)\n('\"Egypt, Arab Rep.\"', 'EGY', '\"PPG, private creditors (AMT, current US$)\"', 'DT.AMT.PRVT.CD', 223363381.1)\n('\"Egypt, Arab Rep.\"', 'EGY', '\"PPG, private creditors (DIS, current US$)\"', 'DT.DIS.PRVT.CD', 196463721.6)\n('\"Egypt, Arab Rep.\"', 'EGY', '\"PPG, private creditors (INT, current US$)\"', 'DT.INT.PRVT.CD', 693285696.7)\n('\"Egypt, Arab Rep.\"', 'EGY', '\"Principal repayments on external debt, long-term (AMT, current US$)\"', 'DT.AMT.DLXF.CD', 9692114176.9)\n('\"Egypt, Arab Rep.\"', 'EGY', '\"Principal repayments on external debt, private nonguaranteed (PNG) (AMT, current US$)\"', 'DT.AMT.DPNG.CD', 94662397.3)\n('El Salvador', 'SLV', '\"Disbursements on external debt, long-term (DIS, current US$)\"', 'DT.DIS.DLXF.CD', 245967023.2)\n('El Salvador', 'SLV', '\"Interest payments on external debt, long-term (INT, current US$)\"', 'DT.INT.DLXF.CD', 690320052.7)\n('El Salvador', 'SLV', '\"Interest payments on external debt, private nonguaranteed (PNG) (INT, current US$)\"', 'DT.INT.DPNG.CD', 163296000.0)\n('El Salvador', 'SLV', '\"PPG, bilateral (AMT, current US$)\"', 'DT.AMT.BLAT.CD', 46180727.2)\n('El Salvador', 'SLV', '\"PPG, bilateral (DIS, current US$)\"', 'DT.DIS.BLAT.CD', 16377537.9)\n('El Salvador', 'SLV', '\"PPG, bilateral (INT, current US$)\"', 'DT.INT.BLAT.CD', 10447436.1)\n('El Salvador', 'SLV', '\"PPG, bonds (AMT, current US$)\"', 'DT.AMT.PBND.CD', 1259866714.3)\n('El Salvador', 'SLV', '\"PPG, bonds (INT, current US$)\"', 'DT.INT.PBND.CD', 393550000.0)\n('El Salvador', 'SLV', '\"PPG, commercial banks (AMT, current US$)\"', 'DT.AMT.PCBK.CD', 11407489.1)\n('El Salvador', 'SLV', '\"PPG, commercial banks (DIS, current US$)\"', 'DT.DIS.PCBK.CD', 72460052.2)\n('El Salvador', 'SLV', '\"PPG, commercial banks (INT, current US$)\"', 'DT.INT.PCBK.CD', 11143690.6)\n('El Salvador', 'SLV', '\"PPG, multilateral (AMT, current US$)\"', 'DT.AMT.MLAT.CD', 298939687.1)\n('El Salvador', 'SLV', '\"PPG, multilateral (DIS, current US$)\"', 'DT.DIS.MLAT.CD', 157129433.1)\n('El Salvador', 'SLV', '\"PPG, multilateral (INT, current US$)\"', 'DT.INT.MLAT.CD', 111128086.3)\n('El Salvador', 'SLV', '\"PPG, official creditors (AMT, current US$)\"', 'DT.AMT.OFFT.CD', 345120414.3)\n('El Salvador', 'SLV', '\"PPG, official creditors (DIS, current US$)\"', 'DT.DIS.OFFT.CD', 173506971.0)\n('El Salvador', 'SLV', '\"PPG, official creditors (INT, current US$)\"', 'DT.INT.OFFT.CD', 121575522.4)\n('El Salvador', 'SLV', '\"PPG, other private creditors (AMT, current US$)\"', 'DT.AMT.PROP.CD', 555864.6)\n('El Salvador', 'SLV', '\"PPG, other private creditors (INT, current US$)\"', 'DT.INT.PROP.CD', 754839.7)\n('El Salvador', 'SLV', '\"PPG, private creditors (AMT, current US$)\"', 'DT.AMT.PRVT.CD', 1271830068.0)\n('El Salvador', 'SLV', '\"PPG, private creditors (DIS, current US$)\"', 'DT.DIS.PRVT.CD', 72460052.2)\n('El Salvador', 'SLV', '\"PPG, private creditors (INT, current US$)\"', 'DT.INT.PRVT.CD', 405448530.3)\n('El Salvador', 'SLV', '\"Principal repayments on external debt, long-term (AMT, current US$)\"', 'DT.AMT.DLXF.CD', 2574548482.3)\n('El Salvador', 'SLV', '\"Principal repayments on external debt, private nonguaranteed (PNG) (AMT, current US$)\"', 'DT.AMT.DPNG.CD', 957598000.0)\n('Eritrea', 'ERI', '\"Disbursements on external debt, long-term (DIS, current US$)\"', 'DT.DIS.DLXF.CD', 7203213.6)\n('Eritrea', 'ERI', '\"Interest payments on external debt, long-term (INT, current US$)\"', 'DT.INT.DLXF.CD', 5851311.7)\n('Eritrea', 'ERI', '\"PPG, bilateral (AMT, current US$)\"', 'DT.AMT.BLAT.CD', 15627602.4)\n('Eritrea', 'ERI', '\"PPG, bilateral (DIS, current US$)\"', 'DT.DIS.BLAT.CD', 2678802.6)\n('Eritrea', 'ERI', '\"PPG, bilateral (INT, current US$)\"', 'DT.INT.BLAT.CD', 1556112.1)\n('Eritrea', 'ERI', '\"PPG, multilateral (AMT, current US$)\"', 'DT.AMT.MLAT.CD', 15482475.4)\n('Eritrea', 'ERI', '\"PPG, multilateral (DIS, current US$)\"', 'DT.DIS.MLAT.CD', 4524411.0)\n('Eritrea', 'ERI', '\"PPG, multilateral (INT, current US$)\"', 'DT.INT.MLAT.CD', 4124899.0)\n('Eritrea', 'ERI', '\"PPG, official creditors (AMT, current US$)\"', 'DT.AMT.OFFT.CD', 31110077.8)\n('Eritrea', 'ERI', '\"PPG, official creditors (DIS, current US$)\"', 'DT.DIS.OFFT.CD', 7203213.6)\n('Eritrea', 'ERI', '\"PPG, official creditors (INT, current US$)\"', 'DT.INT.OFFT.CD', 5681011.1)\n('Eritrea', 'ERI', '\"PPG, other private creditors (AMT, current US$)\"', 'DT.AMT.PROP.CD', 0.0)\n('Eritrea', 'ERI', '\"PPG, other private creditors (INT, current US$)\"', 'DT.INT.PROP.CD', 170300.6)\n('Eritrea', 'ERI', '\"PPG, private creditors (AMT, current US$)\"', 'DT.AMT.PRVT.CD', 0.0)\n('Eritrea', 'ERI', '\"PPG, private creditors (INT, current US$)\"', 'DT.INT.PRVT.CD', 170300.6)\n('Eritrea', 'ERI', '\"Principal repayments on external debt, long-term (AMT, current US$)\"', 'DT.AMT.DLXF.CD', 31110077.8)\n('Eswatini', 'SWZ', '\"Disbursements on external debt, long-term (DIS, current US$)\"', 'DT.DIS.DLXF.CD', 106108147.6)\n('Eswatini', 'SWZ', '\"Interest payments on external debt, long-term (INT, current US$)\"', 'DT.INT.DLXF.CD', 12654109.2)\n('Eswatini', 'SWZ', '\"PPG, bilateral (AMT, current US$)\"', 'DT.AMT.BLAT.CD', 21586421.3)\n('Eswatini', 'SWZ', '\"PPG, bilateral (DIS, current US$)\"', 'DT.DIS.BLAT.CD', 54462529.7)\n('Eswatini', 'SWZ', '\"PPG, bilateral (INT, current US$)\"', 'DT.INT.BLAT.CD', 5511319.0)\n('Eswatini', 'SWZ', '\"PPG, commercial banks (AMT, current US$)\"', 'DT.AMT.PCBK.CD', 0.0)\n('Eswatini', 'SWZ', '\"PPG, commercial banks (INT, current US$)\"', 'DT.INT.PCBK.CD', 1801378.1)\n('Eswatini', 'SWZ', '\"PPG, multilateral (AMT, current US$)\"', 'DT.AMT.MLAT.CD', 18130218.8)\n('Eswatini', 'SWZ', '\"PPG, multilateral (DIS, current US$)\"', 'DT.DIS.MLAT.CD', 51645617.9)\n('Eswatini', 'SWZ', '\"PPG, multilateral (INT, current US$)\"', 'DT.INT.MLAT.CD', 5341412.1)\n('Eswatini', 'SWZ', '\"PPG, official creditors (AMT, current US$)\"', 'DT.AMT.OFFT.CD', 39716640.1)\n('Eswatini', 'SWZ', '\"PPG, official creditors (DIS, current US$)\"', 'DT.DIS.OFFT.CD', 106108147.6)\n('Eswatini', 'SWZ', '\"PPG, official creditors (INT, current US$)\"', 'DT.INT.OFFT.CD', 10852731.1)\n('Eswatini', 'SWZ', '\"PPG, private creditors (AMT, current US$)\"', 'DT.AMT.PRVT.CD', 0.0)\n('Eswatini', 'SWZ', '\"PPG, private creditors (INT, current US$)\"', 'DT.INT.PRVT.CD', 1801378.1)\n('Eswatini', 'SWZ', '\"Principal repayments on external debt, long-term (AMT, current US$)\"', 'DT.AMT.DLXF.CD', 39716640.1)\n('Ethiopia', 'ETH', '\"Disbursements on external debt, long-term (DIS, current US$)\"', 'DT.DIS.DLXF.CD', 2681493007.3)\n('Ethiopia', 'ETH', '\"Interest payments on external debt, long-term (INT, current US$)\"', 'DT.INT.DLXF.CD', 702459842.2)\n('Ethiopia', 'ETH', '\"PPG, bilateral (AMT, current US$)\"', 'DT.AMT.BLAT.CD', 510741366.9)\n('Ethiopia', 'ETH', '\"PPG, bilateral (DIS, current US$)\"', 'DT.DIS.BLAT.CD', 1142444763.3)\n('Ethiopia', 'ETH', '\"PPG, bilateral (INT, current US$)\"', 'DT.INT.BLAT.CD', 331367061.4)\n('Ethiopia', 'ETH', '\"PPG, bonds (AMT, current US$)\"', 'DT.AMT.PBND.CD', 0.0)\n('Ethiopia', 'ETH', '\"PPG, bonds (INT, current US$)\"', 'DT.INT.PBND.CD', 65998000.0)\n('Ethiopia', 'ETH', '\"PPG, commercial banks (AMT, current US$)\"', 'DT.AMT.PCBK.CD', 294411928.4)\n('Ethiopia', 'ETH', '\"PPG, commercial banks (DIS, current US$)\"', 'DT.DIS.PCBK.CD', 127663171.3)\n('Ethiopia', 'ETH', '\"PPG, commercial banks (INT, current US$)\"', 'DT.INT.PCBK.CD', 120237813.8)\n('Ethiopia', 'ETH', '\"PPG, multilateral (AMT, current US$)\"', 'DT.AMT.MLAT.CD', 171590722.7)\n('Ethiopia', 'ETH', '\"PPG, multilateral (DIS, current US$)\"', 'DT.DIS.MLAT.CD', 1344105921.6)\n('Ethiopia', 'ETH', '\"PPG, multilateral (INT, current US$)\"', 'DT.INT.MLAT.CD', 95255967.0)\n('Ethiopia', 'ETH', '\"PPG, official creditors (AMT, current US$)\"', 'DT.AMT.OFFT.CD', 682332089.6)\n('Ethiopia', 'ETH', '\"PPG, official creditors (DIS, current US$)\"', 'DT.DIS.OFFT.CD', 2486550684.9)\n('Ethiopia', 'ETH', '\"PPG, official creditors (INT, current US$)\"', 'DT.INT.OFFT.CD', 426623028.4)\n('Ethiopia', 'ETH', '\"PPG, other private creditors (AMT, current US$)\"', 'DT.AMT.PROP.CD', 212179959.6)\n('Ethiopia', 'ETH', '\"PPG, other private creditors (DIS, current US$)\"', 'DT.DIS.PROP.CD', 67279151.1)\n('Ethiopia', 'ETH', '\"PPG, other private creditors (INT, current US$)\"', 'DT.INT.PROP.CD', 89601000.0)\n('Ethiopia', 'ETH', '\"PPG, private creditors (AMT, current US$)\"', 'DT.AMT.PRVT.CD', 506591888.0)\n('Ethiopia', 'ETH', '\"PPG, private creditors (DIS, current US$)\"', 'DT.DIS.PRVT.CD', 194942322.4)\n('Ethiopia', 'ETH', '\"PPG, private creditors (INT, current US$)\"', 'DT.INT.PRVT.CD', 275836813.8)\n('Ethiopia', 'ETH', '\"Principal repayments on external debt, long-term (AMT, current US$)\"', 'DT.AMT.DLXF.CD', 1188923977.6)\n('Georgia', 'GEO', '\"PPG, official creditors (AMT, current US$)\"', 'DT.AMT.OFFT.CD', 207893813.6)\n('Fiji', 'FJI', '\"Disbursements on external debt, long-term (DIS, current US$)\"', 'DT.DIS.DLXF.CD', 66510192.6)\n('Fiji', 'FJI', '\"Interest payments on external debt, long-term (INT, current US$)\"', 'DT.INT.DLXF.CD', 27910526.5)\n('Fiji', 'FJI', '\"Interest payments on external debt, private nonguaranteed (PNG) (INT, current US$)\"', 'DT.INT.DPNG.CD', 12000.0)\n('Fiji', 'FJI', '\"PPG, bilateral (AMT, current US$)\"', 'DT.AMT.BLAT.CD', 37382876.6)\n('Fiji', 'FJI', '\"PPG, bilateral (DIS, current US$)\"', 'DT.DIS.BLAT.CD', 3902886.7)\n('Fiji', 'FJI', '\"PPG, bilateral (INT, current US$)\"', 'DT.INT.BLAT.CD', 6175526.5)\n('Fiji', 'FJI', '\"PPG, bonds (AMT, current US$)\"', 'DT.AMT.PBND.CD', 0.0)\n('Fiji', 'FJI', '\"PPG, bonds (INT, current US$)\"', 'DT.INT.PBND.CD', 13250000.0)\n('Fiji', 'FJI', '\"PPG, multilateral (AMT, current US$)\"', 'DT.AMT.MLAT.CD', 9082442.6)\n('Fiji', 'FJI', '\"PPG, multilateral (DIS, current US$)\"', 'DT.DIS.MLAT.CD', 62607305.9)\n('Fiji', 'FJI', '\"PPG, multilateral (INT, current US$)\"', 'DT.INT.MLAT.CD', 8473000.0)\n('Fiji', 'FJI', '\"PPG, official creditors (AMT, current US$)\"', 'DT.AMT.OFFT.CD', 46465319.2)\n('Fiji', 'FJI', '\"PPG, official creditors (DIS, current US$)\"', 'DT.DIS.OFFT.CD', 66510192.6)\n('Fiji', 'FJI', '\"PPG, official creditors (INT, current US$)\"', 'DT.INT.OFFT.CD', 14648526.5)\n('Fiji', 'FJI', '\"PPG, private creditors (AMT, current US$)\"', 'DT.AMT.PRVT.CD', 0.0)\n('Fiji', 'FJI', '\"PPG, private creditors (INT, current US$)\"', 'DT.INT.PRVT.CD', 13250000.0)\n('Fiji', 'FJI', '\"Principal repayments on external debt, long-term (AMT, current US$)\"', 'DT.AMT.DLXF.CD', 46532508.5)\n('Fiji', 'FJI', '\"Principal repayments on external debt, private nonguaranteed (PNG) (AMT, current US$)\"', 'DT.AMT.DPNG.CD', 67189.3)\n('Gabon', 'GAB', '\"Disbursements on external debt, long-term (DIS, current US$)\"', 'DT.DIS.DLXF.CD', 519921205.7)\n('Gabon', 'GAB', '\"Interest payments on external debt, long-term (INT, current US$)\"', 'DT.INT.DLXF.CD', 209330192.9)\n('Gabon', 'GAB', '\"PPG, bilateral (AMT, current US$)\"', 'DT.AMT.BLAT.CD', 114697076.0)\n('Gabon', 'GAB', '\"PPG, bilateral (DIS, current US$)\"', 'DT.DIS.BLAT.CD', 354919707.0)\n('Gabon', 'GAB', '\"PPG, bilateral (INT, current US$)\"', 'DT.INT.BLAT.CD', 33263802.5)\n('Gabon', 'GAB', '\"PPG, bonds (AMT, current US$)\"', 'DT.AMT.PBND.CD', 0.0)\n('Gabon', 'GAB', '\"PPG, bonds (INT, current US$)\"', 'DT.INT.PBND.CD', 144272000.0)\n('Gabon', 'GAB', '\"PPG, commercial banks (AMT, current US$)\"', 'DT.AMT.PCBK.CD', 153982580.5)\n('Gabon', 'GAB', '\"PPG, commercial banks (DIS, current US$)\"', 'DT.DIS.PCBK.CD', 18711238.7)\n('Gabon', 'GAB', '\"PPG, commercial banks (INT, current US$)\"', 'DT.INT.PCBK.CD', 13403376.8)\n('Gabon', 'GAB', '\"PPG, multilateral (AMT, current US$)\"', 'DT.AMT.MLAT.CD', 62404132.3)\n('Gabon', 'GAB', '\"PPG, multilateral (DIS, current US$)\"', 'DT.DIS.MLAT.CD', 146290260.0)\n('Gabon', 'GAB', '\"PPG, multilateral (INT, current US$)\"', 'DT.INT.MLAT.CD', 18155013.6)\n('Gabon', 'GAB', '\"PPG, official creditors (AMT, current US$)\"', 'DT.AMT.OFFT.CD', 177101208.3)\n('Gabon', 'GAB', '\"PPG, official creditors (DIS, current US$)\"', 'DT.DIS.OFFT.CD', 501209967.0)\n('Gabon', 'GAB', '\"PPG, official creditors (INT, current US$)\"', 'DT.INT.OFFT.CD', 51418816.1)\n('Gabon', 'GAB', '\"PPG, other private creditors (AMT, current US$)\"', 'DT.AMT.PROP.CD', 2233200.0)\n('Gabon', 'GAB', '\"PPG, other private creditors (INT, current US$)\"', 'DT.INT.PROP.CD', 236000.0)\n('Gabon', 'GAB', '\"PPG, private creditors (AMT, current US$)\"', 'DT.AMT.PRVT.CD', 156215780.5)\n('Gabon', 'GAB', '\"PPG, private creditors (DIS, current US$)\"', 'DT.DIS.PRVT.CD', 18711238.7)\n('Gabon', 'GAB', '\"PPG, private creditors (INT, current US$)\"', 'DT.INT.PRVT.CD', 157911376.8)\n('Gabon', 'GAB', '\"Principal repayments on external debt, long-term (AMT, current US$)\"', 'DT.AMT.DLXF.CD', 333316988.8)\n('\"Gambia, The\"', 'GMB', '\"Disbursements on external debt, long-term (DIS, current US$)\"', 'DT.DIS.DLXF.CD', 89552885.9)\n('\"Gambia, The\"', 'GMB', '\"Interest payments on external debt, long-term (INT, current US$)\"', 'DT.INT.DLXF.CD', 8397638.2)\n('\"Gambia, The\"', 'GMB', '\"PPG, bilateral (AMT, current US$)\"', 'DT.AMT.BLAT.CD', 13014909.1)\n('\"Gambia, The\"', 'GMB', '\"PPG, bilateral (DIS, current US$)\"', 'DT.DIS.BLAT.CD', 21371548.3)\n('\"Gambia, The\"', 'GMB', '\"PPG, bilateral (INT, current US$)\"', 'DT.INT.BLAT.CD', 2686367.0)\n('\"Gambia, The\"', 'GMB', '\"PPG, commercial banks (AMT, current US$)\"', 'DT.AMT.PCBK.CD', 974231.4)\n('\"Gambia, The\"', 'GMB', '\"PPG, commercial banks (INT, current US$)\"', 'DT.INT.PCBK.CD', 3597.9)\n('\"Gambia, The\"', 'GMB', '\"PPG, multilateral (AMT, current US$)\"', 'DT.AMT.MLAT.CD', 33231516.7)\n('\"Gambia, The\"', 'GMB', '\"PPG, multilateral (DIS, current US$)\"', 'DT.DIS.MLAT.CD', 68181337.6)\n('\"Gambia, The\"', 'GMB', '\"PPG, multilateral (INT, current US$)\"', 'DT.INT.MLAT.CD', 5707673.3)\n('\"Gambia, The\"', 'GMB', '\"PPG, official creditors (AMT, current US$)\"', 'DT.AMT.OFFT.CD', 46246425.8)\n('\"Gambia, The\"', 'GMB', '\"PPG, official creditors (DIS, current US$)\"', 'DT.DIS.OFFT.CD', 89552885.9)\n('\"Gambia, The\"', 'GMB', '\"PPG, official creditors (INT, current US$)\"', 'DT.INT.OFFT.CD', 8394040.3)\n('\"Gambia, The\"', 'GMB', '\"PPG, private creditors (AMT, current US$)\"', 'DT.AMT.PRVT.CD', 974231.4)\n('\"Gambia, The\"', 'GMB', '\"PPG, private creditors (INT, current US$)\"', 'DT.INT.PRVT.CD', 3597.9)\n('\"Gambia, The\"', 'GMB', '\"Principal repayments on external debt, long-term (AMT, current US$)\"', 'DT.AMT.DLXF.CD', 47220657.2)\n('Georgia', 'GEO', '\"Disbursements on external debt, long-term (DIS, current US$)\"', 'DT.DIS.DLXF.CD', 775345350.5)\n('Georgia', 'GEO', '\"Interest payments on external debt, long-term (INT, current US$)\"', 'DT.INT.DLXF.CD', 3087990080.3)\n('Georgia', 'GEO', '\"Interest payments on external debt, private nonguaranteed (PNG) (INT, current US$)\"', 'DT.INT.DPNG.CD', 536500000.0)\n('Georgia', 'GEO', '\"PPG, bilateral (AMT, current US$)\"', 'DT.AMT.BLAT.CD', 63831412.1)\n('Georgia', 'GEO', '\"PPG, bilateral (DIS, current US$)\"', 'DT.DIS.BLAT.CD', 110677830.3)\n('Georgia', 'GEO', '\"PPG, bilateral (INT, current US$)\"', 'DT.INT.BLAT.CD', 2435342284.4)\n('Georgia', 'GEO', '\"PPG, bonds (AMT, current US$)\"', 'DT.AMT.PBND.CD', 0.0)\n('Georgia', 'GEO', '\"PPG, bonds (INT, current US$)\"', 'DT.INT.PBND.CD', 51374000.0)\n('Georgia', 'GEO', '\"PPG, commercial banks (AMT, current US$)\"', 'DT.AMT.PCBK.CD', 14240741.3)\n('Georgia', 'GEO', '\"PPG, commercial banks (DIS, current US$)\"', 'DT.DIS.PCBK.CD', 3992133.9)\n('Georgia', 'GEO', '\"PPG, commercial banks (INT, current US$)\"', 'DT.INT.PCBK.CD', 1478736.9)\n('Georgia', 'GEO', '\"PPG, multilateral (AMT, current US$)\"', 'DT.AMT.MLAT.CD', 144062401.5)\n('Georgia', 'GEO', '\"PPG, multilateral (DIS, current US$)\"', 'DT.DIS.MLAT.CD', 660675386.3)\n('Georgia', 'GEO', '\"PPG, official creditors (DIS, current US$)\"', 'DT.DIS.OFFT.CD', 771353216.6)\n('Georgia', 'GEO', '\"PPG, official creditors (INT, current US$)\"', 'DT.INT.OFFT.CD', 2498637343.4)\n('Georgia', 'GEO', '\"PPG, private creditors (AMT, current US$)\"', 'DT.AMT.PRVT.CD', 14240741.3)\n('Georgia', 'GEO', '\"PPG, private creditors (DIS, current US$)\"', 'DT.DIS.PRVT.CD', 3992133.9)\n('Georgia', 'GEO', '\"PPG, private creditors (INT, current US$)\"', 'DT.INT.PRVT.CD', 52852736.9)\n('Georgia', 'GEO', '\"Principal repayments on external debt, long-term (AMT, current US$)\"', 'DT.AMT.DLXF.CD', 1552116953.6)\n('Georgia', 'GEO', '\"Principal repayments on external debt, private nonguaranteed (PNG) (AMT, current US$)\"', 'DT.AMT.DPNG.CD', 1329982398.7)\n('Ghana', 'GHA', '\"Disbursements on external debt, long-term (DIS, current US$)\"', 'DT.DIS.DLXF.CD', 1508869861.5)\n('Ghana', 'GHA', '\"Interest payments on external debt, long-term (INT, current US$)\"', 'DT.INT.DLXF.CD', 624681303.4)\n('Ghana', 'GHA', '\"Interest payments on external debt, private nonguaranteed (PNG) (INT, current US$)\"', 'DT.INT.DPNG.CD', 6328000.0)\n('Ghana', 'GHA', '\"PPG, bilateral (AMT, current US$)\"', 'DT.AMT.BLAT.CD', 865892038.7)\n('Ghana', 'GHA', '\"PPG, bilateral (DIS, current US$)\"', 'DT.DIS.BLAT.CD', 1163413713.8)\n('Ghana', 'GHA', '\"PPG, bilateral (INT, current US$)\"', 'DT.INT.BLAT.CD', 105007672.0)\n('Ghana', 'GHA', '\"PPG, bonds (AMT, current US$)\"', 'DT.AMT.PBND.CD', 0.0)\n('Ghana', 'GHA', '\"PPG, bonds (INT, current US$)\"', 'DT.INT.PBND.CD', 336874000.0)\n('Ghana', 'GHA', '\"PPG, commercial banks (AMT, current US$)\"', 'DT.AMT.PCBK.CD', 583268468.8)\n('Ghana', 'GHA', '\"PPG, commercial banks (DIS, current US$)\"', 'DT.DIS.PCBK.CD', 180680823.3)\n('Ghana', 'GHA', '\"PPG, commercial banks (INT, current US$)\"', 'DT.INT.PCBK.CD', 92690304.9)\n('Ghana', 'GHA', '\"PPG, multilateral (AMT, current US$)\"', 'DT.AMT.MLAT.CD', 130202003.1)\n('Ghana', 'GHA', '\"PPG, multilateral (DIS, current US$)\"', 'DT.DIS.MLAT.CD', 164459939.3)\n('Ghana', 'GHA', '\"PPG, multilateral (INT, current US$)\"', 'DT.INT.MLAT.CD', 57076217.8)\n('Ghana', 'GHA', '\"PPG, official creditors (AMT, current US$)\"', 'DT.AMT.OFFT.CD', 996094041.8)\n('Ghana', 'GHA', '\"PPG, official creditors (DIS, current US$)\"', 'DT.DIS.OFFT.CD', 1327873653.1)\n('Ghana', 'GHA', '\"PPG, official creditors (INT, current US$)\"', 'DT.INT.OFFT.CD', 162083889.8)\n('Ghana', 'GHA', '\"PPG, other private creditors (AMT, current US$)\"', 'DT.AMT.PROP.CD', 109966322.9)\n('Ghana', 'GHA', '\"PPG, other private creditors (DIS, current US$)\"', 'DT.DIS.PROP.CD', 315385.1)\n('Ghana', 'GHA', '\"PPG, other private creditors (INT, current US$)\"', 'DT.INT.PROP.CD', 26705108.7)\n('Ghana', 'GHA', '\"PPG, private creditors (AMT, current US$)\"', 'DT.AMT.PRVT.CD', 693234791.7)\n('Ghana', 'GHA', '\"PPG, private creditors (DIS, current US$)\"', 'DT.DIS.PRVT.CD', 180996208.4)\n('Ghana', 'GHA', '\"PPG, private creditors (INT, current US$)\"', 'DT.INT.PRVT.CD', 456269413.6)\n('Ghana', 'GHA', '\"Principal repayments on external debt, long-term (AMT, current US$)\"', 'DT.AMT.DLXF.CD', 1689328833.5)\n('Ghana', 'GHA', '\"Principal repayments on external debt, private nonguaranteed (PNG) (AMT, current US$)\"', 'DT.AMT.DPNG.CD', 0.0)\n('Grenada', 'GRD', '\"Disbursements on external debt, long-term (DIS, current US$)\"', 'DT.DIS.DLXF.CD', 41250138.3)\n('Grenada', 'GRD', '\"Interest payments on external debt, long-term (INT, current US$)\"', 'DT.INT.DLXF.CD', 15665767.8)\n('Grenada', 'GRD', '\"PPG, bilateral (AMT, current US$)\"', 'DT.AMT.BLAT.CD', 11639110.2)\n('Grenada', 'GRD', '\"PPG, bilateral (DIS, current US$)\"', 'DT.DIS.BLAT.CD', 23225424.8)\n('Grenada', 'GRD', '\"PPG, bilateral (INT, current US$)\"', 'DT.INT.BLAT.CD', 3290655.4)\n('Grenada', 'GRD', '\"PPG, bonds (AMT, current US$)\"', 'DT.AMT.PBND.CD', 8983520.0)\n('Grenada', 'GRD', '\"PPG, bonds (INT, current US$)\"', 'DT.INT.PBND.CD', 7073000.0)\n('Grenada', 'GRD', '\"PPG, multilateral (AMT, current US$)\"', 'DT.AMT.MLAT.CD', 13740888.8)\n('Grenada', 'GRD', '\"PPG, multilateral (DIS, current US$)\"', 'DT.DIS.MLAT.CD', 18024713.5)\n('Grenada', 'GRD', '\"PPG, multilateral (INT, current US$)\"', 'DT.INT.MLAT.CD', 5302112.4)\n('Grenada', 'GRD', '\"PPG, official creditors (AMT, current US$)\"', 'DT.AMT.OFFT.CD', 25379999.0)\n('Grenada', 'GRD', '\"PPG, official creditors (DIS, current US$)\"', 'DT.DIS.OFFT.CD', 41250138.3)\n('Grenada', 'GRD', '\"PPG, official creditors (INT, current US$)\"', 'DT.INT.OFFT.CD', 8592767.8)\n('Grenada', 'GRD', '\"PPG, private creditors (AMT, current US$)\"', 'DT.AMT.PRVT.CD', 8983520.0)\n('Grenada', 'GRD', '\"PPG, private creditors (INT, current US$)\"', 'DT.INT.PRVT.CD', 7073000.0)\n('Grenada', 'GRD', '\"Principal repayments on external debt, long-term (AMT, current US$)\"', 'DT.AMT.DLXF.CD', 34363519.0)\n('Guatemala', 'GTM', '\"Disbursements on external debt, long-term (DIS, current US$)\"', 'DT.DIS.DLXF.CD', 137925963.9)\n('Guatemala', 'GTM', '\"Interest payments on external debt, long-term (INT, current US$)\"', 'DT.INT.DLXF.CD', 563718062.4)\n('Guatemala', 'GTM', '\"Interest payments on external debt, private nonguaranteed (PNG) (INT, current US$)\"', 'DT.INT.DPNG.CD', 377836407.3)\n('Guatemala', 'GTM', '\"PPG, bilateral (AMT, current US$)\"', 'DT.AMT.BLAT.CD', 41738434.7)\n('Guatemala', 'GTM', '\"PPG, bilateral (DIS, current US$)\"', 'DT.DIS.BLAT.CD', 56408511.8)\n('Guatemala', 'GTM', '\"PPG, bilateral (INT, current US$)\"', 'DT.INT.BLAT.CD', 8721281.3)\n('Guatemala', 'GTM', '\"PPG, bonds (AMT, current US$)\"', 'DT.AMT.PBND.CD', 0.0)\n('Guatemala', 'GTM', '\"PPG, bonds (INT, current US$)\"', 'DT.INT.PBND.CD', 49440000.0)\n('Guatemala', 'GTM', '\"PPG, commercial banks (AMT, current US$)\"', 'DT.AMT.PCBK.CD', 218565.2)\n('Guatemala', 'GTM', '\"PPG, commercial banks (DIS, current US$)\"', 'DT.DIS.PCBK.CD', 8311149.0)\n('Guatemala', 'GTM', '\"PPG, commercial banks (INT, current US$)\"', 'DT.INT.PCBK.CD', 42861.1)\n('Guatemala', 'GTM', '\"PPG, multilateral (AMT, current US$)\"', 'DT.AMT.MLAT.CD', 339822253.6)\n('Guatemala', 'GTM', '\"PPG, multilateral (DIS, current US$)\"', 'DT.DIS.MLAT.CD', 73206303.09999998)\n('Guatemala', 'GTM', '\"PPG, multilateral (INT, current US$)\"', 'DT.INT.MLAT.CD', 127677512.7)\n('Guatemala', 'GTM', '\"PPG, official creditors (AMT, current US$)\"', 'DT.AMT.OFFT.CD', 381560688.3)\n('Guatemala', 'GTM', '\"PPG, official creditors (DIS, current US$)\"', 'DT.DIS.OFFT.CD', 129614814.9)\n('Guatemala', 'GTM', '\"PPG, official creditors (INT, current US$)\"', 'DT.INT.OFFT.CD', 136398794.0)\n('Guatemala', 'GTM', '\"PPG, private creditors (AMT, current US$)\"', 'DT.AMT.PRVT.CD', 218565.2)\n('Guatemala', 'GTM', '\"PPG, private creditors (DIS, current US$)\"', 'DT.DIS.PRVT.CD', 8311149.0)\n('Guatemala', 'GTM', '\"PPG, private creditors (INT, current US$)\"', 'DT.INT.PRVT.CD', 49482861.1)\n('Tonga', 'TON', '\"PPG, multilateral (AMT, current US$)\"', 'DT.AMT.MLAT.CD', 2791253.2)\n('Guatemala', 'GTM', '\"Principal repayments on external debt, long-term (AMT, current US$)\"', 'DT.AMT.DLXF.CD', 2911981987.8)\n('Guatemala', 'GTM', '\"Principal repayments on external debt, private nonguaranteed (PNG) (AMT, current US$)\"', 'DT.AMT.DPNG.CD', 2530202734.3)\n('Guinea', 'GIN', '\"Disbursements on external debt, long-term (DIS, current US$)\"', 'DT.DIS.DLXF.CD', 175441526.2)\n('Guinea', 'GIN', '\"Interest payments on external debt, long-term (INT, current US$)\"', 'DT.INT.DLXF.CD', 11444027.9)\n('Guinea', 'GIN', '\"PPG, bilateral (AMT, current US$)\"', 'DT.AMT.BLAT.CD', 8832105.1)\n('Guinea', 'GIN', '\"PPG, bilateral (DIS, current US$)\"', 'DT.DIS.BLAT.CD', 61782399.4)\n('Guinea', 'GIN', '\"PPG, bilateral (INT, current US$)\"', 'DT.INT.BLAT.CD', 3723822.7)\n('Guinea', 'GIN', '\"PPG, bonds (AMT, current US$)\"', 'DT.AMT.PBND.CD', 0.0)\n('Guinea', 'GIN', '\"PPG, bonds (INT, current US$)\"', 'DT.INT.PBND.CD', 644000.0)\n('Guinea', 'GIN', '\"PPG, multilateral (AMT, current US$)\"', 'DT.AMT.MLAT.CD', 29819676.8)\n('Guinea', 'GIN', '\"PPG, multilateral (DIS, current US$)\"', 'DT.DIS.MLAT.CD', 113659126.8)\n('Guinea', 'GIN', '\"PPG, multilateral (INT, current US$)\"', 'DT.INT.MLAT.CD', 7076205.2)\n('Guinea', 'GIN', '\"PPG, official creditors (AMT, current US$)\"', 'DT.AMT.OFFT.CD', 38651781.9)\n('Guinea', 'GIN', '\"PPG, official creditors (DIS, current US$)\"', 'DT.DIS.OFFT.CD', 175441526.2)\n('Guinea', 'GIN', '\"PPG, official creditors (INT, current US$)\"', 'DT.INT.OFFT.CD', 10800027.9)\n('Guinea', 'GIN', '\"PPG, private creditors (AMT, current US$)\"', 'DT.AMT.PRVT.CD', 0.0)\n('Guinea', 'GIN', '\"PPG, private creditors (INT, current US$)\"', 'DT.INT.PRVT.CD', 644000.0)\n('Guinea', 'GIN', '\"Principal repayments on external debt, long-term (AMT, current US$)\"', 'DT.AMT.DLXF.CD', 38651781.9)\n('Guinea-Bissau', 'GNB', '\"Disbursements on external debt, long-term (DIS, current US$)\"', 'DT.DIS.DLXF.CD', 48265990.2)\n('Guinea-Bissau', 'GNB', '\"Interest payments on external debt, long-term (INT, current US$)\"', 'DT.INT.DLXF.CD', 1462857.5)\n('Guinea-Bissau', 'GNB', '\"PPG, bilateral (AMT, current US$)\"', 'DT.AMT.BLAT.CD', 70371.9)\n('Guinea-Bissau', 'GNB', '\"PPG, bilateral (INT, current US$)\"', 'DT.INT.BLAT.CD', 24800.0)\n('Guinea-Bissau', 'GNB', '\"PPG, multilateral (AMT, current US$)\"', 'DT.AMT.MLAT.CD', 6713257.2)\n('Guinea-Bissau', 'GNB', '\"PPG, multilateral (DIS, current US$)\"', 'DT.DIS.MLAT.CD', 48265990.2)\n('Guinea-Bissau', 'GNB', '\"PPG, multilateral (INT, current US$)\"', 'DT.INT.MLAT.CD', 1438057.5)\n('Guinea-Bissau', 'GNB', '\"PPG, official creditors (AMT, current US$)\"', 'DT.AMT.OFFT.CD', 6783629.1)\n('Guinea-Bissau', 'GNB', '\"PPG, official creditors (DIS, current US$)\"', 'DT.DIS.OFFT.CD', 48265990.2)\n('Guinea-Bissau', 'GNB', '\"PPG, official creditors (INT, current US$)\"', 'DT.INT.OFFT.CD', 1462857.5)\n('Guinea-Bissau', 'GNB', '\"Principal repayments on external debt, long-term (AMT, current US$)\"', 'DT.AMT.DLXF.CD', 6783629.1)\n('Guyana', 'GUY', '\"Disbursements on external debt, long-term (DIS, current US$)\"', 'DT.DIS.DLXF.CD', 93057520.1)\n('Guyana', 'GUY', '\"Interest payments on external debt, long-term (INT, current US$)\"', 'DT.INT.DLXF.CD', 27615299.5)\n('Guyana', 'GUY', '\"Interest payments on external debt, private nonguaranteed (PNG) (INT, current US$)\"', 'DT.INT.DPNG.CD', 8189000.0)\n('Guyana', 'GUY', '\"PPG, bilateral (AMT, current US$)\"', 'DT.AMT.BLAT.CD', 21758525.7)\n('Guyana', 'GUY', '\"PPG, bilateral (DIS, current US$)\"', 'DT.DIS.BLAT.CD', 35584684.1)\n('Guyana', 'GUY', '\"PPG, bilateral (INT, current US$)\"', 'DT.INT.BLAT.CD', 4885618.3)\n('Guyana', 'GUY', '\"PPG, commercial banks (AMT, current US$)\"', 'DT.AMT.PCBK.CD', 1153800.0)\n('Guyana', 'GUY', '\"PPG, commercial banks (INT, current US$)\"', 'DT.INT.PCBK.CD', 1078000.0)\n('Guyana', 'GUY', '\"PPG, multilateral (AMT, current US$)\"', 'DT.AMT.MLAT.CD', 34651806.5)\n('Guyana', 'GUY', '\"PPG, multilateral (DIS, current US$)\"', 'DT.DIS.MLAT.CD', 57472836.0)\n('Guyana', 'GUY', '\"PPG, multilateral (INT, current US$)\"', 'DT.INT.MLAT.CD', 13462681.2)\n('Guyana', 'GUY', '\"PPG, official creditors (AMT, current US$)\"', 'DT.AMT.OFFT.CD', 56410332.2)\n('Guyana', 'GUY', '\"PPG, official creditors (DIS, current US$)\"', 'DT.DIS.OFFT.CD', 93057520.1)\n('Guyana', 'GUY', '\"PPG, official creditors (INT, current US$)\"', 'DT.INT.OFFT.CD', 18348299.5)\n('Guyana', 'GUY', '\"PPG, private creditors (AMT, current US$)\"', 'DT.AMT.PRVT.CD', 1153800.0)\n('Guyana', 'GUY', '\"PPG, private creditors (INT, current US$)\"', 'DT.INT.PRVT.CD', 1078000.0)\n('Guyana', 'GUY', '\"Principal repayments on external debt, long-term (AMT, current US$)\"', 'DT.AMT.DLXF.CD', 108264665.5)\n('Guyana', 'GUY', '\"Principal repayments on external debt, private nonguaranteed (PNG) (AMT, current US$)\"', 'DT.AMT.DPNG.CD', 50700533.3)\n('Haiti', 'HTI', '\"Disbursements on external debt, long-term (DIS, current US$)\"', 'DT.DIS.DLXF.CD', 25668662.8)\n('Haiti', 'HTI', '\"Interest payments on external debt, long-term (INT, current US$)\"', 'DT.INT.DLXF.CD', 12695243.1)\n('Haiti', 'HTI', '\"Interest payments on external debt, private nonguaranteed (PNG) (INT, current US$)\"', 'DT.INT.DPNG.CD', 0.0)\n('Haiti', 'HTI', '\"PPG, bilateral (AMT, current US$)\"', 'DT.AMT.BLAT.CD', 51356369.6)\n('Haiti', 'HTI', '\"PPG, bilateral (DIS, current US$)\"', 'DT.DIS.BLAT.CD', 1597000.0)\n('Haiti', 'HTI', '\"PPG, bilateral (INT, current US$)\"', 'DT.INT.BLAT.CD', 10474000.0)\n('Haiti', 'HTI', '\"PPG, multilateral (AMT, current US$)\"', 'DT.AMT.MLAT.CD', 10087968.8)\n('Haiti', 'HTI', '\"PPG, multilateral (DIS, current US$)\"', 'DT.DIS.MLAT.CD', 24071662.8)\n('Haiti', 'HTI', '\"PPG, multilateral (INT, current US$)\"', 'DT.INT.MLAT.CD', 2221243.1)\n('Haiti', 'HTI', '\"PPG, official creditors (AMT, current US$)\"', 'DT.AMT.OFFT.CD', 61444338.4)\n('Haiti', 'HTI', '\"PPG, official creditors (DIS, current US$)\"', 'DT.DIS.OFFT.CD', 25668662.8)\n('Haiti', 'HTI', '\"PPG, official creditors (INT, current US$)\"', 'DT.INT.OFFT.CD', 12695243.1)\n('Haiti', 'HTI', '\"Principal repayments on external debt, long-term (AMT, current US$)\"', 'DT.AMT.DLXF.CD', 61444338.4)\n('Haiti', 'HTI', '\"Principal repayments on external debt, private nonguaranteed (PNG) (AMT, current US$)\"', 'DT.AMT.DPNG.CD', 0.0)\n('Honduras', 'HND', '\"Disbursements on external debt, long-term (DIS, current US$)\"', 'DT.DIS.DLXF.CD', 271661829.8)\n('Honduras', 'HND', '\"Interest payments on external debt, long-term (INT, current US$)\"', 'DT.INT.DLXF.CD', 245990147.3)\n('Honduras', 'HND', '\"Interest payments on external debt, private nonguaranteed (PNG) (INT, current US$)\"', 'DT.INT.DPNG.CD', 36010000.0)\n('Honduras', 'HND', '\"PPG, bilateral (AMT, current US$)\"', 'DT.AMT.BLAT.CD', 35890751.9)\n('Honduras', 'HND', '\"PPG, bilateral (DIS, current US$)\"', 'DT.DIS.BLAT.CD', 91251459.7)\n('Honduras', 'HND', '\"PPG, bilateral (INT, current US$)\"', 'DT.INT.BLAT.CD', 31044538.5)\n('Honduras', 'HND', '\"PPG, bonds (AMT, current US$)\"', 'DT.AMT.PBND.CD', 0.0)\n('Honduras', 'HND', '\"PPG, bonds (INT, current US$)\"', 'DT.INT.PBND.CD', 81936000.0)\n('Tonga', 'TON', '\"PPG, multilateral (DIS, current US$)\"', 'DT.DIS.MLAT.CD', 5529604.8)\n('Honduras', 'HND', '\"PPG, commercial banks (AMT, current US$)\"', 'DT.AMT.PCBK.CD', 17892790.4)\n('Honduras', 'HND', '\"PPG, commercial banks (DIS, current US$)\"', 'DT.DIS.PCBK.CD', 11102903.5)\n('Honduras', 'HND', '\"PPG, commercial banks (INT, current US$)\"', 'DT.INT.PCBK.CD', 1489545.0)\n('Honduras', 'HND', '\"PPG, multilateral (AMT, current US$)\"', 'DT.AMT.MLAT.CD', 148225048.7)\n('Honduras', 'HND', '\"PPG, multilateral (DIS, current US$)\"', 'DT.DIS.MLAT.CD', 169307466.6)\n('Honduras', 'HND', '\"PPG, multilateral (INT, current US$)\"', 'DT.INT.MLAT.CD', 95482063.8)\n('Honduras', 'HND', '\"PPG, official creditors (AMT, current US$)\"', 'DT.AMT.OFFT.CD', 184115800.6)\n('Honduras', 'HND', '\"PPG, official creditors (DIS, current US$)\"', 'DT.DIS.OFFT.CD', 260558926.3)\n('Honduras', 'HND', '\"PPG, official creditors (INT, current US$)\"', 'DT.INT.OFFT.CD', 126526602.3)\n('Honduras', 'HND', '\"PPG, other private creditors (AMT, current US$)\"', 'DT.AMT.PROP.CD', 45052.6)\n('Honduras', 'HND', '\"PPG, other private creditors (INT, current US$)\"', 'DT.INT.PROP.CD', 28000.0)\n('Honduras', 'HND', '\"PPG, private creditors (AMT, current US$)\"', 'DT.AMT.PRVT.CD', 17937843.0)\n('Honduras', 'HND', '\"PPG, private creditors (DIS, current US$)\"', 'DT.DIS.PRVT.CD', 11102903.5)\n('Honduras', 'HND', '\"PPG, private creditors (INT, current US$)\"', 'DT.INT.PRVT.CD', 83453545.0)\n('Honduras', 'HND', '\"Principal repayments on external debt, long-term (AMT, current US$)\"', 'DT.AMT.DLXF.CD', 412459703.3)\n('Honduras', 'HND', '\"Principal repayments on external debt, private nonguaranteed (PNG) (AMT, current US$)\"', 'DT.AMT.DPNG.CD', 210406059.7)\n('IDA only', 'IDX', '\"Disbursements on external debt, long-term (DIS, current US$)\"', 'DT.DIS.DLXF.CD', 34531188113.2)\n('IDA only', 'IDX', '\"Interest payments on external debt, long-term (INT, current US$)\"', 'DT.INT.DLXF.CD', 7269408633.8)\n('IDA only', 'IDX', '\"Interest payments on external debt, private nonguaranteed (PNG) (INT, current US$)\"', 'DT.INT.DPNG.CD', 1174413339.7)\n('IDA only', 'IDX', '\"PPG, bilateral (AMT, current US$)\"', 'DT.AMT.BLAT.CD', 6273480947.8)\n('IDA only', 'IDX', '\"PPG, bilateral (DIS, current US$)\"', 'DT.DIS.BLAT.CD', 16882903064.4)\n('IDA only', 'IDX', '\"PPG, bilateral (INT, current US$)\"', 'DT.INT.BLAT.CD', 2351375435.8)\n('IDA only', 'IDX', '\"PPG, bonds (AMT, current US$)\"', 'DT.AMT.PBND.CD', 329916650.2)\n('IDA only', 'IDX', '\"PPG, bonds (INT, current US$)\"', 'DT.INT.PBND.CD', 1310931559.6)\n('IDA only', 'IDX', '\"PPG, commercial banks (AMT, current US$)\"', 'DT.AMT.PCBK.CD', 2129231057.8)\n('IDA only', 'IDX', '\"PPG, commercial banks (DIS, current US$)\"', 'DT.DIS.PCBK.CD', 909245034.7)\n('IDA only', 'IDX', '\"PPG, commercial banks (INT, current US$)\"', 'DT.INT.PCBK.CD', 432970941.8)\n('IDA only', 'IDX', '\"PPG, multilateral (AMT, current US$)\"', 'DT.AMT.MLAT.CD', 4884095623.3)\n('IDA only', 'IDX', '\"PPG, multilateral (DIS, current US$)\"', 'DT.DIS.MLAT.CD', 16375327102.5)\n('IDA only', 'IDX', '\"PPG, multilateral (INT, current US$)\"', 'DT.INT.MLAT.CD', 1755479051.6)\n('IDA only', 'IDX', '\"PPG, official creditors (AMT, current US$)\"', 'DT.AMT.OFFT.CD', 11157576571.1)\n('IDA only', 'IDX', '\"PPG, official creditors (DIS, current US$)\"', 'DT.DIS.OFFT.CD', 33258230166.9)\n('IDA only', 'IDX', '\"PPG, official creditors (INT, current US$)\"', 'DT.INT.OFFT.CD', 4106854487.4)\n('IDA only', 'IDX', '\"PPG, other private creditors (AMT, current US$)\"', 'DT.AMT.PROP.CD', 426977610.9)\n('IDA only', 'IDX', '\"PPG, other private creditors (DIS, current US$)\"', 'DT.DIS.PROP.CD', 268947911.6)\n('IDA only', 'IDX', '\"PPG, other private creditors (INT, current US$)\"', 'DT.INT.PROP.CD', 244238305.3)\n('IDA only', 'IDX', '\"PPG, private creditors (AMT, current US$)\"', 'DT.AMT.PRVT.CD', 2886125318.9)\n('IDA only', 'IDX', '\"PPG, private creditors (DIS, current US$)\"', 'DT.DIS.PRVT.CD', 1178192946.3)\n('IDA only', 'IDX', '\"PPG, private creditors (INT, current US$)\"', 'DT.INT.PRVT.CD', 1988140806.7)\n('IDA only', 'IDX', '\"Principal repayments on external debt, long-term (AMT, current US$)\"', 'DT.AMT.DLXF.CD', 20483289208.0)\n('IDA only', 'IDX', '\"Principal repayments on external debt, private nonguaranteed (PNG) (AMT, current US$)\"', 'DT.AMT.DPNG.CD', 6439587318.0)\n('India', 'IND', '\"Disbursements on external debt, long-term (DIS, current US$)\"', 'DT.DIS.DLXF.CD', 11005547326.2)\n('India', 'IND', '\"Interest payments on external debt, long-term (INT, current US$)\"', 'DT.INT.DLXF.CD', 11419475865.8)\n('India', 'IND', '\"Interest payments on external debt, private nonguaranteed (PNG) (INT, current US$)\"', 'DT.INT.DPNG.CD', 9111461000.0)\n('India', 'IND', '\"PPG, bilateral (AMT, current US$)\"', 'DT.AMT.BLAT.CD', 2451995834.5)\n('India', 'IND', '\"PPG, bilateral (DIS, current US$)\"', 'DT.DIS.BLAT.CD', 5588550763.4)\n('India', 'IND', '\"PPG, bilateral (INT, current US$)\"', 'DT.INT.BLAT.CD', 455965157.6)\n('India', 'IND', '\"PPG, bonds (AMT, current US$)\"', 'DT.AMT.PBND.CD', 1133333333.3)\n('India', 'IND', '\"PPG, bonds (INT, current US$)\"', 'DT.INT.PBND.CD', 459247709.8)\n('India', 'IND', '\"PPG, commercial banks (AMT, current US$)\"', 'DT.AMT.PCBK.CD', 3483945853.1)\n('India', 'IND', '\"PPG, commercial banks (DIS, current US$)\"', 'DT.DIS.PCBK.CD', 83527746.29999998)\n('India', 'IND', '\"PPG, commercial banks (INT, current US$)\"', 'DT.INT.PCBK.CD', 530195104.4)\n('India', 'IND', '\"PPG, multilateral (AMT, current US$)\"', 'DT.AMT.MLAT.CD', 4545609909.9)\n('India', 'IND', '\"PPG, multilateral (DIS, current US$)\"', 'DT.DIS.MLAT.CD', 5333468816.5)\n('India', 'IND', '\"PPG, multilateral (INT, current US$)\"', 'DT.INT.MLAT.CD', 862200894.0)\n('India', 'IND', '\"PPG, official creditors (AMT, current US$)\"', 'DT.AMT.OFFT.CD', 6997605744.4)\n('India', 'IND', '\"PPG, official creditors (DIS, current US$)\"', 'DT.DIS.OFFT.CD', 10922019579.9)\n('India', 'IND', '\"PPG, official creditors (INT, current US$)\"', 'DT.INT.OFFT.CD', 1318166051.6)\n('India', 'IND', '\"PPG, other private creditors (AMT, current US$)\"', 'DT.AMT.PROP.CD', 1553450.0)\n('India', 'IND', '\"PPG, other private creditors (INT, current US$)\"', 'DT.INT.PROP.CD', 406000.0)\n('India', 'IND', '\"PPG, private creditors (AMT, current US$)\"', 'DT.AMT.PRVT.CD', 4618832636.4)\n('India', 'IND', '\"PPG, private creditors (DIS, current US$)\"', 'DT.DIS.PRVT.CD', 83527746.29999998)\n('India', 'IND', '\"PPG, private creditors (INT, current US$)\"', 'DT.INT.PRVT.CD', 989848814.2)\n('India', 'IND', '\"Principal repayments on external debt, long-term (AMT, current US$)\"', 'DT.AMT.DLXF.CD', 31923507000.8)\n('India', 'IND', '\"Principal repayments on external debt, private nonguaranteed (PNG) (AMT, current US$)\"', 'DT.AMT.DPNG.CD', 20307068620.0)\n('Indonesia', 'IDN', '\"Disbursements on external debt, long-term (DIS, current US$)\"', 'DT.DIS.DLXF.CD', 4177287375.8)\n('Indonesia', 'IDN', '\"Interest payments on external debt, long-term (INT, current US$)\"', 'DT.INT.DLXF.CD', 10190097793.8)\n('Indonesia', 'IDN', '\"Interest payments on external debt, private nonguaranteed (PNG) (INT, current US$)\"', 'DT.INT.DPNG.CD', 3770921966.7)\n('Indonesia', 'IDN', '\"PPG, bilateral (AMT, current US$)\"', 'DT.AMT.BLAT.CD', 3233436193.9)\n('Indonesia', 'IDN', '\"PPG, bilateral (DIS, current US$)\"', 'DT.DIS.BLAT.CD', 2289402723.3)\n('Indonesia', 'IDN', '\"PPG, bilateral (INT, current US$)\"', 'DT.INT.BLAT.CD', 476814537.9)\n('Indonesia', 'IDN', '\"PPG, bonds (AMT, current US$)\"', 'DT.AMT.PBND.CD', 4114167404.8)\n('Indonesia', 'IDN', '\"PPG, bonds (INT, current US$)\"', 'DT.INT.PBND.CD', 5232651353.5)\n('Indonesia', 'IDN', '\"PPG, commercial banks (AMT, current US$)\"', 'DT.AMT.PCBK.CD', 977304350.0)\n('Indonesia', 'IDN', '\"PPG, commercial banks (DIS, current US$)\"', 'DT.DIS.PCBK.CD', 455534555.3)\n('Indonesia', 'IDN', '\"PPG, commercial banks (INT, current US$)\"', 'DT.INT.PCBK.CD', 90231831.1)\n('Indonesia', 'IDN', '\"PPG, multilateral (AMT, current US$)\"', 'DT.AMT.MLAT.CD', 2469145824.7)\n('Indonesia', 'IDN', '\"PPG, multilateral (DIS, current US$)\"', 'DT.DIS.MLAT.CD', 1214274597.2)\n('Indonesia', 'IDN', '\"PPG, multilateral (INT, current US$)\"', 'DT.INT.MLAT.CD', 561775658.4)\n('Indonesia', 'IDN', '\"PPG, official creditors (AMT, current US$)\"', 'DT.AMT.OFFT.CD', 5702582018.6)\n('Indonesia', 'IDN', '\"PPG, official creditors (DIS, current US$)\"', 'DT.DIS.OFFT.CD', 3503677320.5)\n('Indonesia', 'IDN', '\"PPG, official creditors (INT, current US$)\"', 'DT.INT.OFFT.CD', 1038590196.3)\n('Indonesia', 'IDN', '\"PPG, other private creditors (AMT, current US$)\"', 'DT.AMT.PROP.CD', 1478184070.4)\n('Indonesia', 'IDN', '\"PPG, other private creditors (DIS, current US$)\"', 'DT.DIS.PROP.CD', 218075500.0)\n('Indonesia', 'IDN', '\"PPG, other private creditors (INT, current US$)\"', 'DT.INT.PROP.CD', 57702446.2)\n('Indonesia', 'IDN', '\"PPG, private creditors (AMT, current US$)\"', 'DT.AMT.PRVT.CD', 6569655825.2)\n('Indonesia', 'IDN', '\"PPG, private creditors (DIS, current US$)\"', 'DT.DIS.PRVT.CD', 673610055.3)\n('Indonesia', 'IDN', '\"PPG, private creditors (INT, current US$)\"', 'DT.INT.PRVT.CD', 5380585630.8)\n('Indonesia', 'IDN', '\"Principal repayments on external debt, long-term (AMT, current US$)\"', 'DT.AMT.DLXF.CD', 30916112653.8)\n('Indonesia', 'IDN', '\"Principal repayments on external debt, private nonguaranteed (PNG) (AMT, current US$)\"', 'DT.AMT.DPNG.CD', 18643874810.0)\n('\"Iran, Islamic Rep.\"', 'IRN', '\"Disbursements on external debt, long-term (DIS, current US$)\"', 'DT.DIS.DLXF.CD', 32761505.6)\n('\"Iran, Islamic Rep.\"', 'IRN', '\"Interest payments on external debt, long-term (INT, current US$)\"', 'DT.INT.DLXF.CD', 15907227.6)\n('\"Iran, Islamic Rep.\"', 'IRN', '\"PPG, bilateral (AMT, current US$)\"', 'DT.AMT.BLAT.CD', 18506048.0)\n('\"Iran, Islamic Rep.\"', 'IRN', '\"PPG, bilateral (INT, current US$)\"', 'DT.INT.BLAT.CD', 11333050.3)\n('\"Iran, Islamic Rep.\"', 'IRN', '\"PPG, commercial banks (AMT, current US$)\"', 'DT.AMT.PCBK.CD', 9025208.2)\n('\"Iran, Islamic Rep.\"', 'IRN', '\"PPG, commercial banks (DIS, current US$)\"', 'DT.DIS.PCBK.CD', 32761505.6)\n('\"Iran, Islamic Rep.\"', 'IRN', '\"PPG, commercial banks (INT, current US$)\"', 'DT.INT.PCBK.CD', 374715.9)\n('\"Iran, Islamic Rep.\"', 'IRN', '\"PPG, multilateral (AMT, current US$)\"', 'DT.AMT.MLAT.CD', 78354060.79999998)\n('\"Iran, Islamic Rep.\"', 'IRN', '\"PPG, multilateral (INT, current US$)\"', 'DT.INT.MLAT.CD', 4199461.4)\n('\"Iran, Islamic Rep.\"', 'IRN', '\"PPG, official creditors (AMT, current US$)\"', 'DT.AMT.OFFT.CD', 96860108.8)\n('\"Iran, Islamic Rep.\"', 'IRN', '\"PPG, official creditors (INT, current US$)\"', 'DT.INT.OFFT.CD', 15532511.7)\n('\"Iran, Islamic Rep.\"', 'IRN', '\"PPG, private creditors (AMT, current US$)\"', 'DT.AMT.PRVT.CD', 9025208.2)\n('\"Iran, Islamic Rep.\"', 'IRN', '\"PPG, private creditors (DIS, current US$)\"', 'DT.DIS.PRVT.CD', 32761505.6)\n('\"Iran, Islamic Rep.\"', 'IRN', '\"PPG, private creditors (INT, current US$)\"', 'DT.INT.PRVT.CD', 374715.9)\n('\"Iran, Islamic Rep.\"', 'IRN', '\"Principal repayments on external debt, long-term (AMT, current US$)\"', 'DT.AMT.DLXF.CD', 105885317.0)\n('Jamaica', 'JAM', '\"Disbursements on external debt, long-term (DIS, current US$)\"', 'DT.DIS.DLXF.CD', 188717385.7)\n('Jamaica', 'JAM', '\"Interest payments on external debt, long-term (INT, current US$)\"', 'DT.INT.DLXF.CD', 661568432.2)\n('Jamaica', 'JAM', '\"Interest payments on external debt, private nonguaranteed (PNG) (INT, current US$)\"', 'DT.INT.DPNG.CD', 104466000.0)\n('Jamaica', 'JAM', '\"PPG, bilateral (AMT, current US$)\"', 'DT.AMT.BLAT.CD', 93733672.1)\n('Jamaica', 'JAM', '\"PPG, bilateral (DIS, current US$)\"', 'DT.DIS.BLAT.CD', 112848973.6)\n('Jamaica', 'JAM', '\"PPG, bilateral (INT, current US$)\"', 'DT.INT.BLAT.CD', 19718160.9)\n('Jamaica', 'JAM', '\"PPG, bonds (AMT, current US$)\"', 'DT.AMT.PBND.CD', 100473736.8)\n('Jamaica', 'JAM', '\"PPG, bonds (INT, current US$)\"', 'DT.INT.PBND.CD', 470652000.0)\n('Jamaica', 'JAM', '\"PPG, commercial banks (AMT, current US$)\"', 'DT.AMT.PCBK.CD', 45845850.2)\n('Jamaica', 'JAM', '\"PPG, commercial banks (INT, current US$)\"', 'DT.INT.PCBK.CD', 2086139.2)\n('Jamaica', 'JAM', '\"PPG, multilateral (AMT, current US$)\"', 'DT.AMT.MLAT.CD', 174427648.0)\n('Jamaica', 'JAM', '\"PPG, multilateral (DIS, current US$)\"', 'DT.DIS.MLAT.CD', 75868412.09999998)\n('Jamaica', 'JAM', '\"PPG, multilateral (INT, current US$)\"', 'DT.INT.MLAT.CD', 64135132.1)\n('Jamaica', 'JAM', '\"PPG, official creditors (AMT, current US$)\"', 'DT.AMT.OFFT.CD', 268161320.1)\n('Jamaica', 'JAM', '\"PPG, official creditors (DIS, current US$)\"', 'DT.DIS.OFFT.CD', 188717385.7)\n('Jamaica', 'JAM', '\"PPG, official creditors (INT, current US$)\"', 'DT.INT.OFFT.CD', 83853293.0)\n('Jamaica', 'JAM', '\"PPG, other private creditors (AMT, current US$)\"', 'DT.AMT.PROP.CD', 1268714.3)\n('Jamaica', 'JAM', '\"PPG, other private creditors (INT, current US$)\"', 'DT.INT.PROP.CD', 511000.0)\n('Jamaica', 'JAM', '\"PPG, private creditors (AMT, current US$)\"', 'DT.AMT.PRVT.CD', 147588301.3)\n('Jamaica', 'JAM', '\"PPG, private creditors (INT, current US$)\"', 'DT.INT.PRVT.CD', 473249139.2)\n('Jamaica', 'JAM', '\"Principal repayments on external debt, long-term (AMT, current US$)\"', 'DT.AMT.DLXF.CD', 559597431.4)\n('Jamaica', 'JAM', '\"Principal repayments on external debt, private nonguaranteed (PNG) (AMT, current US$)\"', 'DT.AMT.DPNG.CD', 143847810.0)\n('Jordan', 'JOR', '\"Disbursements on external debt, long-term (DIS, current US$)\"', 'DT.DIS.DLXF.CD', 473703814.3)\n('Jordan', 'JOR', '\"Interest payments on external debt, long-term (INT, current US$)\"', 'DT.INT.DLXF.CD', 533968850.8)\n('Jordan', 'JOR', '\"Interest payments on external debt, private nonguaranteed (PNG) (INT, current US$)\"', 'DT.INT.DPNG.CD', 75949000.0)\n('Jordan', 'JOR', '\"PPG, bilateral (AMT, current US$)\"', 'DT.AMT.BLAT.CD', 230204467.2)\n('Jordan', 'JOR', '\"PPG, bilateral (DIS, current US$)\"', 'DT.DIS.BLAT.CD', 175484307.3)\n('Jordan', 'JOR', '\"PPG, bilateral (INT, current US$)\"', 'DT.INT.BLAT.CD', 62136103.7)\n('Jordan', 'JOR', '\"PPG, bonds (AMT, current US$)\"', 'DT.AMT.PBND.CD', 1029000000.0)\n('Jordan', 'JOR', '\"PPG, bonds (INT, current US$)\"', 'DT.INT.PBND.CD', 306023000.0)\n('Jordan', 'JOR', '\"PPG, commercial banks (AMT, current US$)\"', 'DT.AMT.PCBK.CD', 3680522.3)\n('Jordan', 'JOR', '\"PPG, commercial banks (DIS, current US$)\"', 'DT.DIS.PCBK.CD', 3441455.0)\n('Jordan', 'JOR', '\"PPG, commercial banks (INT, current US$)\"', 'DT.INT.PCBK.CD', 4228342.9)\n('Jordan', 'JOR', '\"PPG, multilateral (AMT, current US$)\"', 'DT.AMT.MLAT.CD', 270498715.5)\n('Jordan', 'JOR', '\"PPG, multilateral (DIS, current US$)\"', 'DT.DIS.MLAT.CD', 294778052.0)\n('Jordan', 'JOR', '\"PPG, multilateral (INT, current US$)\"', 'DT.INT.MLAT.CD', 84738685.9)\n('Jordan', 'JOR', '\"PPG, official creditors (AMT, current US$)\"', 'DT.AMT.OFFT.CD', 500703182.7)\n('Jordan', 'JOR', '\"PPG, official creditors (DIS, current US$)\"', 'DT.DIS.OFFT.CD', 470262359.3)\n('Jordan', 'JOR', '\"PPG, official creditors (INT, current US$)\"', 'DT.INT.OFFT.CD', 146874789.6)\n('Jordan', 'JOR', '\"PPG, other private creditors (AMT, current US$)\"', 'DT.AMT.PROP.CD', 11580964.2)\n('Jordan', 'JOR', '\"PPG, other private creditors (INT, current US$)\"', 'DT.INT.PROP.CD', 893718.3)\n('Jordan', 'JOR', '\"PPG, private creditors (AMT, current US$)\"', 'DT.AMT.PRVT.CD', 1044261486.5)\n('Jordan', 'JOR', '\"PPG, private creditors (DIS, current US$)\"', 'DT.DIS.PRVT.CD', 3441455.0)\n('Jordan', 'JOR', '\"PPG, private creditors (INT, current US$)\"', 'DT.INT.PRVT.CD', 311145061.2)\n('Jordan', 'JOR', '\"Principal repayments on external debt, long-term (AMT, current US$)\"', 'DT.AMT.DLXF.CD', 1990343479.2)\n('Jordan', 'JOR', '\"Principal repayments on external debt, private nonguaranteed (PNG) (AMT, current US$)\"', 'DT.AMT.DPNG.CD', 445378810.0)\n('Kazakhstan', 'KAZ', '\"Disbursements on external debt, long-term (DIS, current US$)\"', 'DT.DIS.DLXF.CD', 874231247.0)\n('Kazakhstan', 'KAZ', '\"Interest payments on external debt, long-term (INT, current US$)\"', 'DT.INT.DLXF.CD', 5333500397.9)\n('Kazakhstan', 'KAZ', '\"Interest payments on external debt, private nonguaranteed (PNG) (INT, current US$)\"', 'DT.INT.DPNG.CD', 4552173000.0)\n('Kazakhstan', 'KAZ', '\"PPG, bilateral (AMT, current US$)\"', 'DT.AMT.BLAT.CD', 44784496.7)\n('Kazakhstan', 'KAZ', '\"PPG, bilateral (DIS, current US$)\"', 'DT.DIS.BLAT.CD', 254112169.3)\n('Kazakhstan', 'KAZ', '\"PPG, bilateral (INT, current US$)\"', 'DT.INT.BLAT.CD', 49233512.4)\n('Kazakhstan', 'KAZ', '\"PPG, bonds (AMT, current US$)\"', 'DT.AMT.PBND.CD', 0.0)\n('Kazakhstan', 'KAZ', '\"PPG, bonds (INT, current US$)\"', 'DT.INT.PBND.CD', 564251000.0)\n('Kazakhstan', 'KAZ', '\"PPG, multilateral (AMT, current US$)\"', 'DT.AMT.MLAT.CD', 1079948889.7)\n('Kazakhstan', 'KAZ', '\"PPG, multilateral (DIS, current US$)\"', 'DT.DIS.MLAT.CD', 620119077.7)\n('Kazakhstan', 'KAZ', '\"PPG, multilateral (INT, current US$)\"', 'DT.INT.MLAT.CD', 167842885.5)\n('Kazakhstan', 'KAZ', '\"PPG, official creditors (AMT, current US$)\"', 'DT.AMT.OFFT.CD', 1124733386.4)\n('Kazakhstan', 'KAZ', '\"PPG, official creditors (DIS, current US$)\"', 'DT.DIS.OFFT.CD', 874231247.0)\n('Kazakhstan', 'KAZ', '\"PPG, official creditors (INT, current US$)\"', 'DT.INT.OFFT.CD', 217076397.9)\n('Kazakhstan', 'KAZ', '\"PPG, private creditors (AMT, current US$)\"', 'DT.AMT.PRVT.CD', 0.0)\n('Kazakhstan', 'KAZ', '\"PPG, private creditors (INT, current US$)\"', 'DT.INT.PRVT.CD', 564251000.0)\n('Kazakhstan', 'KAZ', '\"Principal repayments on external debt, long-term (AMT, current US$)\"', 'DT.AMT.DLXF.CD', 27482093686.4)\n('Kazakhstan', 'KAZ', '\"Principal repayments on external debt, private nonguaranteed (PNG) (AMT, current US$)\"', 'DT.AMT.DPNG.CD', 26357360300.0)\n('Kenya', 'KEN', '\"Disbursements on external debt, long-term (DIS, current US$)\"', 'DT.DIS.DLXF.CD', 4266494939.7)\n('Kenya', 'KEN', '\"Interest payments on external debt, long-term (INT, current US$)\"', 'DT.INT.DLXF.CD', 819196742.6)\n('Kenya', 'KEN', '\"Interest payments on external debt, private nonguaranteed (PNG) (INT, current US$)\"', 'DT.INT.DPNG.CD', 26876362.7)\n('Kenya', 'KEN', '\"PPG, bilateral (AMT, current US$)\"', 'DT.AMT.BLAT.CD', 515101268.1)\n('Kenya', 'KEN', '\"PPG, bilateral (DIS, current US$)\"', 'DT.DIS.BLAT.CD', 1582905042.0)\n('Kenya', 'KEN', '\"PPG, bilateral (INT, current US$)\"', 'DT.INT.BLAT.CD', 342056817.0)\n('Kenya', 'KEN', '\"PPG, bonds (AMT, current US$)\"', 'DT.AMT.PBND.CD', 500000000.0)\n('Kenya', 'KEN', '\"PPG, bonds (INT, current US$)\"', 'DT.INT.PBND.CD', 184060000.0)\n('Kenya', 'KEN', '\"PPG, commercial banks (AMT, current US$)\"', 'DT.AMT.PCBK.CD', 897058411.6)\n('Kenya', 'KEN', '\"PPG, commercial banks (DIS, current US$)\"', 'DT.DIS.PCBK.CD', 842857183.3999999)\n('Kenya', 'KEN', '\"PPG, commercial banks (INT, current US$)\"', 'DT.INT.PCBK.CD', 94818544.2)\n('Kenya', 'KEN', '\"PPG, multilateral (AMT, current US$)\"', 'DT.AMT.MLAT.CD', 391340889.9)\n('Kenya', 'KEN', '\"PPG, multilateral (DIS, current US$)\"', 'DT.DIS.MLAT.CD', 1840732714.3)\n('Kenya', 'KEN', '\"PPG, multilateral (INT, current US$)\"', 'DT.INT.MLAT.CD', 167570018.7)\n('Kenya', 'KEN', '\"PPG, official creditors (AMT, current US$)\"', 'DT.AMT.OFFT.CD', 906442158.0)\n('Kenya', 'KEN', '\"PPG, official creditors (DIS, current US$)\"', 'DT.DIS.OFFT.CD', 3423637756.3)\n('Kenya', 'KEN', '\"PPG, official creditors (INT, current US$)\"', 'DT.INT.OFFT.CD', 509626835.7)\n('Kenya', 'KEN', '\"PPG, other private creditors (AMT, current US$)\"', 'DT.AMT.PROP.CD', 53632026.6)\n('Kenya', 'KEN', '\"PPG, other private creditors (INT, current US$)\"', 'DT.INT.PROP.CD', 3815000.0)\n('Kenya', 'KEN', '\"PPG, private creditors (AMT, current US$)\"', 'DT.AMT.PRVT.CD', 1450690438.2)\n('Kenya', 'KEN', '\"PPG, private creditors (DIS, current US$)\"', 'DT.DIS.PRVT.CD', 842857183.3999999)\n('Kenya', 'KEN', '\"PPG, private creditors (INT, current US$)\"', 'DT.INT.PRVT.CD', 282693544.2)\n('Kenya', 'KEN', '\"Principal repayments on external debt, long-term (AMT, current US$)\"', 'DT.AMT.DLXF.CD', 2517537554.7)\n('Kenya', 'KEN', '\"Principal repayments on external debt, private nonguaranteed (PNG) (AMT, current US$)\"', 'DT.AMT.DPNG.CD', 160404958.5)\n('Kosovo', 'XKX', '\"Disbursements on external debt, long-term (DIS, current US$)\"', 'DT.DIS.DLXF.CD', 115599658.5)\n('Kosovo', 'XKX', '\"Interest payments on external debt, long-term (INT, current US$)\"', 'DT.INT.DLXF.CD', 42610586.9)\n('Kosovo', 'XKX', '\"Interest payments on external debt, private nonguaranteed (PNG) (INT, current US$)\"', 'DT.INT.DPNG.CD', 32562000.0)\n('Kosovo', 'XKX', '\"PPG, bilateral (AMT, current US$)\"', 'DT.AMT.BLAT.CD', 5173195.2)\n('Kosovo', 'XKX', '\"PPG, bilateral (DIS, current US$)\"', 'DT.DIS.BLAT.CD', 29959141.9)\n('Kosovo', 'XKX', '\"PPG, bilateral (INT, current US$)\"', 'DT.INT.BLAT.CD', 1704127.3)\n('Kosovo', 'XKX', '\"PPG, commercial banks (AMT, current US$)\"', 'DT.AMT.PCBK.CD', 2609476.0)\n('Kosovo', 'XKX', '\"PPG, commercial banks (INT, current US$)\"', 'DT.INT.PCBK.CD', 699191.9)\n('Kosovo', 'XKX', '\"PPG, multilateral (AMT, current US$)\"', 'DT.AMT.MLAT.CD', 33590154.6)\n('Kosovo', 'XKX', '\"PPG, multilateral (DIS, current US$)\"', 'DT.DIS.MLAT.CD', 85640516.59999998)\n('Kosovo', 'XKX', '\"PPG, multilateral (INT, current US$)\"', 'DT.INT.MLAT.CD', 7645267.7)\n('Kosovo', 'XKX', '\"PPG, official creditors (AMT, current US$)\"', 'DT.AMT.OFFT.CD', 38763349.8)\n('Kosovo', 'XKX', '\"PPG, official creditors (DIS, current US$)\"', 'DT.DIS.OFFT.CD', 115599658.5)\n('Kosovo', 'XKX', '\"PPG, official creditors (INT, current US$)\"', 'DT.INT.OFFT.CD', 9349395.0)\n('Kosovo', 'XKX', '\"PPG, private creditors (AMT, current US$)\"', 'DT.AMT.PRVT.CD', 2609476.0)\n('Kosovo', 'XKX', '\"PPG, private creditors (INT, current US$)\"', 'DT.INT.PRVT.CD', 699191.9)\n('Kosovo', 'XKX', '\"Principal repayments on external debt, long-term (AMT, current US$)\"', 'DT.AMT.DLXF.CD', 232317825.8)\n('Kosovo', 'XKX', '\"Principal repayments on external debt, private nonguaranteed (PNG) (AMT, current US$)\"', 'DT.AMT.DPNG.CD', 190945000.0)\n('Kyrgyz Republic', 'KGZ', '\"Disbursements on external debt, long-term (DIS, current US$)\"', 'DT.DIS.DLXF.CD', 837442293.3999999)\n('Kyrgyz Republic', 'KGZ', '\"Interest payments on external debt, long-term (INT, current US$)\"', 'DT.INT.DLXF.CD', 145952992.6)\n('Kyrgyz Republic', 'KGZ', '\"Interest payments on external debt, private nonguaranteed (PNG) (INT, current US$)\"', 'DT.INT.DPNG.CD', 63535000.0)\n('Kyrgyz Republic', 'KGZ', '\"PPG, bilateral (AMT, current US$)\"', 'DT.AMT.BLAT.CD', 62213250.6)\n('Kyrgyz Republic', 'KGZ', '\"PPG, bilateral (DIS, current US$)\"', 'DT.DIS.BLAT.CD', 153027414.4)\n('Kyrgyz Republic', 'KGZ', '\"PPG, bilateral (INT, current US$)\"', 'DT.INT.BLAT.CD', 43802082.9)\n('Kyrgyz Republic', 'KGZ', '\"PPG, multilateral (AMT, current US$)\"', 'DT.AMT.MLAT.CD', 75278037.2)\n('Kyrgyz Republic', 'KGZ', '\"PPG, multilateral (DIS, current US$)\"', 'DT.DIS.MLAT.CD', 684414879.0)\n('Kyrgyz Republic', 'KGZ', '\"PPG, multilateral (INT, current US$)\"', 'DT.INT.MLAT.CD', 38615909.7)\n('Kyrgyz Republic', 'KGZ', '\"PPG, official creditors (AMT, current US$)\"', 'DT.AMT.OFFT.CD', 137491287.8)\n('Kyrgyz Republic', 'KGZ', '\"PPG, official creditors (DIS, current US$)\"', 'DT.DIS.OFFT.CD', 837442293.3999999)\n('Kyrgyz Republic', 'KGZ', '\"PPG, official creditors (INT, current US$)\"', 'DT.INT.OFFT.CD', 82417992.59999998)\n('Kyrgyz Republic', 'KGZ', '\"Principal repayments on external debt, long-term (AMT, current US$)\"', 'DT.AMT.DLXF.CD', 816419045.1)\n('Kyrgyz Republic', 'KGZ', '\"Principal repayments on external debt, private nonguaranteed (PNG) (AMT, current US$)\"', 'DT.AMT.DPNG.CD', 678927757.3)\n('Lao PDR', 'LAO', '\"Disbursements on external debt, long-term (DIS, current US$)\"', 'DT.DIS.DLXF.CD', 1135545159.8)\n('Lao PDR', 'LAO', '\"Interest payments on external debt, long-term (INT, current US$)\"', 'DT.INT.DLXF.CD', 418497462.5)\n('Lao PDR', 'LAO', '\"Interest payments on external debt, private nonguaranteed (PNG) (INT, current US$)\"', 'DT.INT.DPNG.CD', 183013000.0)\n('Lao PDR', 'LAO', '\"PPG, bilateral (AMT, current US$)\"', 'DT.AMT.BLAT.CD', 346861942.2)\n('Lao PDR', 'LAO', '\"PPG, bilateral (DIS, current US$)\"', 'DT.DIS.BLAT.CD', 966004791.1)\n('Lao PDR', 'LAO', '\"PPG, bilateral (INT, current US$)\"', 'DT.INT.BLAT.CD', 134508386.6)\n('Lao PDR', 'LAO', '\"PPG, bonds (AMT, current US$)\"', 'DT.AMT.PBND.CD', 203368516.9)\n('Lao PDR', 'LAO', '\"PPG, bonds (INT, current US$)\"', 'DT.INT.PBND.CD', 67466781.3)\n('Lao PDR', 'LAO', '\"PPG, commercial banks (AMT, current US$)\"', 'DT.AMT.PCBK.CD', 25954663.4)\n('Lao PDR', 'LAO', '\"PPG, commercial banks (DIS, current US$)\"', 'DT.DIS.PCBK.CD', 25145870.4)\n('Lao PDR', 'LAO', '\"PPG, commercial banks (INT, current US$)\"', 'DT.INT.PCBK.CD', 5213357.1)\n('Lao PDR', 'LAO', '\"PPG, multilateral (AMT, current US$)\"', 'DT.AMT.MLAT.CD', 80684114.59999998)\n('Lao PDR', 'LAO', '\"PPG, multilateral (DIS, current US$)\"', 'DT.DIS.MLAT.CD', 131394498.3)\n('Lao PDR', 'LAO', '\"PPG, multilateral (INT, current US$)\"', 'DT.INT.MLAT.CD', 26353937.5)\n('Lao PDR', 'LAO', '\"PPG, official creditors (AMT, current US$)\"', 'DT.AMT.OFFT.CD', 427546056.8)\n('Lao PDR', 'LAO', '\"PPG, official creditors (DIS, current US$)\"', 'DT.DIS.OFFT.CD', 1097399289.4)\n('Lao PDR', 'LAO', '\"PPG, official creditors (INT, current US$)\"', 'DT.INT.OFFT.CD', 160862324.1)\n('Lao PDR', 'LAO', '\"PPG, other private creditors (AMT, current US$)\"', 'DT.AMT.PROP.CD', 8488563.0)\n('Lao PDR', 'LAO', '\"PPG, other private creditors (DIS, current US$)\"', 'DT.DIS.PROP.CD', 13000000.0)\n('Lao PDR', 'LAO', '\"PPG, other private creditors (INT, current US$)\"', 'DT.INT.PROP.CD', 1942000.0)\n('Lao PDR', 'LAO', '\"PPG, private creditors (AMT, current US$)\"', 'DT.AMT.PRVT.CD', 237811743.3)\n('Lao PDR', 'LAO', '\"PPG, private creditors (DIS, current US$)\"', 'DT.DIS.PRVT.CD', 38145870.4)\n('Lao PDR', 'LAO', '\"PPG, private creditors (INT, current US$)\"', 'DT.INT.PRVT.CD', 74622138.4)\n('Lao PDR', 'LAO', '\"Principal repayments on external debt, long-term (AMT, current US$)\"', 'DT.AMT.DLXF.CD', 1605959990.1)\n('Lao PDR', 'LAO', '\"Principal repayments on external debt, private nonguaranteed (PNG) (AMT, current US$)\"', 'DT.AMT.DPNG.CD', 940602190.0)\n('Lesotho', 'LSO', '\"PPG, bilateral (INT, current US$)\"', 'DT.INT.BLAT.CD', 2704841.4)\n('Least developed countries: UN classification', 'LDC', '\"Disbursements on external debt, long-term (DIS, current US$)\"', 'DT.DIS.DLXF.CD', 40160766261.6)\n('Least developed countries: UN classification', 'LDC', '\"Interest payments on external debt, long-term (INT, current US$)\"', 'DT.INT.DLXF.CD', 7085064805.2)\n('Least developed countries: UN classification', 'LDC', '\"Interest payments on external debt, private nonguaranteed (PNG) (INT, current US$)\"', 'DT.INT.DPNG.CD', 766272000.0)\n('Least developed countries: UN classification', 'LDC', '\"PPG, bilateral (AMT, current US$)\"', 'DT.AMT.BLAT.CD', 12944703036.6)\n('Least developed countries: UN classification', 'LDC', '\"PPG, bilateral (DIS, current US$)\"', 'DT.DIS.BLAT.CD', 23333956388.4)\n('Least developed countries: UN classification', 'LDC', '\"PPG, bilateral (INT, current US$)\"', 'DT.INT.BLAT.CD', 3029826352.3)\n('Least developed countries: UN classification', 'LDC', '\"PPG, bonds (AMT, current US$)\"', 'DT.AMT.PBND.CD', 1203368516.9)\n('Least developed countries: UN classification', 'LDC', '\"PPG, bonds (INT, current US$)\"', 'DT.INT.PBND.CD', 662460781.3)\n('Least developed countries: UN classification', 'LDC', '\"PPG, commercial banks (AMT, current US$)\"', 'DT.AMT.PCBK.CD', 2636028272.9)\n('Least developed countries: UN classification', 'LDC', '\"PPG, commercial banks (DIS, current US$)\"', 'DT.DIS.PCBK.CD', 2621897864.6)\n('Least developed countries: UN classification', 'LDC', '\"PPG, commercial banks (INT, current US$)\"', 'DT.INT.PCBK.CD', 917218236.6)\n('Least developed countries: UN classification', 'LDC', '\"PPG, multilateral (AMT, current US$)\"', 'DT.AMT.MLAT.CD', 4084275524.2)\n('Least developed countries: UN classification', 'LDC', '\"PPG, multilateral (DIS, current US$)\"', 'DT.DIS.MLAT.CD', 13940020962.1)\n('Least developed countries: UN classification', 'LDC', '\"PPG, multilateral (INT, current US$)\"', 'DT.INT.MLAT.CD', 1396668176.3)\n('Least developed countries: UN classification', 'LDC', '\"PPG, official creditors (AMT, current US$)\"', 'DT.AMT.OFFT.CD', 17028978560.8)\n('Least developed countries: UN classification', 'LDC', '\"PPG, official creditors (DIS, current US$)\"', 'DT.DIS.OFFT.CD', 37273977350.5)\n('Least developed countries: UN classification', 'LDC', '\"PPG, official creditors (INT, current US$)\"', 'DT.INT.OFFT.CD', 4426494528.6)\n('Least developed countries: UN classification', 'LDC', '\"PPG, other private creditors (AMT, current US$)\"', 'DT.AMT.PROP.CD', 647337642.1)\n('Least developed countries: UN classification', 'LDC', '\"PPG, other private creditors (DIS, current US$)\"', 'DT.DIS.PROP.CD', 264891046.5)\n('Least developed countries: UN classification', 'LDC', '\"PPG, other private creditors (INT, current US$)\"', 'DT.INT.PROP.CD', 312619258.7)\n('Least developed countries: UN classification', 'LDC', '\"PPG, private creditors (AMT, current US$)\"', 'DT.AMT.PRVT.CD', 4486734431.9)\n('Least developed countries: UN classification', 'LDC', '\"PPG, private creditors (DIS, current US$)\"', 'DT.DIS.PRVT.CD', 2886788911.1)\n('Least developed countries: UN classification', 'LDC', '\"PPG, private creditors (INT, current US$)\"', 'DT.INT.PRVT.CD', 1892298276.6)\n('Least developed countries: UN classification', 'LDC', '\"Principal repayments on external debt, long-term (AMT, current US$)\"', 'DT.AMT.DLXF.CD', 25197029299.4)\n('Least developed countries: UN classification', 'LDC', '\"Principal repayments on external debt, private nonguaranteed (PNG) (AMT, current US$)\"', 'DT.AMT.DPNG.CD', 3681316306.7)\n('Lebanon', 'LBN', '\"Disbursements on external debt, long-term (DIS, current US$)\"', 'DT.DIS.DLXF.CD', 569983871.3)\n('Lebanon', 'LBN', '\"Interest payments on external debt, long-term (INT, current US$)\"', 'DT.INT.DLXF.CD', 2131942998.7)\n('Lebanon', 'LBN', '\"Interest payments on external debt, private nonguaranteed (PNG) (INT, current US$)\"', 'DT.INT.DPNG.CD', 413768000.0)\n('Lebanon', 'LBN', '\"PPG, bilateral (AMT, current US$)\"', 'DT.AMT.BLAT.CD', 137130312.1)\n('Lebanon', 'LBN', '\"PPG, bilateral (DIS, current US$)\"', 'DT.DIS.BLAT.CD', 129913451.7)\n('Lebanon', 'LBN', '\"PPG, bilateral (INT, current US$)\"', 'DT.INT.BLAT.CD', 16970779.5)\n('Lebanon', 'LBN', '\"PPG, bonds (AMT, current US$)\"', 'DT.AMT.PBND.CD', 2653766481.1)\n('Lebanon', 'LBN', '\"PPG, bonds (INT, current US$)\"', 'DT.INT.PBND.CD', 1649553000.0)\n('Lebanon', 'LBN', '\"PPG, commercial banks (AMT, current US$)\"', 'DT.AMT.PCBK.CD', 33485786.7)\n('Lebanon', 'LBN', '\"PPG, commercial banks (DIS, current US$)\"', 'DT.DIS.PCBK.CD', 17404140.4)\n('Lebanon', 'LBN', '\"PPG, commercial banks (INT, current US$)\"', 'DT.INT.PCBK.CD', 2469762.0)\n('Lebanon', 'LBN', '\"PPG, multilateral (AMT, current US$)\"', 'DT.AMT.MLAT.CD', 167638089.7)\n('Lebanon', 'LBN', '\"PPG, multilateral (DIS, current US$)\"', 'DT.DIS.MLAT.CD', 419104358.2)\n('Lebanon', 'LBN', '\"PPG, multilateral (INT, current US$)\"', 'DT.INT.MLAT.CD', 49181457.2)\n('Lebanon', 'LBN', '\"PPG, official creditors (AMT, current US$)\"', 'DT.AMT.OFFT.CD', 304768401.8)\n('Lebanon', 'LBN', '\"PPG, official creditors (DIS, current US$)\"', 'DT.DIS.OFFT.CD', 549017809.9)\n('Lebanon', 'LBN', '\"PPG, official creditors (INT, current US$)\"', 'DT.INT.OFFT.CD', 66152236.7)\n('Lebanon', 'LBN', '\"PPG, other private creditors (DIS, current US$)\"', 'DT.DIS.PROP.CD', 3561921.0)\n('Lebanon', 'LBN', '\"PPG, private creditors (AMT, current US$)\"', 'DT.AMT.PRVT.CD', 2687252267.8)\n('Lebanon', 'LBN', '\"PPG, private creditors (DIS, current US$)\"', 'DT.DIS.PRVT.CD', 20966061.4)\n('Lebanon', 'LBN', '\"PPG, private creditors (INT, current US$)\"', 'DT.INT.PRVT.CD', 1652022762.0)\n('Lebanon', 'LBN', '\"Principal repayments on external debt, long-term (AMT, current US$)\"', 'DT.AMT.DLXF.CD', 9506919669.6)\n('Lebanon', 'LBN', '\"Principal repayments on external debt, private nonguaranteed (PNG) (AMT, current US$)\"', 'DT.AMT.DPNG.CD', 6514899000.0)\n('Lesotho', 'LSO', '\"Disbursements on external debt, long-term (DIS, current US$)\"', 'DT.DIS.DLXF.CD', 80548591.59999998)\n('Lesotho', 'LSO', '\"Interest payments on external debt, long-term (INT, current US$)\"', 'DT.INT.DLXF.CD', 19145345.9)\n('Lesotho', 'LSO', '\"PPG, bilateral (AMT, current US$)\"', 'DT.AMT.BLAT.CD', 12806231.5)\n('Lesotho', 'LSO', '\"PPG, bilateral (DIS, current US$)\"', 'DT.DIS.BLAT.CD', 13239867.2)\n('Lesotho', 'LSO', '\"PPG, commercial banks (AMT, current US$)\"', 'DT.AMT.PCBK.CD', 157326.4)\n('Lesotho', 'LSO', '\"PPG, commercial banks (INT, current US$)\"', 'DT.INT.PCBK.CD', 80353.1)\n('Lesotho', 'LSO', '\"PPG, multilateral (AMT, current US$)\"', 'DT.AMT.MLAT.CD', 32459403.7)\n('Lesotho', 'LSO', '\"PPG, multilateral (DIS, current US$)\"', 'DT.DIS.MLAT.CD', 67308724.4)\n('Lesotho', 'LSO', '\"PPG, multilateral (INT, current US$)\"', 'DT.INT.MLAT.CD', 16360151.4)\n('Lesotho', 'LSO', '\"PPG, official creditors (AMT, current US$)\"', 'DT.AMT.OFFT.CD', 45265635.2)\n('Lesotho', 'LSO', '\"PPG, official creditors (DIS, current US$)\"', 'DT.DIS.OFFT.CD', 80548591.59999998)\n('Lesotho', 'LSO', '\"PPG, official creditors (INT, current US$)\"', 'DT.INT.OFFT.CD', 19064992.8)\n('Lesotho', 'LSO', '\"PPG, private creditors (AMT, current US$)\"', 'DT.AMT.PRVT.CD', 157326.4)\n('Lesotho', 'LSO', '\"PPG, private creditors (INT, current US$)\"', 'DT.INT.PRVT.CD', 80353.1)\n('Lesotho', 'LSO', '\"Principal repayments on external debt, long-term (AMT, current US$)\"', 'DT.AMT.DLXF.CD', 45422961.6)\n('Liberia', 'LBR', '\"Disbursements on external debt, long-term (DIS, current US$)\"', 'DT.DIS.DLXF.CD', 150961031.2)\n('Liberia', 'LBR', '\"Interest payments on external debt, long-term (INT, current US$)\"', 'DT.INT.DLXF.CD', 9659434.0)\n('Liberia', 'LBR', '\"Interest payments on external debt, private nonguaranteed (PNG) (INT, current US$)\"', 'DT.INT.DPNG.CD', 903000.0)\n('Liberia', 'LBR', '\"PPG, bilateral (AMT, current US$)\"', 'DT.AMT.BLAT.CD', 602095.8)\n('Liberia', 'LBR', '\"PPG, bilateral (DIS, current US$)\"', 'DT.DIS.BLAT.CD', 33122214.9)\n('Liberia', 'LBR', '\"PPG, bilateral (INT, current US$)\"', 'DT.INT.BLAT.CD', 2971664.1)\n('Liberia', 'LBR', '\"PPG, multilateral (AMT, current US$)\"', 'DT.AMT.MLAT.CD', 7383619.4)\n('Liberia', 'LBR', '\"PPG, multilateral (DIS, current US$)\"', 'DT.DIS.MLAT.CD', 117838816.3)\n('Liberia', 'LBR', '\"PPG, multilateral (INT, current US$)\"', 'DT.INT.MLAT.CD', 5784769.9)\n('Liberia', 'LBR', '\"PPG, official creditors (AMT, current US$)\"', 'DT.AMT.OFFT.CD', 7985715.2)\n('Liberia', 'LBR', '\"PPG, official creditors (DIS, current US$)\"', 'DT.DIS.OFFT.CD', 150961031.2)\n('Liberia', 'LBR', '\"PPG, official creditors (INT, current US$)\"', 'DT.INT.OFFT.CD', 8756434.0)\n('Liberia', 'LBR', '\"Principal repayments on external debt, long-term (AMT, current US$)\"', 'DT.AMT.DLXF.CD', 15621477.1)\n('Liberia', 'LBR', '\"Principal repayments on external debt, private nonguaranteed (PNG) (AMT, current US$)\"', 'DT.AMT.DPNG.CD', 7635761.9)\n('\"Macedonia, FYR\"', 'MKD', '\"Disbursements on external debt, long-term (DIS, current US$)\"', 'DT.DIS.DLXF.CD', 297334137.6)\n('\"Macedonia, FYR\"', 'MKD', '\"Interest payments on external debt, long-term (INT, current US$)\"', 'DT.INT.DLXF.CD', 220478984.1)\n('\"Macedonia, FYR\"', 'MKD', '\"Interest payments on external debt, private nonguaranteed (PNG) (INT, current US$)\"', 'DT.INT.DPNG.CD', 107314000.0)\n('\"Macedonia, FYR\"', 'MKD', '\"PPG, bilateral (AMT, current US$)\"', 'DT.AMT.BLAT.CD', 70570550.3)\n('\"Macedonia, FYR\"', 'MKD', '\"PPG, bilateral (DIS, current US$)\"', 'DT.DIS.BLAT.CD', 101396578.4)\n('\"Macedonia, FYR\"', 'MKD', '\"PPG, bilateral (INT, current US$)\"', 'DT.INT.BLAT.CD', 14127618.6)\n('\"Macedonia, FYR\"', 'MKD', '\"PPG, bonds (AMT, current US$)\"', 'DT.AMT.PBND.CD', 0.0)\n('\"Macedonia, FYR\"', 'MKD', '\"PPG, bonds (INT, current US$)\"', 'DT.INT.PBND.CD', 69976756.4)\n('\"Macedonia, FYR\"', 'MKD', '\"PPG, commercial banks (AMT, current US$)\"', 'DT.AMT.PCBK.CD', 47599336.7)\n('\"Macedonia, FYR\"', 'MKD', '\"PPG, commercial banks (DIS, current US$)\"', 'DT.DIS.PCBK.CD', 15758935.3)\n('\"Macedonia, FYR\"', 'MKD', '\"PPG, commercial banks (INT, current US$)\"', 'DT.INT.PCBK.CD', 13087380.5)\n('\"Macedonia, FYR\"', 'MKD', '\"PPG, multilateral (AMT, current US$)\"', 'DT.AMT.MLAT.CD', 185952867.2)\n('\"Macedonia, FYR\"', 'MKD', '\"PPG, multilateral (DIS, current US$)\"', 'DT.DIS.MLAT.CD', 180178623.9)\n('\"Macedonia, FYR\"', 'MKD', '\"PPG, multilateral (INT, current US$)\"', 'DT.INT.MLAT.CD', 15973228.6)\n('\"Macedonia, FYR\"', 'MKD', '\"PPG, official creditors (AMT, current US$)\"', 'DT.AMT.OFFT.CD', 256523417.5)\n('\"Macedonia, FYR\"', 'MKD', '\"PPG, official creditors (DIS, current US$)\"', 'DT.DIS.OFFT.CD', 281575202.3)\n('\"Macedonia, FYR\"', 'MKD', '\"PPG, official creditors (INT, current US$)\"', 'DT.INT.OFFT.CD', 30100847.2)\n('\"Macedonia, FYR\"', 'MKD', '\"PPG, other private creditors (AMT, current US$)\"', 'DT.AMT.PROP.CD', 66332.2)\n('\"Macedonia, FYR\"', 'MKD', '\"PPG, other private creditors (INT, current US$)\"', 'DT.INT.PROP.CD', 0.0)\n('\"Macedonia, FYR\"', 'MKD', '\"PPG, private creditors (AMT, current US$)\"', 'DT.AMT.PRVT.CD', 47665668.9)\n('\"Macedonia, FYR\"', 'MKD', '\"PPG, private creditors (DIS, current US$)\"', 'DT.DIS.PRVT.CD', 15758935.3)\n('\"Macedonia, FYR\"', 'MKD', '\"PPG, private creditors (INT, current US$)\"', 'DT.INT.PRVT.CD', 83064136.9)\n('\"Macedonia, FYR\"', 'MKD', '\"Principal repayments on external debt, long-term (AMT, current US$)\"', 'DT.AMT.DLXF.CD', 875846538.5)\n('\"Macedonia, FYR\"', 'MKD', '\"Principal repayments on external debt, private nonguaranteed (PNG) (AMT, current US$)\"', 'DT.AMT.DPNG.CD', 571657452.1)\n('Madagascar', 'MDG', '\"Disbursements on external debt, long-term (DIS, current US$)\"', 'DT.DIS.DLXF.CD', 446922027.4)\n('Madagascar', 'MDG', '\"Interest payments on external debt, long-term (INT, current US$)\"', 'DT.INT.DLXF.CD', 25558623.1)\n('Madagascar', 'MDG', '\"Interest payments on external debt, private nonguaranteed (PNG) (INT, current US$)\"', 'DT.INT.DPNG.CD', 120000.0)\n('Madagascar', 'MDG', '\"PPG, bilateral (AMT, current US$)\"', 'DT.AMT.BLAT.CD', 34102362.9)\n('Madagascar', 'MDG', '\"PPG, bilateral (DIS, current US$)\"', 'DT.DIS.BLAT.CD', 201529156.1)\n('Madagascar', 'MDG', '\"PPG, bilateral (INT, current US$)\"', 'DT.INT.BLAT.CD', 3611119.1)\n('Madagascar', 'MDG', '\"PPG, commercial banks (AMT, current US$)\"', 'DT.AMT.PCBK.CD', 11734526.6)\n('Madagascar', 'MDG', '\"PPG, commercial banks (INT, current US$)\"', 'DT.INT.PCBK.CD', 3043823.4)\n('Madagascar', 'MDG', '\"PPG, multilateral (AMT, current US$)\"', 'DT.AMT.MLAT.CD', 60669367.3)\n('Madagascar', 'MDG', '\"PPG, multilateral (DIS, current US$)\"', 'DT.DIS.MLAT.CD', 240358091.6)\n('Madagascar', 'MDG', '\"PPG, multilateral (INT, current US$)\"', 'DT.INT.MLAT.CD', 18687622.3)\n('Madagascar', 'MDG', '\"PPG, official creditors (AMT, current US$)\"', 'DT.AMT.OFFT.CD', 94771730.2)\n('Madagascar', 'MDG', '\"PPG, official creditors (DIS, current US$)\"', 'DT.DIS.OFFT.CD', 441887247.7)\n('Madagascar', 'MDG', '\"PPG, official creditors (INT, current US$)\"', 'DT.INT.OFFT.CD', 22298741.4)\n('Madagascar', 'MDG', '\"PPG, other private creditors (AMT, current US$)\"', 'DT.AMT.PROP.CD', 576061.8)\n('Madagascar', 'MDG', '\"PPG, other private creditors (DIS, current US$)\"', 'DT.DIS.PROP.CD', 5034779.7)\n('Madagascar', 'MDG', '\"PPG, other private creditors (INT, current US$)\"', 'DT.INT.PROP.CD', 96058.3)\n('Madagascar', 'MDG', '\"PPG, private creditors (AMT, current US$)\"', 'DT.AMT.PRVT.CD', 12310588.4)\n('Madagascar', 'MDG', '\"PPG, private creditors (DIS, current US$)\"', 'DT.DIS.PRVT.CD', 5034779.7)\n('Madagascar', 'MDG', '\"PPG, private creditors (INT, current US$)\"', 'DT.INT.PRVT.CD', 3139881.7)\n('Madagascar', 'MDG', '\"Principal repayments on external debt, long-term (AMT, current US$)\"', 'DT.AMT.DLXF.CD', 107783128.8)\n('Madagascar', 'MDG', '\"Principal repayments on external debt, private nonguaranteed (PNG) (AMT, current US$)\"', 'DT.AMT.DPNG.CD', 700810.2)\n('Malawi', 'MWI', '\"Disbursements on external debt, long-term (DIS, current US$)\"', 'DT.DIS.DLXF.CD', 132165820.5)\n('Malawi', 'MWI', '\"Interest payments on external debt, long-term (INT, current US$)\"', 'DT.INT.DLXF.CD', 19391773.5)\n('Malawi', 'MWI', '\"PPG, bilateral (AMT, current US$)\"', 'DT.AMT.BLAT.CD', 21762541.7)\n('Malawi', 'MWI', '\"PPG, bilateral (DIS, current US$)\"', 'DT.DIS.BLAT.CD', 26559943.3)\n('Malawi', 'MWI', '\"PPG, bilateral (INT, current US$)\"', 'DT.INT.BLAT.CD', 7850229.4)\n('Malawi', 'MWI', '\"PPG, multilateral (AMT, current US$)\"', 'DT.AMT.MLAT.CD', 35659831.4)\n('Malawi', 'MWI', '\"PPG, multilateral (DIS, current US$)\"', 'DT.DIS.MLAT.CD', 105605877.2)\n('Malawi', 'MWI', '\"PPG, multilateral (INT, current US$)\"', 'DT.INT.MLAT.CD', 11541544.1)\n('Malawi', 'MWI', '\"PPG, official creditors (AMT, current US$)\"', 'DT.AMT.OFFT.CD', 57422373.1)\n('Malawi', 'MWI', '\"PPG, official creditors (DIS, current US$)\"', 'DT.DIS.OFFT.CD', 132165820.5)\n('Malawi', 'MWI', '\"PPG, official creditors (INT, current US$)\"', 'DT.INT.OFFT.CD', 19391773.5)\n('Malawi', 'MWI', '\"Principal repayments on external debt, long-term (AMT, current US$)\"', 'DT.AMT.DLXF.CD', 57422373.1)\n('Maldives', 'MDV', '\"Disbursements on external debt, long-term (DIS, current US$)\"', 'DT.DIS.DLXF.CD', 324159093.3)\n('Maldives', 'MDV', '\"Interest payments on external debt, long-term (INT, current US$)\"', 'DT.INT.DLXF.CD', 50631355.7)\n('Maldives', 'MDV', '\"Interest payments on external debt, private nonguaranteed (PNG) (INT, current US$)\"', 'DT.INT.DPNG.CD', 8609000.0)\n('Maldives', 'MDV', '\"PPG, bilateral (AMT, current US$)\"', 'DT.AMT.BLAT.CD', 48054924.5)\n('Maldives', 'MDV', '\"PPG, bilateral (DIS, current US$)\"', 'DT.DIS.BLAT.CD', 171056385.2)\n('Maldives', 'MDV', '\"PPG, bilateral (INT, current US$)\"', 'DT.INT.BLAT.CD', 17789090.5)\n('Maldives', 'MDV', '\"PPG, bonds (AMT, current US$)\"', 'DT.AMT.PBND.CD', 0.0)\n('Maldives', 'MDV', '\"PPG, bonds (INT, current US$)\"', 'DT.INT.PBND.CD', 17500000.0)\n('Maldives', 'MDV', '\"PPG, commercial banks (AMT, current US$)\"', 'DT.AMT.PCBK.CD', 13237105.9)\n('Maldives', 'MDV', '\"PPG, commercial banks (INT, current US$)\"', 'DT.INT.PCBK.CD', 628108.3)\n('Maldives', 'MDV', '\"PPG, multilateral (AMT, current US$)\"', 'DT.AMT.MLAT.CD', 17896143.5)\n('Maldives', 'MDV', '\"PPG, multilateral (DIS, current US$)\"', 'DT.DIS.MLAT.CD', 58337708.1)\n('Maldives', 'MDV', '\"PPG, multilateral (INT, current US$)\"', 'DT.INT.MLAT.CD', 6105156.9)\n('Maldives', 'MDV', '\"PPG, official creditors (AMT, current US$)\"', 'DT.AMT.OFFT.CD', 65951068.0)\n('Maldives', 'MDV', '\"PPG, official creditors (DIS, current US$)\"', 'DT.DIS.OFFT.CD', 229394093.3)\n('Maldives', 'MDV', '\"PPG, official creditors (INT, current US$)\"', 'DT.INT.OFFT.CD', 23894247.4)\n('Maldives', 'MDV', '\"PPG, private creditors (AMT, current US$)\"', 'DT.AMT.PRVT.CD', 13237105.9)\n('Maldives', 'MDV', '\"PPG, private creditors (INT, current US$)\"', 'DT.INT.PRVT.CD', 18128108.3)\n('Maldives', 'MDV', '\"Principal repayments on external debt, long-term (AMT, current US$)\"', 'DT.AMT.DLXF.CD', 124022584.1)\n('Maldives', 'MDV', '\"Principal repayments on external debt, private nonguaranteed (PNG) (AMT, current US$)\"', 'DT.AMT.DPNG.CD', 44834410.2)\n('Mali', 'MLI', '\"Disbursements on external debt, long-term (DIS, current US$)\"', 'DT.DIS.DLXF.CD', 602617562.3)\n('Mali', 'MLI', '\"Interest payments on external debt, long-term (INT, current US$)\"', 'DT.INT.DLXF.CD', 49454533.0)\n('Mali', 'MLI', '\"PPG, bilateral (AMT, current US$)\"', 'DT.AMT.BLAT.CD', 80562273.4)\n('Mali', 'MLI', '\"PPG, bilateral (DIS, current US$)\"', 'DT.DIS.BLAT.CD', 174563540.6)\n('Mali', 'MLI', '\"PPG, bilateral (INT, current US$)\"', 'DT.INT.BLAT.CD', 14961901.1)\n('Mali', 'MLI', '\"PPG, commercial banks (AMT, current US$)\"', 'DT.AMT.PCBK.CD', 68120.2)\n('Mali', 'MLI', '\"PPG, commercial banks (INT, current US$)\"', 'DT.INT.PCBK.CD', 0.0)\n('Mali', 'MLI', '\"PPG, multilateral (AMT, current US$)\"', 'DT.AMT.MLAT.CD', 135472245.9)\n('Mali', 'MLI', '\"PPG, multilateral (DIS, current US$)\"', 'DT.DIS.MLAT.CD', 428054021.7)\n('Mali', 'MLI', '\"PPG, multilateral (INT, current US$)\"', 'DT.INT.MLAT.CD', 34492631.9)\n('Mali', 'MLI', '\"PPG, official creditors (AMT, current US$)\"', 'DT.AMT.OFFT.CD', 216034519.3)\n('Mali', 'MLI', '\"PPG, official creditors (DIS, current US$)\"', 'DT.DIS.OFFT.CD', 602617562.3)\n('Mali', 'MLI', '\"PPG, official creditors (INT, current US$)\"', 'DT.INT.OFFT.CD', 49454533.0)\n('Mali', 'MLI', '\"PPG, private creditors (AMT, current US$)\"', 'DT.AMT.PRVT.CD', 68120.2)\n('Mali', 'MLI', '\"PPG, private creditors (INT, current US$)\"', 'DT.INT.PRVT.CD', 0.0)\n('Mali', 'MLI', '\"Principal repayments on external debt, long-term (AMT, current US$)\"', 'DT.AMT.DLXF.CD', 216102639.5)\n('Mauritania', 'MRT', '\"Disbursements on external debt, long-term (DIS, current US$)\"', 'DT.DIS.DLXF.CD', 587173043.9)\n('Mauritania', 'MRT', '\"Interest payments on external debt, long-term (INT, current US$)\"', 'DT.INT.DLXF.CD', 92943151.5)\n('Mauritania', 'MRT', '\"PPG, bilateral (AMT, current US$)\"', 'DT.AMT.BLAT.CD', 197041185.1)\n('Mauritania', 'MRT', '\"PPG, bilateral (DIS, current US$)\"', 'DT.DIS.BLAT.CD', 262893890.2)\n('Mauritania', 'MRT', '\"PPG, bilateral (INT, current US$)\"', 'DT.INT.BLAT.CD', 39896318.9)\n('Mauritania', 'MRT', '\"PPG, multilateral (AMT, current US$)\"', 'DT.AMT.MLAT.CD', 184408220.2)\n('Mauritania', 'MRT', '\"PPG, multilateral (DIS, current US$)\"', 'DT.DIS.MLAT.CD', 324279153.7)\n('Mauritania', 'MRT', '\"PPG, multilateral (INT, current US$)\"', 'DT.INT.MLAT.CD', 53046832.6)\n('Mauritania', 'MRT', '\"PPG, official creditors (AMT, current US$)\"', 'DT.AMT.OFFT.CD', 381449405.3)\n('Mauritania', 'MRT', '\"PPG, official creditors (DIS, current US$)\"', 'DT.DIS.OFFT.CD', 587173043.9)\n('Mauritania', 'MRT', '\"PPG, official creditors (INT, current US$)\"', 'DT.INT.OFFT.CD', 92943151.5)\n('Mauritania', 'MRT', '\"Principal repayments on external debt, long-term (AMT, current US$)\"', 'DT.AMT.DLXF.CD', 381449405.3)\n('Mauritius', 'MUS', '\"Disbursements on external debt, long-term (DIS, current US$)\"', 'DT.DIS.DLXF.CD', 58239434.1)\n('Mauritius', 'MUS', '\"Interest payments on external debt, long-term (INT, current US$)\"', 'DT.INT.DLXF.CD', 439563477.8)\n('Mauritius', 'MUS', '\"Interest payments on external debt, private nonguaranteed (PNG) (INT, current US$)\"', 'DT.INT.DPNG.CD', 415091000.0)\n('Mauritius', 'MUS', '\"PPG, bilateral (AMT, current US$)\"', 'DT.AMT.BLAT.CD', 113174983.3)\n('Mauritius', 'MUS', '\"PPG, bilateral (DIS, current US$)\"', 'DT.DIS.BLAT.CD', 43276477.1)\n('Mauritius', 'MUS', '\"PPG, bilateral (INT, current US$)\"', 'DT.INT.BLAT.CD', 13702507.5)\n('Mauritius', 'MUS', '\"PPG, commercial banks (AMT, current US$)\"', 'DT.AMT.PCBK.CD', 5462211.9)\n('Mauritius', 'MUS', '\"PPG, commercial banks (INT, current US$)\"', 'DT.INT.PCBK.CD', 170300.6)\n('Mauritius', 'MUS', '\"PPG, multilateral (AMT, current US$)\"', 'DT.AMT.MLAT.CD', 74568335.5)\n('Mauritius', 'MUS', '\"PPG, multilateral (DIS, current US$)\"', 'DT.DIS.MLAT.CD', 14962957.0)\n('Mauritius', 'MUS', '\"PPG, multilateral (INT, current US$)\"', 'DT.INT.MLAT.CD', 10599669.7)\n('Mauritius', 'MUS', '\"PPG, official creditors (AMT, current US$)\"', 'DT.AMT.OFFT.CD', 187743318.8)\n('Mauritius', 'MUS', '\"PPG, official creditors (DIS, current US$)\"', 'DT.DIS.OFFT.CD', 58239434.1)\n('Mauritius', 'MUS', '\"PPG, official creditors (INT, current US$)\"', 'DT.INT.OFFT.CD', 24302177.2)\n('Mauritius', 'MUS', '\"PPG, private creditors (AMT, current US$)\"', 'DT.AMT.PRVT.CD', 5462211.9)\n('Mauritius', 'MUS', '\"PPG, private creditors (INT, current US$)\"', 'DT.INT.PRVT.CD', 170300.6)\n('Mauritius', 'MUS', '\"Principal repayments on external debt, long-term (AMT, current US$)\"', 'DT.AMT.DLXF.CD', 1757803962.2)\n('Mauritius', 'MUS', '\"Principal repayments on external debt, private nonguaranteed (PNG) (AMT, current US$)\"', 'DT.AMT.DPNG.CD', 1564598431.5)\n('Mexico', 'MEX', '\"Disbursements on external debt, long-term (DIS, current US$)\"', 'DT.DIS.DLXF.CD', 647628548.1)\n('Mexico', 'MEX', '\"Interest payments on external debt, long-term (INT, current US$)\"', 'DT.INT.DLXF.CD', 19267966623.4)\n('Mexico', 'MEX', '\"Interest payments on external debt, private nonguaranteed (PNG) (INT, current US$)\"', 'DT.INT.DPNG.CD', 5466172888.2)\n('Mexico', 'MEX', '\"PPG, bilateral (AMT, current US$)\"', 'DT.AMT.BLAT.CD', 382457219.1)\n('Mexico', 'MEX', '\"PPG, bilateral (DIS, current US$)\"', 'DT.DIS.BLAT.CD', 10959800.0)\n('Mexico', 'MEX', '\"PPG, bilateral (INT, current US$)\"', 'DT.INT.BLAT.CD', 59839853.4)\n('Mexico', 'MEX', '\"PPG, bonds (AMT, current US$)\"', 'DT.AMT.PBND.CD', 17109552312.5)\n('Mexico', 'MEX', '\"PPG, bonds (INT, current US$)\"', 'DT.INT.PBND.CD', 12310714652.8)\n('Mexico', 'MEX', '\"PPG, commercial banks (AMT, current US$)\"', 'DT.AMT.PCBK.CD', 1462493107.5)\n('Mexico', 'MEX', '\"PPG, commercial banks (INT, current US$)\"', 'DT.INT.PCBK.CD', 751107387.1)\n('Mexico', 'MEX', '\"PPG, multilateral (AMT, current US$)\"', 'DT.AMT.MLAT.CD', 864181883.5)\n('Mexico', 'MEX', '\"PPG, multilateral (DIS, current US$)\"', 'DT.DIS.MLAT.CD', 636668748.1)\n('Mexico', 'MEX', '\"PPG, multilateral (INT, current US$)\"', 'DT.INT.MLAT.CD', 610319408.9)\n('Mexico', 'MEX', '\"PPG, official creditors (AMT, current US$)\"', 'DT.AMT.OFFT.CD', 1246639102.6)\n('Mexico', 'MEX', '\"PPG, official creditors (DIS, current US$)\"', 'DT.DIS.OFFT.CD', 647628548.1)\n('Mexico', 'MEX', '\"PPG, official creditors (INT, current US$)\"', 'DT.INT.OFFT.CD', 670159262.3)\n('Mexico', 'MEX', '\"PPG, other private creditors (AMT, current US$)\"', 'DT.AMT.PROP.CD', 60481214.4)\n('Mexico', 'MEX', '\"PPG, other private creditors (INT, current US$)\"', 'DT.INT.PROP.CD', 69812433.0)\n('Mexico', 'MEX', '\"PPG, private creditors (AMT, current US$)\"', 'DT.AMT.PRVT.CD', 18632526634.4)\n('Tonga', 'TON', '\"PPG, multilateral (INT, current US$)\"', 'DT.INT.MLAT.CD', 944215.2)\n('Mexico', 'MEX', '\"PPG, private creditors (INT, current US$)\"', 'DT.INT.PRVT.CD', 13131634472.9)\n('Mexico', 'MEX', '\"Principal repayments on external debt, long-term (AMT, current US$)\"', 'DT.AMT.DLXF.CD', 25218503927.0)\n('Mexico', 'MEX', '\"Principal repayments on external debt, private nonguaranteed (PNG) (AMT, current US$)\"', 'DT.AMT.DPNG.CD', 5339338190.0)\n('Mongolia', 'MNG', '\"PPG, official creditors (AMT, current US$)\"', 'DT.AMT.OFFT.CD', 128096689.4)\n('Moldova', 'MDA', '\"Disbursements on external debt, long-term (DIS, current US$)\"', 'DT.DIS.DLXF.CD', 442210632.8)\n('Moldova', 'MDA', '\"Interest payments on external debt, long-term (INT, current US$)\"', 'DT.INT.DLXF.CD', 130618875.2)\n('Moldova', 'MDA', '\"Interest payments on external debt, private nonguaranteed (PNG) (INT, current US$)\"', 'DT.INT.DPNG.CD', 107393000.0)\n('Moldova', 'MDA', '\"PPG, bilateral (AMT, current US$)\"', 'DT.AMT.BLAT.CD', 52456210.6)\n('Moldova', 'MDA', '\"PPG, bilateral (DIS, current US$)\"', 'DT.DIS.BLAT.CD', 31959827.1)\n('Moldova', 'MDA', '\"PPG, bilateral (INT, current US$)\"', 'DT.INT.BLAT.CD', 3292727.3)\n('Moldova', 'MDA', '\"PPG, commercial banks (AMT, current US$)\"', 'DT.AMT.PCBK.CD', 551019.7)\n('Moldova', 'MDA', '\"PPG, commercial banks (INT, current US$)\"', 'DT.INT.PCBK.CD', 55167.8)\n('Moldova', 'MDA', '\"PPG, multilateral (AMT, current US$)\"', 'DT.AMT.MLAT.CD', 135842865.5)\n('Moldova', 'MDA', '\"PPG, multilateral (DIS, current US$)\"', 'DT.DIS.MLAT.CD', 410250805.7)\n('Moldova', 'MDA', '\"PPG, multilateral (INT, current US$)\"', 'DT.INT.MLAT.CD', 19877980.1)\n('Moldova', 'MDA', '\"PPG, official creditors (AMT, current US$)\"', 'DT.AMT.OFFT.CD', 188299076.1)\n('Moldova', 'MDA', '\"PPG, official creditors (DIS, current US$)\"', 'DT.DIS.OFFT.CD', 442210632.8)\n('Moldova', 'MDA', '\"PPG, official creditors (INT, current US$)\"', 'DT.INT.OFFT.CD', 23170707.4)\n('Moldova', 'MDA', '\"PPG, private creditors (AMT, current US$)\"', 'DT.AMT.PRVT.CD', 551019.7)\n('Moldova', 'MDA', '\"PPG, private creditors (INT, current US$)\"', 'DT.INT.PRVT.CD', 55167.8)\n('Moldova', 'MDA', '\"Principal repayments on external debt, long-term (AMT, current US$)\"', 'DT.AMT.DLXF.CD', 769232867.0)\n('Moldova', 'MDA', '\"Principal repayments on external debt, private nonguaranteed (PNG) (AMT, current US$)\"', 'DT.AMT.DPNG.CD', 580382771.2)\n('Mongolia', 'MNG', '\"Disbursements on external debt, long-term (DIS, current US$)\"', 'DT.DIS.DLXF.CD', 337260763.6)\n('Mongolia', 'MNG', '\"Interest payments on external debt, long-term (INT, current US$)\"', 'DT.INT.DLXF.CD', 877048982.5)\n('Mongolia', 'MNG', '\"Interest payments on external debt, private nonguaranteed (PNG) (INT, current US$)\"', 'DT.INT.DPNG.CD', 596718000.0)\n('Mongolia', 'MNG', '\"PPG, bilateral (AMT, current US$)\"', 'DT.AMT.BLAT.CD', 52159543.5)\n('Mongolia', 'MNG', '\"PPG, bilateral (DIS, current US$)\"', 'DT.DIS.BLAT.CD', 122040716.9)\n('Mongolia', 'MNG', '\"PPG, bilateral (INT, current US$)\"', 'DT.INT.BLAT.CD', 23580386.5)\n('Mongolia', 'MNG', '\"PPG, bonds (AMT, current US$)\"', 'DT.AMT.PBND.CD', 0.0)\n('Mongolia', 'MNG', '\"PPG, bonds (INT, current US$)\"', 'DT.INT.PBND.CD', 203124000.0)\n('Mongolia', 'MNG', '\"PPG, commercial banks (AMT, current US$)\"', 'DT.AMT.PCBK.CD', 80000000.0)\n('Mongolia', 'MNG', '\"PPG, commercial banks (DIS, current US$)\"', 'DT.DIS.PCBK.CD', 1259265.0)\n('Mongolia', 'MNG', '\"PPG, commercial banks (INT, current US$)\"', 'DT.INT.PCBK.CD', 17811674.5)\n('Mongolia', 'MNG', '\"PPG, multilateral (AMT, current US$)\"', 'DT.AMT.MLAT.CD', 75937145.9)\n('Mongolia', 'MNG', '\"PPG, multilateral (DIS, current US$)\"', 'DT.DIS.MLAT.CD', 213960781.7)\n('Mongolia', 'MNG', '\"PPG, multilateral (INT, current US$)\"', 'DT.INT.MLAT.CD', 35814921.5)\n('Mongolia', 'MNG', '\"PPG, official creditors (DIS, current US$)\"', 'DT.DIS.OFFT.CD', 336001498.6)\n('Mongolia', 'MNG', '\"PPG, official creditors (INT, current US$)\"', 'DT.INT.OFFT.CD', 59395308.0)\n('Mongolia', 'MNG', '\"PPG, private creditors (AMT, current US$)\"', 'DT.AMT.PRVT.CD', 80000000.0)\n('Mongolia', 'MNG', '\"PPG, private creditors (DIS, current US$)\"', 'DT.DIS.PRVT.CD', 1259265.0)\n('Mongolia', 'MNG', '\"PPG, private creditors (INT, current US$)\"', 'DT.INT.PRVT.CD', 220935674.5)\n('Mongolia', 'MNG', '\"Principal repayments on external debt, long-term (AMT, current US$)\"', 'DT.AMT.DLXF.CD', 3296470965.6)\n('Mongolia', 'MNG', '\"Principal repayments on external debt, private nonguaranteed (PNG) (AMT, current US$)\"', 'DT.AMT.DPNG.CD', 3088374276.2)\n('Montenegro', 'MNE', '\"Disbursements on external debt, long-term (DIS, current US$)\"', 'DT.DIS.DLXF.CD', 251048938.5)\n('Montenegro', 'MNE', '\"Interest payments on external debt, long-term (INT, current US$)\"', 'DT.INT.DLXF.CD', 104386053.0)\n('Montenegro', 'MNE', '\"Interest payments on external debt, private nonguaranteed (PNG) (INT, current US$)\"', 'DT.INT.DPNG.CD', 3780193.6)\n('Montenegro', 'MNE', '\"PPG, bilateral (AMT, current US$)\"', 'DT.AMT.BLAT.CD', 127450152.9)\n('Montenegro', 'MNE', '\"PPG, bilateral (DIS, current US$)\"', 'DT.DIS.BLAT.CD', 159653202.4)\n('Montenegro', 'MNE', '\"PPG, bilateral (INT, current US$)\"', 'DT.INT.BLAT.CD', 20505157.3)\n('Montenegro', 'MNE', '\"PPG, bonds (AMT, current US$)\"', 'DT.AMT.PBND.CD', 335804000.0)\n('Montenegro', 'MNE', '\"PPG, bonds (INT, current US$)\"', 'DT.INT.PBND.CD', 61972628.2)\n('Montenegro', 'MNE', '\"PPG, commercial banks (AMT, current US$)\"', 'DT.AMT.PCBK.CD', 81065238.7)\n('Montenegro', 'MNE', '\"PPG, commercial banks (INT, current US$)\"', 'DT.INT.PCBK.CD', 7085884.0)\n('Montenegro', 'MNE', '\"PPG, multilateral (AMT, current US$)\"', 'DT.AMT.MLAT.CD', 77948064.79999998)\n('Montenegro', 'MNE', '\"PPG, multilateral (DIS, current US$)\"', 'DT.DIS.MLAT.CD', 91395736.1)\n('Montenegro', 'MNE', '\"PPG, multilateral (INT, current US$)\"', 'DT.INT.MLAT.CD', 10777144.6)\n('Montenegro', 'MNE', '\"PPG, official creditors (AMT, current US$)\"', 'DT.AMT.OFFT.CD', 205398217.7)\n('Montenegro', 'MNE', '\"PPG, official creditors (DIS, current US$)\"', 'DT.DIS.OFFT.CD', 251048938.5)\n('Montenegro', 'MNE', '\"PPG, official creditors (INT, current US$)\"', 'DT.INT.OFFT.CD', 31282301.9)\n('Montenegro', 'MNE', '\"PPG, other private creditors (AMT, current US$)\"', 'DT.AMT.PROP.CD', 6288038.9)\n('Montenegro', 'MNE', '\"PPG, other private creditors (INT, current US$)\"', 'DT.INT.PROP.CD', 265045.3)\n('Montenegro', 'MNE', '\"PPG, private creditors (AMT, current US$)\"', 'DT.AMT.PRVT.CD', 423157277.6)\n('Montenegro', 'MNE', '\"PPG, private creditors (INT, current US$)\"', 'DT.INT.PRVT.CD', 69323557.5)\n('Montenegro', 'MNE', '\"Principal repayments on external debt, long-term (AMT, current US$)\"', 'DT.AMT.DLXF.CD', 650720957.9)\n('Montenegro', 'MNE', '\"Principal repayments on external debt, private nonguaranteed (PNG) (AMT, current US$)\"', 'DT.AMT.DPNG.CD', 22165462.6)\n('Morocco', 'MAR', '\"Disbursements on external debt, long-term (DIS, current US$)\"', 'DT.DIS.DLXF.CD', 1971794584.4)\n('Morocco', 'MAR', '\"Interest payments on external debt, long-term (INT, current US$)\"', 'DT.INT.DLXF.CD', 988479361.5)\n('Morocco', 'MAR', '\"Interest payments on external debt, private nonguaranteed (PNG) (INT, current US$)\"', 'DT.INT.DPNG.CD', 153363000.0)\n('Morocco', 'MAR', '\"PPG, bilateral (AMT, current US$)\"', 'DT.AMT.BLAT.CD', 742287180.6)\n('Morocco', 'MAR', '\"PPG, bilateral (DIS, current US$)\"', 'DT.DIS.BLAT.CD', 381225311.4)\n('Morocco', 'MAR', '\"PPG, bilateral (INT, current US$)\"', 'DT.INT.BLAT.CD', 147741097.6)\n('Morocco', 'MAR', '\"PPG, bonds (AMT, current US$)\"', 'DT.AMT.PBND.CD', 0.0)\n('Morocco', 'MAR', '\"PPG, bonds (INT, current US$)\"', 'DT.INT.PBND.CD', 270530500.0)\n('Morocco', 'MAR', '\"PPG, commercial banks (AMT, current US$)\"', 'DT.AMT.PCBK.CD', 323617953.1)\n('Morocco', 'MAR', '\"PPG, commercial banks (DIS, current US$)\"', 'DT.DIS.PCBK.CD', 78436344.79999998)\n('Morocco', 'MAR', '\"PPG, commercial banks (INT, current US$)\"', 'DT.INT.PCBK.CD', 115518403.2)\n('Morocco', 'MAR', '\"PPG, multilateral (AMT, current US$)\"', 'DT.AMT.MLAT.CD', 1381649282.3)\n('Morocco', 'MAR', '\"PPG, multilateral (DIS, current US$)\"', 'DT.DIS.MLAT.CD', 1512132928.2)\n('Morocco', 'MAR', '\"PPG, multilateral (INT, current US$)\"', 'DT.INT.MLAT.CD', 296913749.4)\n('Morocco', 'MAR', '\"PPG, official creditors (AMT, current US$)\"', 'DT.AMT.OFFT.CD', 2123936462.9)\n('Morocco', 'MAR', '\"PPG, official creditors (DIS, current US$)\"', 'DT.DIS.OFFT.CD', 1893358239.6)\n('Morocco', 'MAR', '\"PPG, official creditors (INT, current US$)\"', 'DT.INT.OFFT.CD', 444654847.0)\n('Morocco', 'MAR', '\"PPG, other private creditors (AMT, current US$)\"', 'DT.AMT.PROP.CD', 10291875.1)\n('Morocco', 'MAR', '\"PPG, other private creditors (INT, current US$)\"', 'DT.INT.PROP.CD', 4412611.3)\n('Morocco', 'MAR', '\"PPG, private creditors (AMT, current US$)\"', 'DT.AMT.PRVT.CD', 333909828.2)\n('Morocco', 'MAR', '\"PPG, private creditors (DIS, current US$)\"', 'DT.DIS.PRVT.CD', 78436344.79999998)\n('Morocco', 'MAR', '\"PPG, private creditors (INT, current US$)\"', 'DT.INT.PRVT.CD', 390461514.5)\n('Morocco', 'MAR', '\"Principal repayments on external debt, long-term (AMT, current US$)\"', 'DT.AMT.DLXF.CD', 5153430846.8)\n('Morocco', 'MAR', '\"Principal repayments on external debt, private nonguaranteed (PNG) (AMT, current US$)\"', 'DT.AMT.DPNG.CD', 2695584555.7)\n('Mozambique', 'MOZ', '\"Disbursements on external debt, long-term (DIS, current US$)\"', 'DT.DIS.DLXF.CD', 749659443.7)\n('Mozambique', 'MOZ', '\"Interest payments on external debt, long-term (INT, current US$)\"', 'DT.INT.DLXF.CD', 184653722.7)\n('Mozambique', 'MOZ', '\"PPG, bilateral (AMT, current US$)\"', 'DT.AMT.BLAT.CD', 307444585.4)\n('Mozambique', 'MOZ', '\"PPG, bilateral (DIS, current US$)\"', 'DT.DIS.BLAT.CD', 428319700.7)\n('Mozambique', 'MOZ', '\"PPG, bilateral (INT, current US$)\"', 'DT.INT.BLAT.CD', 89226721.5)\n('Mozambique', 'MOZ', '\"PPG, bonds (AMT, current US$)\"', 'DT.AMT.PBND.CD', 0.0)\n('Mozambique', 'MOZ', '\"PPG, bonds (INT, current US$)\"', 'DT.INT.PBND.CD', 53592000.0)\n('Mozambique', 'MOZ', '\"PPG, commercial banks (AMT, current US$)\"', 'DT.AMT.PCBK.CD', 200988925.7)\n('Mozambique', 'MOZ', '\"PPG, commercial banks (DIS, current US$)\"', 'DT.DIS.PCBK.CD', 46219486.9)\n('Mozambique', 'MOZ', '\"PPG, commercial banks (INT, current US$)\"', 'DT.INT.PCBK.CD', 7893817.2)\n('Mozambique', 'MOZ', '\"PPG, multilateral (AMT, current US$)\"', 'DT.AMT.MLAT.CD', 91225626.1)\n('Mozambique', 'MOZ', '\"PPG, multilateral (DIS, current US$)\"', 'DT.DIS.MLAT.CD', 275120256.1)\n('Mozambique', 'MOZ', '\"PPG, multilateral (INT, current US$)\"', 'DT.INT.MLAT.CD', 33911201.5)\n('Mozambique', 'MOZ', '\"PPG, official creditors (AMT, current US$)\"', 'DT.AMT.OFFT.CD', 398670211.5)\n('Mozambique', 'MOZ', '\"PPG, official creditors (DIS, current US$)\"', 'DT.DIS.OFFT.CD', 703439956.8)\n('Mozambique', 'MOZ', '\"PPG, official creditors (INT, current US$)\"', 'DT.INT.OFFT.CD', 123137923.0)\n('Mozambique', 'MOZ', '\"PPG, other private creditors (AMT, current US$)\"', 'DT.AMT.PROP.CD', 2270758.9)\n('Mozambique', 'MOZ', '\"PPG, other private creditors (INT, current US$)\"', 'DT.INT.PROP.CD', 29982.5)\n('Mozambique', 'MOZ', '\"PPG, private creditors (AMT, current US$)\"', 'DT.AMT.PRVT.CD', 203259684.6)\n('Mozambique', 'MOZ', '\"PPG, private creditors (DIS, current US$)\"', 'DT.DIS.PRVT.CD', 46219486.9)\n('Mozambique', 'MOZ', '\"PPG, private creditors (INT, current US$)\"', 'DT.INT.PRVT.CD', 61515799.7)\n('Mozambique', 'MOZ', '\"Principal repayments on external debt, long-term (AMT, current US$)\"', 'DT.AMT.DLXF.CD', 601929896.1)\n('Myanmar', 'MMR', '\"Disbursements on external debt, long-term (DIS, current US$)\"', 'DT.DIS.DLXF.CD', 1246429044.3)\n('Myanmar', 'MMR', '\"Interest payments on external debt, long-term (INT, current US$)\"', 'DT.INT.DLXF.CD', 240557887.7)\n('Myanmar', 'MMR', '\"Interest payments on external debt, private nonguaranteed (PNG) (INT, current US$)\"', 'DT.INT.DPNG.CD', 86000.0)\n('Myanmar', 'MMR', '\"PPG, bilateral (AMT, current US$)\"', 'DT.AMT.BLAT.CD', 519713545.7)\n('Myanmar', 'MMR', '\"PPG, bilateral (DIS, current US$)\"', 'DT.DIS.BLAT.CD', 704626596.3)\n('Myanmar', 'MMR', '\"PPG, bilateral (INT, current US$)\"', 'DT.INT.BLAT.CD', 217742156.0)\n('Myanmar', 'MMR', '\"PPG, multilateral (AMT, current US$)\"', 'DT.AMT.MLAT.CD', 30569845.2)\n('Myanmar', 'MMR', '\"PPG, multilateral (DIS, current US$)\"', 'DT.DIS.MLAT.CD', 541802448.0)\n('Myanmar', 'MMR', '\"PPG, multilateral (INT, current US$)\"', 'DT.INT.MLAT.CD', 21203731.7)\n('Myanmar', 'MMR', '\"PPG, official creditors (AMT, current US$)\"', 'DT.AMT.OFFT.CD', 550283390.9)\n('Myanmar', 'MMR', '\"PPG, official creditors (DIS, current US$)\"', 'DT.DIS.OFFT.CD', 1246429044.3)\n('Myanmar', 'MMR', '\"PPG, official creditors (INT, current US$)\"', 'DT.INT.OFFT.CD', 238945887.7)\n('Myanmar', 'MMR', '\"PPG, other private creditors (AMT, current US$)\"', 'DT.AMT.PROP.CD', 0.0)\n('Myanmar', 'MMR', '\"PPG, other private creditors (INT, current US$)\"', 'DT.INT.PROP.CD', 1526000.0)\n('Myanmar', 'MMR', '\"PPG, private creditors (AMT, current US$)\"', 'DT.AMT.PRVT.CD', 0.0)\n('Myanmar', 'MMR', '\"PPG, private creditors (INT, current US$)\"', 'DT.INT.PRVT.CD', 1526000.0)\n('Myanmar', 'MMR', '\"Principal repayments on external debt, long-term (AMT, current US$)\"', 'DT.AMT.DLXF.CD', 559727724.2)\n('Myanmar', 'MMR', '\"Principal repayments on external debt, private nonguaranteed (PNG) (AMT, current US$)\"', 'DT.AMT.DPNG.CD', 9444333.3)\n('Nepal', 'NPL', '\"Disbursements on external debt, long-term (DIS, current US$)\"', 'DT.DIS.DLXF.CD', 854955604.0)\n('Nepal', 'NPL', '\"Interest payments on external debt, long-term (INT, current US$)\"', 'DT.INT.DLXF.CD', 63814504.0)\n('Nepal', 'NPL', '\"Interest payments on external debt, private nonguaranteed (PNG) (INT, current US$)\"', 'DT.INT.DPNG.CD', 3143000.0)\n('Nepal', 'NPL', '\"PPG, bilateral (AMT, current US$)\"', 'DT.AMT.BLAT.CD', 48512381.5)\n('Nepal', 'NPL', '\"PPG, bilateral (DIS, current US$)\"', 'DT.DIS.BLAT.CD', 211256468.1)\n('Nepal', 'NPL', '\"PPG, bilateral (INT, current US$)\"', 'DT.INT.BLAT.CD', 8120651.8)\n('Nepal', 'NPL', '\"PPG, multilateral (AMT, current US$)\"', 'DT.AMT.MLAT.CD', 163747512.9)\n('Nepal', 'NPL', '\"PPG, multilateral (DIS, current US$)\"', 'DT.DIS.MLAT.CD', 643699135.9)\n('Nepal', 'NPL', '\"PPG, multilateral (INT, current US$)\"', 'DT.INT.MLAT.CD', 52550852.2)\n('Nepal', 'NPL', '\"PPG, official creditors (AMT, current US$)\"', 'DT.AMT.OFFT.CD', 212259894.4)\n('Nepal', 'NPL', '\"PPG, official creditors (DIS, current US$)\"', 'DT.DIS.OFFT.CD', 854955604.0)\n('Nepal', 'NPL', '\"PPG, official creditors (INT, current US$)\"', 'DT.INT.OFFT.CD', 60671504.0)\n('Nepal', 'NPL', '\"Principal repayments on external debt, long-term (AMT, current US$)\"', 'DT.AMT.DLXF.CD', 220142894.4)\n('Nepal', 'NPL', '\"Principal repayments on external debt, private nonguaranteed (PNG) (AMT, current US$)\"', 'DT.AMT.DPNG.CD', 7883000.0)\n('Nicaragua', 'NIC', '\"Disbursements on external debt, long-term (DIS, current US$)\"', 'DT.DIS.DLXF.CD', 710353661.5)\n('Nicaragua', 'NIC', '\"Interest payments on external debt, long-term (INT, current US$)\"', 'DT.INT.DLXF.CD', 281975237.4)\n('Nicaragua', 'NIC', '\"Interest payments on external debt, private nonguaranteed (PNG) (INT, current US$)\"', 'DT.INT.DPNG.CD', 165274000.0)\n('Nicaragua', 'NIC', '\"PPG, bilateral (AMT, current US$)\"', 'DT.AMT.BLAT.CD', 33414678.5)\n('Nicaragua', 'NIC', '\"PPG, bilateral (DIS, current US$)\"', 'DT.DIS.BLAT.CD', 91410630.2)\n('Nicaragua', 'NIC', '\"PPG, bilateral (INT, current US$)\"', 'DT.INT.BLAT.CD', 9117269.5)\n('Nicaragua', 'NIC', '\"PPG, commercial banks (AMT, current US$)\"', 'DT.AMT.PCBK.CD', 105260.3)\n('Nicaragua', 'NIC', '\"PPG, commercial banks (DIS, current US$)\"', 'DT.DIS.PCBK.CD', 2335037.1)\n('Nicaragua', 'NIC', '\"PPG, commercial banks (INT, current US$)\"', 'DT.INT.PCBK.CD', 69559.4)\n('Nicaragua', 'NIC', '\"PPG, multilateral (AMT, current US$)\"', 'DT.AMT.MLAT.CD', 181115898.0)\n('Nicaragua', 'NIC', '\"PPG, multilateral (DIS, current US$)\"', 'DT.DIS.MLAT.CD', 612866514.2)\n('Nicaragua', 'NIC', '\"PPG, multilateral (INT, current US$)\"', 'DT.INT.MLAT.CD', 107100470.6)\n('Nicaragua', 'NIC', '\"PPG, official creditors (AMT, current US$)\"', 'DT.AMT.OFFT.CD', 214530576.5)\n('Nicaragua', 'NIC', '\"PPG, official creditors (DIS, current US$)\"', 'DT.DIS.OFFT.CD', 704277144.4)\n('Nicaragua', 'NIC', '\"PPG, official creditors (INT, current US$)\"', 'DT.INT.OFFT.CD', 116217740.1)\n('Nicaragua', 'NIC', '\"PPG, other private creditors (AMT, current US$)\"', 'DT.AMT.PROP.CD', 1739460.0)\n('Nicaragua', 'NIC', '\"PPG, other private creditors (DIS, current US$)\"', 'DT.DIS.PROP.CD', 3741480.0)\n('Nicaragua', 'NIC', '\"PPG, other private creditors (INT, current US$)\"', 'DT.INT.PROP.CD', 413937.9)\n('Nicaragua', 'NIC', '\"PPG, private creditors (AMT, current US$)\"', 'DT.AMT.PRVT.CD', 1844720.3)\n('Nicaragua', 'NIC', '\"PPG, private creditors (DIS, current US$)\"', 'DT.DIS.PRVT.CD', 6076517.1)\n('Nicaragua', 'NIC', '\"PPG, private creditors (INT, current US$)\"', 'DT.INT.PRVT.CD', 483497.3)\n('Nicaragua', 'NIC', '\"Principal repayments on external debt, long-term (AMT, current US$)\"', 'DT.AMT.DLXF.CD', 1185575296.8)\n('Nicaragua', 'NIC', '\"Principal repayments on external debt, private nonguaranteed (PNG) (AMT, current US$)\"', 'DT.AMT.DPNG.CD', 969200000.0)\n('Niger', 'NER', '\"Disbursements on external debt, long-term (DIS, current US$)\"', 'DT.DIS.DLXF.CD', 613393210.2)\n('Niger', 'NER', '\"Interest payments on external debt, long-term (INT, current US$)\"', 'DT.INT.DLXF.CD', 58798606.4)\n('Niger', 'NER', '\"PPG, bilateral (AMT, current US$)\"', 'DT.AMT.BLAT.CD', 38815599.9)\n('Niger', 'NER', '\"PPG, bilateral (DIS, current US$)\"', 'DT.DIS.BLAT.CD', 150675402.1)\n('Niger', 'NER', '\"PPG, bilateral (INT, current US$)\"', 'DT.INT.BLAT.CD', 20553332.6)\n('Niger', 'NER', '\"PPG, multilateral (AMT, current US$)\"', 'DT.AMT.MLAT.CD', 115132364.5)\n('Niger', 'NER', '\"PPG, multilateral (DIS, current US$)\"', 'DT.DIS.MLAT.CD', 462717808.1)\n('Niger', 'NER', '\"PPG, multilateral (INT, current US$)\"', 'DT.INT.MLAT.CD', 38245273.8)\n('Niger', 'NER', '\"PPG, official creditors (AMT, current US$)\"', 'DT.AMT.OFFT.CD', 153947964.4)\n('Niger', 'NER', '\"PPG, official creditors (DIS, current US$)\"', 'DT.DIS.OFFT.CD', 613393210.2)\n('Niger', 'NER', '\"PPG, official creditors (INT, current US$)\"', 'DT.INT.OFFT.CD', 58798606.4)\n('Niger', 'NER', '\"Principal repayments on external debt, long-term (AMT, current US$)\"', 'DT.AMT.DLXF.CD', 153947964.4)\n('Nigeria', 'NGA', '\"Disbursements on external debt, long-term (DIS, current US$)\"', 'DT.DIS.DLXF.CD', 1642510515.7)\n('Nigeria', 'NGA', '\"Interest payments on external debt, long-term (INT, current US$)\"', 'DT.INT.DLXF.CD', 1174953817.6)\n('Nigeria', 'NGA', '\"Interest payments on external debt, private nonguaranteed (PNG) (INT, current US$)\"', 'DT.INT.DPNG.CD', 601884000.0)\n('Nigeria', 'NGA', '\"PPG, bilateral (AMT, current US$)\"', 'DT.AMT.BLAT.CD', 86761615.4)\n('Nigeria', 'NGA', '\"PPG, bilateral (DIS, current US$)\"', 'DT.DIS.BLAT.CD', 197807330.6)\n('Nigeria', 'NGA', '\"PPG, bilateral (INT, current US$)\"', 'DT.INT.BLAT.CD', 69169718.3)\n('Nigeria', 'NGA', '\"PPG, bonds (AMT, current US$)\"', 'DT.AMT.PBND.CD', 0.0)\n('Nigeria', 'NGA', '\"PPG, bonds (INT, current US$)\"', 'DT.INT.PBND.CD', 380622000.0)\n('Nigeria', 'NGA', '\"PPG, multilateral (AMT, current US$)\"', 'DT.AMT.MLAT.CD', 297246686.6)\n('Nigeria', 'NGA', '\"PPG, multilateral (DIS, current US$)\"', 'DT.DIS.MLAT.CD', 1444703185.1)\n('Nigeria', 'NGA', '\"PPG, multilateral (INT, current US$)\"', 'DT.INT.MLAT.CD', 123278099.3)\n('Nigeria', 'NGA', '\"PPG, official creditors (AMT, current US$)\"', 'DT.AMT.OFFT.CD', 384008302.0)\n('Nigeria', 'NGA', '\"PPG, official creditors (DIS, current US$)\"', 'DT.DIS.OFFT.CD', 1642510515.7)\n('Nigeria', 'NGA', '\"PPG, official creditors (INT, current US$)\"', 'DT.INT.OFFT.CD', 192447817.6)\n('Nigeria', 'NGA', '\"PPG, private creditors (AMT, current US$)\"', 'DT.AMT.PRVT.CD', 0.0)\n('Nigeria', 'NGA', '\"PPG, private creditors (INT, current US$)\"', 'DT.INT.PRVT.CD', 380622000.0)\n('Nigeria', 'NGA', '\"Principal repayments on external debt, long-term (AMT, current US$)\"', 'DT.AMT.DLXF.CD', 2957693969.5)\n('Nigeria', 'NGA', '\"Principal repayments on external debt, private nonguaranteed (PNG) (AMT, current US$)\"', 'DT.AMT.DPNG.CD', 2573685667.5)\n('Pakistan', 'PAK', '\"Disbursements on external debt, long-term (DIS, current US$)\"', 'DT.DIS.DLXF.CD', 5301166769.9)\n('Pakistan', 'PAK', '\"Interest payments on external debt, long-term (INT, current US$)\"', 'DT.INT.DLXF.CD', 2018025408.3)\n('Pakistan', 'PAK', '\"Interest payments on external debt, private nonguaranteed (PNG) (INT, current US$)\"', 'DT.INT.DPNG.CD', 266062000.0)\n('Pakistan', 'PAK', '\"PPG, bilateral (AMT, current US$)\"', 'DT.AMT.BLAT.CD', 2175483884.5)\n('Pakistan', 'PAK', '\"PPG, bilateral (DIS, current US$)\"', 'DT.DIS.BLAT.CD', 3281555124.0)\n('Pakistan', 'PAK', '\"PPG, bilateral (INT, current US$)\"', 'DT.INT.BLAT.CD', 719897921.2)\n('Pakistan', 'PAK', '\"PPG, bonds (AMT, current US$)\"', 'DT.AMT.PBND.CD', 2000000000.0)\n('Pakistan', 'PAK', '\"PPG, bonds (INT, current US$)\"', 'DT.INT.PBND.CD', 466998000.0)\n('Pakistan', 'PAK', '\"PPG, commercial banks (AMT, current US$)\"', 'DT.AMT.PCBK.CD', 968637742.9)\n('Pakistan', 'PAK', '\"PPG, commercial banks (DIS, current US$)\"', 'DT.DIS.PCBK.CD', 46666666.7)\n('Pakistan', 'PAK', '\"PPG, commercial banks (INT, current US$)\"', 'DT.INT.PCBK.CD', 89037000.0)\n('Pakistan', 'PAK', '\"PPG, multilateral (AMT, current US$)\"', 'DT.AMT.MLAT.CD', 1578651453.9)\n('Pakistan', 'PAK', '\"PPG, multilateral (DIS, current US$)\"', 'DT.DIS.MLAT.CD', 1972944979.2)\n('Pakistan', 'PAK', '\"PPG, multilateral (INT, current US$)\"', 'DT.INT.MLAT.CD', 475235487.1)\n('Pakistan', 'PAK', '\"PPG, official creditors (AMT, current US$)\"', 'DT.AMT.OFFT.CD', 3754135338.4)\n('Pakistan', 'PAK', '\"PPG, official creditors (DIS, current US$)\"', 'DT.DIS.OFFT.CD', 5254500103.2)\n('Pakistan', 'PAK', '\"PPG, official creditors (INT, current US$)\"', 'DT.INT.OFFT.CD', 1195133408.3)\n('Pakistan', 'PAK', '\"PPG, other private creditors (AMT, current US$)\"', 'DT.AMT.PROP.CD', 53000000.0)\n('Pakistan', 'PAK', '\"PPG, other private creditors (INT, current US$)\"', 'DT.INT.PROP.CD', 795000.0)\n('Pakistan', 'PAK', '\"PPG, private creditors (AMT, current US$)\"', 'DT.AMT.PRVT.CD', 3021637742.9)\n('Pakistan', 'PAK', '\"PPG, private creditors (DIS, current US$)\"', 'DT.DIS.PRVT.CD', 46666666.7)\n('Pakistan', 'PAK', '\"PPG, private creditors (INT, current US$)\"', 'DT.INT.PRVT.CD', 556830000.0)\n('Pakistan', 'PAK', '\"Principal repayments on external debt, long-term (AMT, current US$)\"', 'DT.AMT.DLXF.CD', 8336013891.3)\n('Pakistan', 'PAK', '\"Principal repayments on external debt, private nonguaranteed (PNG) (AMT, current US$)\"', 'DT.AMT.DPNG.CD', 1560240810.0)\n('Papua New Guinea', 'PNG', '\"Disbursements on external debt, long-term (DIS, current US$)\"', 'DT.DIS.DLXF.CD', 601895761.5)\n('Papua New Guinea', 'PNG', '\"Interest payments on external debt, long-term (INT, current US$)\"', 'DT.INT.DLXF.CD', 551188611.7)\n('Papua New Guinea', 'PNG', '\"Interest payments on external debt, private nonguaranteed (PNG) (INT, current US$)\"', 'DT.INT.DPNG.CD', 474262000.0)\n('Papua New Guinea', 'PNG', '\"PPG, bilateral (AMT, current US$)\"', 'DT.AMT.BLAT.CD', 30768505.2)\n('Papua New Guinea', 'PNG', '\"PPG, bilateral (DIS, current US$)\"', 'DT.DIS.BLAT.CD', 272745704.4)\n('Papua New Guinea', 'PNG', '\"PPG, bilateral (INT, current US$)\"', 'DT.INT.BLAT.CD', 17727088.6)\n('Papua New Guinea', 'PNG', '\"PPG, commercial banks (AMT, current US$)\"', 'DT.AMT.PCBK.CD', 5617161.4)\n('Papua New Guinea', 'PNG', '\"PPG, commercial banks (DIS, current US$)\"', 'DT.DIS.PCBK.CD', 27030914.8)\n('Papua New Guinea', 'PNG', '\"PPG, commercial banks (INT, current US$)\"', 'DT.INT.PCBK.CD', 24544600.8)\n('Papua New Guinea', 'PNG', '\"PPG, multilateral (AMT, current US$)\"', 'DT.AMT.MLAT.CD', 78345326.0)\n('Papua New Guinea', 'PNG', '\"PPG, multilateral (DIS, current US$)\"', 'DT.DIS.MLAT.CD', 302119142.3)\n('Papua New Guinea', 'PNG', '\"PPG, multilateral (INT, current US$)\"', 'DT.INT.MLAT.CD', 34654922.3)\n('Papua New Guinea', 'PNG', '\"PPG, official creditors (AMT, current US$)\"', 'DT.AMT.OFFT.CD', 109113831.2)\n('Papua New Guinea', 'PNG', '\"PPG, official creditors (DIS, current US$)\"', 'DT.DIS.OFFT.CD', 574864846.7)\n('Papua New Guinea', 'PNG', '\"PPG, official creditors (INT, current US$)\"', 'DT.INT.OFFT.CD', 52382010.9)\n('Papua New Guinea', 'PNG', '\"PPG, private creditors (AMT, current US$)\"', 'DT.AMT.PRVT.CD', 5617161.4)\n('Papua New Guinea', 'PNG', '\"PPG, private creditors (DIS, current US$)\"', 'DT.DIS.PRVT.CD', 27030914.8)\n('Papua New Guinea', 'PNG', '\"PPG, private creditors (INT, current US$)\"', 'DT.INT.PRVT.CD', 24544600.8)\n('Papua New Guinea', 'PNG', '\"Principal repayments on external debt, long-term (AMT, current US$)\"', 'DT.AMT.DLXF.CD', 2842193842.5)\n('Papua New Guinea', 'PNG', '\"Principal repayments on external debt, private nonguaranteed (PNG) (AMT, current US$)\"', 'DT.AMT.DPNG.CD', 2727462849.9)\n('Paraguay', 'PRY', '\"Disbursements on external debt, long-term (DIS, current US$)\"', 'DT.DIS.DLXF.CD', 477257251.5)\n('Paraguay', 'PRY', '\"Interest payments on external debt, long-term (INT, current US$)\"', 'DT.INT.DLXF.CD', 393918250.5)\n('Paraguay', 'PRY', '\"Interest payments on external debt, private nonguaranteed (PNG) (INT, current US$)\"', 'DT.INT.DPNG.CD', 181087000.0)\n('Paraguay', 'PRY', '\"PPG, bilateral (AMT, current US$)\"', 'DT.AMT.BLAT.CD', 58314162.7)\n('Paraguay', 'PRY', '\"PPG, bilateral (DIS, current US$)\"', 'DT.DIS.BLAT.CD', 132431540.4)\n('Paraguay', 'PRY', '\"PPG, bilateral (INT, current US$)\"', 'DT.INT.BLAT.CD', 5158922.3)\n('Paraguay', 'PRY', '\"PPG, bonds (AMT, current US$)\"', 'DT.AMT.PBND.CD', 0.0)\n('Paraguay', 'PRY', '\"PPG, bonds (INT, current US$)\"', 'DT.INT.PBND.CD', 150500000.0)\n('Paraguay', 'PRY', '\"PPG, commercial banks (AMT, current US$)\"', 'DT.AMT.PCBK.CD', 19355000.0)\n('Paraguay', 'PRY', '\"PPG, commercial banks (INT, current US$)\"', 'DT.INT.PCBK.CD', 411000.0)\n('Paraguay', 'PRY', '\"PPG, multilateral (AMT, current US$)\"', 'DT.AMT.MLAT.CD', 207662030.9)\n('Paraguay', 'PRY', '\"PPG, multilateral (DIS, current US$)\"', 'DT.DIS.MLAT.CD', 344825711.1)\n('Paraguay', 'PRY', '\"PPG, multilateral (INT, current US$)\"', 'DT.INT.MLAT.CD', 56761328.2)\n('Paraguay', 'PRY', '\"PPG, official creditors (AMT, current US$)\"', 'DT.AMT.OFFT.CD', 265976193.6)\n('Paraguay', 'PRY', '\"PPG, official creditors (DIS, current US$)\"', 'DT.DIS.OFFT.CD', 477257251.5)\n('Paraguay', 'PRY', '\"PPG, official creditors (INT, current US$)\"', 'DT.INT.OFFT.CD', 61920250.5)\n('Paraguay', 'PRY', '\"PPG, private creditors (AMT, current US$)\"', 'DT.AMT.PRVT.CD', 19355000.0)\n('Paraguay', 'PRY', '\"PPG, private creditors (INT, current US$)\"', 'DT.INT.PRVT.CD', 150911000.0)\n('Paraguay', 'PRY', '\"Principal repayments on external debt, long-term (AMT, current US$)\"', 'DT.AMT.DLXF.CD', 1528508573.6)\n('Paraguay', 'PRY', '\"Principal repayments on external debt, private nonguaranteed (PNG) (AMT, current US$)\"', 'DT.AMT.DPNG.CD', 1243177380.0)\n('Peru', 'PER', '\"Disbursements on external debt, long-term (DIS, current US$)\"', 'DT.DIS.DLXF.CD', 1701637273.3)\n('Peru', 'PER', '\"Interest payments on external debt, long-term (INT, current US$)\"', 'DT.INT.DLXF.CD', 2592895979.3)\n('Peru', 'PER', '\"Interest payments on external debt, private nonguaranteed (PNG) (INT, current US$)\"', 'DT.INT.DPNG.CD', 1618289000.0)\n('Peru', 'PER', '\"PPG, bilateral (AMT, current US$)\"', 'DT.AMT.BLAT.CD', 114574694.7)\n('Peru', 'PER', '\"PPG, bilateral (DIS, current US$)\"', 'DT.DIS.BLAT.CD', 123873090.2)\n('Peru', 'PER', '\"PPG, bilateral (INT, current US$)\"', 'DT.INT.BLAT.CD', 20175359.1)\n('Peru', 'PER', '\"PPG, bonds (AMT, current US$)\"', 'DT.AMT.PBND.CD', 395741000.0)\n('Peru', 'PER', '\"PPG, bonds (INT, current US$)\"', 'DT.INT.PBND.CD', 834211575.0)\n('Peru', 'PER', '\"PPG, multilateral (AMT, current US$)\"', 'DT.AMT.MLAT.CD', 553634090.0)\n('Peru', 'PER', '\"PPG, multilateral (DIS, current US$)\"', 'DT.DIS.MLAT.CD', 1577764183.1)\n('Peru', 'PER', '\"PPG, multilateral (INT, current US$)\"', 'DT.INT.MLAT.CD', 120220045.2)\n('Peru', 'PER', '\"PPG, official creditors (AMT, current US$)\"', 'DT.AMT.OFFT.CD', 668208784.7)\n('Peru', 'PER', '\"PPG, official creditors (DIS, current US$)\"', 'DT.DIS.OFFT.CD', 1701637273.3)\n('Peru', 'PER', '\"PPG, official creditors (INT, current US$)\"', 'DT.INT.OFFT.CD', 140395404.3)\n('Peru', 'PER', '\"PPG, private creditors (AMT, current US$)\"', 'DT.AMT.PRVT.CD', 395741000.0)\n('Peru', 'PER', '\"PPG, private creditors (INT, current US$)\"', 'DT.INT.PRVT.CD', 834211575.0)\n('Peru', 'PER', '\"Principal repayments on external debt, long-term (AMT, current US$)\"', 'DT.AMT.DLXF.CD', 5881259974.7)\n('Peru', 'PER', '\"Principal repayments on external debt, private nonguaranteed (PNG) (AMT, current US$)\"', 'DT.AMT.DPNG.CD', 4817310190.0)\n('Philippines', 'PHL', '\"Disbursements on external debt, long-term (DIS, current US$)\"', 'DT.DIS.DLXF.CD', 1599376586.3)\n('Philippines', 'PHL', '\"Interest payments on external debt, long-term (INT, current US$)\"', 'DT.INT.DLXF.CD', 1835490244.3)\n('Philippines', 'PHL', '\"Interest payments on external debt, private nonguaranteed (PNG) (INT, current US$)\"', 'DT.INT.DPNG.CD', 690769000.0)\n('Philippines', 'PHL', '\"PPG, bilateral (AMT, current US$)\"', 'DT.AMT.BLAT.CD', 670475417.9)\n('Philippines', 'PHL', '\"PPG, bilateral (DIS, current US$)\"', 'DT.DIS.BLAT.CD', 544148527.8)\n('Philippines', 'PHL', '\"PPG, bilateral (INT, current US$)\"', 'DT.INT.BLAT.CD', 104237992.9)\n('Philippines', 'PHL', '\"PPG, bonds (AMT, current US$)\"', 'DT.AMT.PBND.CD', 903941000.0)\n('Philippines', 'PHL', '\"PPG, bonds (INT, current US$)\"', 'DT.INT.PBND.CD', 767514405.8999999)\n('Philippines', 'PHL', '\"PPG, commercial banks (AMT, current US$)\"', 'DT.AMT.PCBK.CD', 215119588.1)\n('Philippines', 'PHL', '\"PPG, commercial banks (DIS, current US$)\"', 'DT.DIS.PCBK.CD', 162804936.2)\n('Philippines', 'PHL', '\"PPG, commercial banks (INT, current US$)\"', 'DT.INT.PCBK.CD', 16718030.9)\n('Philippines', 'PHL', '\"PPG, multilateral (AMT, current US$)\"', 'DT.AMT.MLAT.CD', 739056427.2999998)\n('Philippines', 'PHL', '\"PPG, multilateral (DIS, current US$)\"', 'DT.DIS.MLAT.CD', 851399752.3999999)\n('Philippines', 'PHL', '\"PPG, multilateral (INT, current US$)\"', 'DT.INT.MLAT.CD', 254559486.9)\n('Philippines', 'PHL', '\"PPG, official creditors (AMT, current US$)\"', 'DT.AMT.OFFT.CD', 1409531845.2)\n('Philippines', 'PHL', '\"PPG, official creditors (DIS, current US$)\"', 'DT.DIS.OFFT.CD', 1395548280.2)\n('Philippines', 'PHL', '\"PPG, official creditors (INT, current US$)\"', 'DT.INT.OFFT.CD', 358797479.8)\n('Philippines', 'PHL', '\"PPG, other private creditors (AMT, current US$)\"', 'DT.AMT.PROP.CD', 50941024.5)\n('Philippines', 'PHL', '\"PPG, other private creditors (DIS, current US$)\"', 'DT.DIS.PROP.CD', 41023369.9)\n('Philippines', 'PHL', '\"PPG, other private creditors (INT, current US$)\"', 'DT.INT.PROP.CD', 1691327.7)\n('Philippines', 'PHL', '\"PPG, private creditors (AMT, current US$)\"', 'DT.AMT.PRVT.CD', 1170001612.6)\n('Philippines', 'PHL', '\"PPG, private creditors (DIS, current US$)\"', 'DT.DIS.PRVT.CD', 203828306.1)\n('Philippines', 'PHL', '\"PPG, private creditors (INT, current US$)\"', 'DT.INT.PRVT.CD', 785923764.5)\n('Philippines', 'PHL', '\"Principal repayments on external debt, long-term (AMT, current US$)\"', 'DT.AMT.DLXF.CD', 6479170917.7)\n('Philippines', 'PHL', '\"Principal repayments on external debt, private nonguaranteed (PNG) (AMT, current US$)\"', 'DT.AMT.DPNG.CD', 3899637459.9)\n('Romania', 'ROU', '\"Disbursements on external debt, long-term (DIS, current US$)\"', 'DT.DIS.DLXF.CD', 1381014186.3)\n('Romania', 'ROU', '\"Interest payments on external debt, long-term (INT, current US$)\"', 'DT.INT.DLXF.CD', 2906875294.6)\n('Romania', 'ROU', '\"Interest payments on external debt, private nonguaranteed (PNG) (INT, current US$)\"', 'DT.INT.DPNG.CD', 1790450000.0)\n('Romania', 'ROU', '\"PPG, bilateral (AMT, current US$)\"', 'DT.AMT.BLAT.CD', 46961486.3)\n('Romania', 'ROU', '\"PPG, bilateral (DIS, current US$)\"', 'DT.DIS.BLAT.CD', 115066917.8)\n('Romania', 'ROU', '\"PPG, bilateral (INT, current US$)\"', 'DT.INT.BLAT.CD', 8014478.4)\n('Romania', 'ROU', '\"PPG, bonds (AMT, current US$)\"', 'DT.AMT.PBND.CD', 1798950000.0)\n('Romania', 'ROU', '\"PPG, bonds (INT, current US$)\"', 'DT.INT.PBND.CD', 917027107.3)\n('Romania', 'ROU', '\"PPG, commercial banks (AMT, current US$)\"', 'DT.AMT.PCBK.CD', 68977772.6)\n('Romania', 'ROU', '\"PPG, commercial banks (DIS, current US$)\"', 'DT.DIS.PCBK.CD', 1001655.4)\n('Romania', 'ROU', '\"PPG, commercial banks (INT, current US$)\"', 'DT.INT.PCBK.CD', 7130421.7)\n('Romania', 'ROU', '\"PPG, multilateral (AMT, current US$)\"', 'DT.AMT.MLAT.CD', 1798305095.8)\n('Romania', 'ROU', '\"PPG, multilateral (DIS, current US$)\"', 'DT.DIS.MLAT.CD', 1264945613.1)\n('Romania', 'ROU', '\"PPG, multilateral (INT, current US$)\"', 'DT.INT.MLAT.CD', 184253287.2)\n('Romania', 'ROU', '\"PPG, official creditors (AMT, current US$)\"', 'DT.AMT.OFFT.CD', 1845266582.1)\n('Romania', 'ROU', '\"PPG, official creditors (DIS, current US$)\"', 'DT.DIS.OFFT.CD', 1380012530.9)\n('Romania', 'ROU', '\"PPG, official creditors (INT, current US$)\"', 'DT.INT.OFFT.CD', 192267765.6)\n('Romania', 'ROU', '\"PPG, private creditors (AMT, current US$)\"', 'DT.AMT.PRVT.CD', 1867927772.6)\n('Romania', 'ROU', '\"PPG, private creditors (DIS, current US$)\"', 'DT.DIS.PRVT.CD', 1001655.4)\n('Romania', 'ROU', '\"PPG, private creditors (INT, current US$)\"', 'DT.INT.PRVT.CD', 924157529.0)\n('Romania', 'ROU', '\"Principal repayments on external debt, long-term (AMT, current US$)\"', 'DT.AMT.DLXF.CD', 14013783350.4)\n('Romania', 'ROU', '\"Principal repayments on external debt, private nonguaranteed (PNG) (AMT, current US$)\"', 'DT.AMT.DPNG.CD', 10300588995.7)\n('Russian Federation', 'RUS', '\"Disbursements on external debt, long-term (DIS, current US$)\"', 'DT.DIS.DLXF.CD', 33043274.4)\n('Russian Federation', 'RUS', '\"Interest payments on external debt, long-term (INT, current US$)\"', 'DT.INT.DLXF.CD', 13929825315.6)\n('Russian Federation', 'RUS', '\"Interest payments on external debt, private nonguaranteed (PNG) (INT, current US$)\"', 'DT.INT.DPNG.CD', 7568679036.399999)\n('Russian Federation', 'RUS', '\"PPG, bilateral (AMT, current US$)\"', 'DT.AMT.BLAT.CD', 69924222.2)\n('Russian Federation', 'RUS', '\"PPG, bilateral (INT, current US$)\"', 'DT.INT.BLAT.CD', 11030000.0)\n('Russian Federation', 'RUS', '\"PPG, bonds (AMT, current US$)\"', 'DT.AMT.PBND.CD', 1500000000.0)\n('Russian Federation', 'RUS', '\"PPG, bonds (INT, current US$)\"', 'DT.INT.PBND.CD', 2113157602.7)\n('Russian Federation', 'RUS', '\"PPG, commercial banks (AMT, current US$)\"', 'DT.AMT.PCBK.CD', 22077398848.1)\n('Russian Federation', 'RUS', '\"PPG, commercial banks (INT, current US$)\"', 'DT.INT.PCBK.CD', 4228747124.8)\n('Russian Federation', 'RUS', '\"PPG, multilateral (AMT, current US$)\"', 'DT.AMT.MLAT.CD', 141669500.0)\n('Russian Federation', 'RUS', '\"PPG, multilateral (DIS, current US$)\"', 'DT.DIS.MLAT.CD', 33043274.4)\n('Russian Federation', 'RUS', '\"PPG, multilateral (INT, current US$)\"', 'DT.INT.MLAT.CD', 8201415.9)\n('Russian Federation', 'RUS', '\"PPG, official creditors (AMT, current US$)\"', 'DT.AMT.OFFT.CD', 211593722.2)\n('Russian Federation', 'RUS', '\"PPG, official creditors (DIS, current US$)\"', 'DT.DIS.OFFT.CD', 33043274.4)\n('Russian Federation', 'RUS', '\"PPG, official creditors (INT, current US$)\"', 'DT.INT.OFFT.CD', 19231415.9)\n('Russian Federation', 'RUS', '\"PPG, other private creditors (AMT, current US$)\"', 'DT.AMT.PROP.CD', 614288.3)\n('Russian Federation', 'RUS', '\"PPG, other private creditors (INT, current US$)\"', 'DT.INT.PROP.CD', 10135.8)\n('Russian Federation', 'RUS', '\"PPG, private creditors (AMT, current US$)\"', 'DT.AMT.PRVT.CD', 23578013136.4)\n('Russian Federation', 'RUS', '\"PPG, private creditors (INT, current US$)\"', 'DT.INT.PRVT.CD', 6341914863.3)\n('Russian Federation', 'RUS', '\"Principal repayments on external debt, long-term (AMT, current US$)\"', 'DT.AMT.DLXF.CD', 66589761833.5)\n('Russian Federation', 'RUS', '\"Principal repayments on external debt, private nonguaranteed (PNG) (AMT, current US$)\"', 'DT.AMT.DPNG.CD', 42800154974.9)\n('Rwanda', 'RWA', '\"Disbursements on external debt, long-term (DIS, current US$)\"', 'DT.DIS.DLXF.CD', 327248280.2)\n('Rwanda', 'RWA', '\"Interest payments on external debt, long-term (INT, current US$)\"', 'DT.INT.DLXF.CD', 54069081.6)\n('Rwanda', 'RWA', '\"PPG, bilateral (AMT, current US$)\"', 'DT.AMT.BLAT.CD', 8604526.0)\n('Rwanda', 'RWA', '\"PPG, bilateral (DIS, current US$)\"', 'DT.DIS.BLAT.CD', 69086251.9)\n('Rwanda', 'RWA', '\"PPG, bilateral (INT, current US$)\"', 'DT.INT.BLAT.CD', 7310975.7)\n('Rwanda', 'RWA', '\"PPG, bonds (AMT, current US$)\"', 'DT.AMT.PBND.CD', 0.0)\n('Rwanda', 'RWA', '\"PPG, bonds (INT, current US$)\"', 'DT.INT.PBND.CD', 26500000.0)\n('Rwanda', 'RWA', '\"PPG, multilateral (AMT, current US$)\"', 'DT.AMT.MLAT.CD', 31090382.5)\n('Rwanda', 'RWA', '\"PPG, multilateral (DIS, current US$)\"', 'DT.DIS.MLAT.CD', 258162028.3)\n('Rwanda', 'RWA', '\"PPG, multilateral (INT, current US$)\"', 'DT.INT.MLAT.CD', 20258105.9)\n('Rwanda', 'RWA', '\"PPG, official creditors (AMT, current US$)\"', 'DT.AMT.OFFT.CD', 39694908.5)\n('Rwanda', 'RWA', '\"PPG, official creditors (DIS, current US$)\"', 'DT.DIS.OFFT.CD', 327248280.2)\n('Rwanda', 'RWA', '\"PPG, official creditors (INT, current US$)\"', 'DT.INT.OFFT.CD', 27569081.6)\n('Rwanda', 'RWA', '\"PPG, private creditors (AMT, current US$)\"', 'DT.AMT.PRVT.CD', 0.0)\n('Rwanda', 'RWA', '\"PPG, private creditors (INT, current US$)\"', 'DT.INT.PRVT.CD', 26500000.0)\n('Rwanda', 'RWA', '\"Principal repayments on external debt, long-term (AMT, current US$)\"', 'DT.AMT.DLXF.CD', 39694908.5)\n('Samoa', 'WSM', '\"Disbursements on external debt, long-term (DIS, current US$)\"', 'DT.DIS.DLXF.CD', 10815581.1)\n('Samoa', 'WSM', '\"Interest payments on external debt, long-term (INT, current US$)\"', 'DT.INT.DLXF.CD', 5117819.0)\n('Samoa', 'WSM', '\"PPG, bilateral (AMT, current US$)\"', 'DT.AMT.BLAT.CD', 11727921.8)\n('Samoa', 'WSM', '\"PPG, bilateral (DIS, current US$)\"', 'DT.DIS.BLAT.CD', 3362614.4)\n('Samoa', 'WSM', '\"PPG, bilateral (INT, current US$)\"', 'DT.INT.BLAT.CD', 2965245.0)\n('Samoa', 'WSM', '\"PPG, multilateral (AMT, current US$)\"', 'DT.AMT.MLAT.CD', 9987486.6)\n('Samoa', 'WSM', '\"PPG, multilateral (DIS, current US$)\"', 'DT.DIS.MLAT.CD', 7452966.7)\n('Samoa', 'WSM', '\"PPG, multilateral (INT, current US$)\"', 'DT.INT.MLAT.CD', 2152574.0)\n('Samoa', 'WSM', '\"PPG, official creditors (AMT, current US$)\"', 'DT.AMT.OFFT.CD', 21715408.4)\n('Samoa', 'WSM', '\"PPG, official creditors (DIS, current US$)\"', 'DT.DIS.OFFT.CD', 10815581.1)\n('Samoa', 'WSM', '\"PPG, official creditors (INT, current US$)\"', 'DT.INT.OFFT.CD', 5117819.0)\n('Samoa', 'WSM', '\"Principal repayments on external debt, long-term (AMT, current US$)\"', 'DT.AMT.DLXF.CD', 21715408.4)\n('Sao Tome and Principe', 'STP', '\"Disbursements on external debt, long-term (DIS, current US$)\"', 'DT.DIS.DLXF.CD', 10636848.5)\n('Sao Tome and Principe', 'STP', '\"Interest payments on external debt, long-term (INT, current US$)\"', 'DT.INT.DLXF.CD', 1354432.7)\n('Sao Tome and Principe', 'STP', '\"PPG, bilateral (AMT, current US$)\"', 'DT.AMT.BLAT.CD', 522448.7)\n('Sao Tome and Principe', 'STP', '\"PPG, bilateral (DIS, current US$)\"', 'DT.DIS.BLAT.CD', 1918.9)\n('Sao Tome and Principe', 'STP', '\"PPG, bilateral (INT, current US$)\"', 'DT.INT.BLAT.CD', 802594.2)\n('Sao Tome and Principe', 'STP', '\"PPG, multilateral (AMT, current US$)\"', 'DT.AMT.MLAT.CD', 2418947.6)\n('Sao Tome and Principe', 'STP', '\"PPG, multilateral (DIS, current US$)\"', 'DT.DIS.MLAT.CD', 10634929.6)\n('Sao Tome and Principe', 'STP', '\"PPG, multilateral (INT, current US$)\"', 'DT.INT.MLAT.CD', 551838.5)\n('Sao Tome and Principe', 'STP', '\"PPG, official creditors (AMT, current US$)\"', 'DT.AMT.OFFT.CD', 2941396.3)\n('Sao Tome and Principe', 'STP', '\"PPG, official creditors (DIS, current US$)\"', 'DT.DIS.OFFT.CD', 10636848.5)\n('Sao Tome and Principe', 'STP', '\"PPG, official creditors (INT, current US$)\"', 'DT.INT.OFFT.CD', 1354432.7)\n('Sao Tome and Principe', 'STP', '\"Principal repayments on external debt, long-term (AMT, current US$)\"', 'DT.AMT.DLXF.CD', 2941396.3)\n('Senegal', 'SEN', '\"Disbursements on external debt, long-term (DIS, current US$)\"', 'DT.DIS.DLXF.CD', 1661790101.6)\n('Senegal', 'SEN', '\"Interest payments on external debt, long-term (INT, current US$)\"', 'DT.INT.DLXF.CD', 266493300.4)\n('Senegal', 'SEN', '\"PPG, bilateral (AMT, current US$)\"', 'DT.AMT.BLAT.CD', 132241030.2)\n('Senegal', 'SEN', '\"PPG, bilateral (DIS, current US$)\"', 'DT.DIS.BLAT.CD', 548648509.1)\n('Senegal', 'SEN', '\"PPG, bilateral (INT, current US$)\"', 'DT.INT.BLAT.CD', 62856549.3)\n('Senegal', 'SEN', '\"PPG, bonds (AMT, current US$)\"', 'DT.AMT.PBND.CD', 0.0)\n('Senegal', 'SEN', '\"PPG, bonds (INT, current US$)\"', 'DT.INT.PBND.CD', 140824000.0)\n('Senegal', 'SEN', '\"PPG, commercial banks (AMT, current US$)\"', 'DT.AMT.PCBK.CD', 98043761.1)\n('Senegal', 'SEN', '\"PPG, commercial banks (DIS, current US$)\"', 'DT.DIS.PCBK.CD', 61799481.2)\n('Senegal', 'SEN', '\"PPG, commercial banks (INT, current US$)\"', 'DT.INT.PCBK.CD', 5561154.1)\n('Senegal', 'SEN', '\"PPG, multilateral (AMT, current US$)\"', 'DT.AMT.MLAT.CD', 170437929.1)\n('Senegal', 'SEN', '\"PPG, multilateral (DIS, current US$)\"', 'DT.DIS.MLAT.CD', 886747852.7)\n('Senegal', 'SEN', '\"PPG, multilateral (INT, current US$)\"', 'DT.INT.MLAT.CD', 53740046.6)\n('Senegal', 'SEN', '\"PPG, official creditors (AMT, current US$)\"', 'DT.AMT.OFFT.CD', 302678959.3)\n('Senegal', 'SEN', '\"PPG, official creditors (DIS, current US$)\"', 'DT.DIS.OFFT.CD', 1435396361.8)\n('Senegal', 'SEN', '\"PPG, official creditors (INT, current US$)\"', 'DT.INT.OFFT.CD', 116596595.9)\n('Senegal', 'SEN', '\"PPG, other private creditors (AMT, current US$)\"', 'DT.AMT.PROP.CD', 43999835.6)\n('Senegal', 'SEN', '\"PPG, other private creditors (DIS, current US$)\"', 'DT.DIS.PROP.CD', 164594258.6)\n('Senegal', 'SEN', '\"PPG, other private creditors (INT, current US$)\"', 'DT.INT.PROP.CD', 3511550.4)\n('Senegal', 'SEN', '\"PPG, private creditors (AMT, current US$)\"', 'DT.AMT.PRVT.CD', 142043596.7)\n('Senegal', 'SEN', '\"PPG, private creditors (DIS, current US$)\"', 'DT.DIS.PRVT.CD', 226393739.8)\n('Senegal', 'SEN', '\"PPG, private creditors (INT, current US$)\"', 'DT.INT.PRVT.CD', 149896704.5)\n('Senegal', 'SEN', '\"Principal repayments on external debt, long-term (AMT, current US$)\"', 'DT.AMT.DLXF.CD', 444722556.0)\n('Serbia', 'SRB', '\"Disbursements on external debt, long-term (DIS, current US$)\"', 'DT.DIS.DLXF.CD', 1390127107.3)\n('Serbia', 'SRB', '\"Interest payments on external debt, long-term (INT, current US$)\"', 'DT.INT.DLXF.CD', 1087126443.3)\n('Serbia', 'SRB', '\"Interest payments on external debt, private nonguaranteed (PNG) (INT, current US$)\"', 'DT.INT.DPNG.CD', 589206331.6)\n('Serbia', 'SRB', '\"PPG, bilateral (AMT, current US$)\"', 'DT.AMT.BLAT.CD', 328727524.6)\n('Serbia', 'SRB', '\"PPG, bilateral (DIS, current US$)\"', 'DT.DIS.BLAT.CD', 703434606.4)\n('Serbia', 'SRB', '\"PPG, bilateral (INT, current US$)\"', 'DT.INT.BLAT.CD', 156469393.1)\n('Serbia', 'SRB', '\"PPG, bonds (AMT, current US$)\"', 'DT.AMT.PBND.CD', 0.0)\n('Serbia', 'SRB', '\"PPG, bonds (INT, current US$)\"', 'DT.INT.PBND.CD', 238124000.0)\n('Serbia', 'SRB', '\"PPG, commercial banks (AMT, current US$)\"', 'DT.AMT.PCBK.CD', 6515073.8)\n('Serbia', 'SRB', '\"PPG, commercial banks (DIS, current US$)\"', 'DT.DIS.PCBK.CD', 2967178.9)\n('Serbia', 'SRB', '\"PPG, commercial banks (INT, current US$)\"', 'DT.INT.PCBK.CD', 621929.8)\n('Serbia', 'SRB', '\"PPG, multilateral (AMT, current US$)\"', 'DT.AMT.MLAT.CD', 715223963.7)\n('Serbia', 'SRB', '\"PPG, multilateral (DIS, current US$)\"', 'DT.DIS.MLAT.CD', 623050701.0)\n('Serbia', 'SRB', '\"PPG, multilateral (INT, current US$)\"', 'DT.INT.MLAT.CD', 92872223.3)\n('Serbia', 'SRB', '\"PPG, official creditors (AMT, current US$)\"', 'DT.AMT.OFFT.CD', 1043951488.3)\n('Serbia', 'SRB', '\"PPG, official creditors (DIS, current US$)\"', 'DT.DIS.OFFT.CD', 1326485307.4)\n('Serbia', 'SRB', '\"PPG, official creditors (INT, current US$)\"', 'DT.INT.OFFT.CD', 249341616.4)\n('Serbia', 'SRB', '\"PPG, other private creditors (AMT, current US$)\"', 'DT.AMT.PROP.CD', 27982786.4)\n('Serbia', 'SRB', '\"PPG, other private creditors (DIS, current US$)\"', 'DT.DIS.PROP.CD', 60674621.0)\n('Serbia', 'SRB', '\"PPG, other private creditors (INT, current US$)\"', 'DT.INT.PROP.CD', 9832565.5)\n('Serbia', 'SRB', '\"PPG, private creditors (AMT, current US$)\"', 'DT.AMT.PRVT.CD', 34497860.2)\n('Serbia', 'SRB', '\"PPG, private creditors (DIS, current US$)\"', 'DT.DIS.PRVT.CD', 63641799.9)\n('Serbia', 'SRB', '\"PPG, private creditors (INT, current US$)\"', 'DT.INT.PRVT.CD', 248578495.3)\n('Serbia', 'SRB', '\"Principal repayments on external debt, long-term (AMT, current US$)\"', 'DT.AMT.DLXF.CD', 3409673950.0)\n('Serbia', 'SRB', '\"Principal repayments on external debt, private nonguaranteed (PNG) (AMT, current US$)\"', 'DT.AMT.DPNG.CD', 2331224601.5)\n('Sierra Leone', 'SLE', '\"Disbursements on external debt, long-term (DIS, current US$)\"', 'DT.DIS.DLXF.CD', 98339852.8)\n('Sierra Leone', 'SLE', '\"Interest payments on external debt, long-term (INT, current US$)\"', 'DT.INT.DLXF.CD', 7862712.9)\n('Sierra Leone', 'SLE', '\"PPG, bilateral (AMT, current US$)\"', 'DT.AMT.BLAT.CD', 8755657.7)\n('Sierra Leone', 'SLE', '\"PPG, bilateral (DIS, current US$)\"', 'DT.DIS.BLAT.CD', 32566565.0)\n('Sierra Leone', 'SLE', '\"PPG, bilateral (INT, current US$)\"', 'DT.INT.BLAT.CD', 2736397.7)\n('Sierra Leone', 'SLE', '\"PPG, multilateral (AMT, current US$)\"', 'DT.AMT.MLAT.CD', 24144262.8)\n('Sierra Leone', 'SLE', '\"PPG, multilateral (DIS, current US$)\"', 'DT.DIS.MLAT.CD', 65773287.8)\n('Sierra Leone', 'SLE', '\"PPG, multilateral (INT, current US$)\"', 'DT.INT.MLAT.CD', 5126315.2)\n('Sierra Leone', 'SLE', '\"PPG, official creditors (AMT, current US$)\"', 'DT.AMT.OFFT.CD', 32899920.5)\n('Sierra Leone', 'SLE', '\"PPG, official creditors (DIS, current US$)\"', 'DT.DIS.OFFT.CD', 98339852.8)\n('Sierra Leone', 'SLE', '\"PPG, official creditors (INT, current US$)\"', 'DT.INT.OFFT.CD', 7862712.9)\n('Sierra Leone', 'SLE', '\"Principal repayments on external debt, long-term (AMT, current US$)\"', 'DT.AMT.DLXF.CD', 32899920.5)\n('Solomon Islands', 'SLB', '\"Disbursements on external debt, long-term (DIS, current US$)\"', 'DT.DIS.DLXF.CD', 8645249.9)\n('Solomon Islands', 'SLB', '\"Interest payments on external debt, long-term (INT, current US$)\"', 'DT.INT.DLXF.CD', 5410035.3)\n('Solomon Islands', 'SLB', '\"Interest payments on external debt, private nonguaranteed (PNG) (INT, current US$)\"', 'DT.INT.DPNG.CD', 3721000.0)\n('Solomon Islands', 'SLB', '\"PPG, bilateral (AMT, current US$)\"', 'DT.AMT.BLAT.CD', 1207375.0)\n('Solomon Islands', 'SLB', '\"PPG, bilateral (INT, current US$)\"', 'DT.INT.BLAT.CD', 284000.0)\n('Solomon Islands', 'SLB', '\"PPG, multilateral (AMT, current US$)\"', 'DT.AMT.MLAT.CD', 3952828.9)\n('Solomon Islands', 'SLB', '\"PPG, multilateral (DIS, current US$)\"', 'DT.DIS.MLAT.CD', 8645249.9)\n('Solomon Islands', 'SLB', '\"PPG, multilateral (INT, current US$)\"', 'DT.INT.MLAT.CD', 1405035.3)\n('Solomon Islands', 'SLB', '\"PPG, official creditors (AMT, current US$)\"', 'DT.AMT.OFFT.CD', 5160203.9)\n('Solomon Islands', 'SLB', '\"PPG, official creditors (DIS, current US$)\"', 'DT.DIS.OFFT.CD', 8645249.9)\n('Solomon Islands', 'SLB', '\"PPG, official creditors (INT, current US$)\"', 'DT.INT.OFFT.CD', 1689035.3)\n('Solomon Islands', 'SLB', '\"Principal repayments on external debt, long-term (AMT, current US$)\"', 'DT.AMT.DLXF.CD', 30749703.9)\n('Solomon Islands', 'SLB', '\"Principal repayments on external debt, private nonguaranteed (PNG) (AMT, current US$)\"', 'DT.AMT.DPNG.CD', 25589500.0)\n('Somalia', 'SOM', '\"Disbursements on external debt, long-term (DIS, current US$)\"', 'DT.DIS.DLXF.CD', 2456971.6)\n('Somalia', 'SOM', '\"Interest payments on external debt, long-term (INT, current US$)\"', 'DT.INT.DLXF.CD', 4429352.4)\n('Somalia', 'SOM', '\"PPG, bilateral (AMT, current US$)\"', 'DT.AMT.BLAT.CD', 8301771.4)\n('Somalia', 'SOM', '\"PPG, bilateral (INT, current US$)\"', 'DT.INT.BLAT.CD', 925000.0)\n('Somalia', 'SOM', '\"PPG, multilateral (AMT, current US$)\"', 'DT.AMT.MLAT.CD', 24683262.9)\n('Somalia', 'SOM', '\"PPG, multilateral (DIS, current US$)\"', 'DT.DIS.MLAT.CD', 2456971.6)\n('Somalia', 'SOM', '\"PPG, multilateral (INT, current US$)\"', 'DT.INT.MLAT.CD', 3504352.4)\n('Somalia', 'SOM', '\"PPG, official creditors (AMT, current US$)\"', 'DT.AMT.OFFT.CD', 32985034.3)\n('Somalia', 'SOM', '\"PPG, official creditors (DIS, current US$)\"', 'DT.DIS.OFFT.CD', 2456971.6)\n('Somalia', 'SOM', '\"PPG, official creditors (INT, current US$)\"', 'DT.INT.OFFT.CD', 4429352.4)\n('Somalia', 'SOM', '\"Principal repayments on external debt, long-term (AMT, current US$)\"', 'DT.AMT.DLXF.CD', 32985034.3)\n('South Africa', 'ZAF', '\"Disbursements on external debt, long-term (DIS, current US$)\"', 'DT.DIS.DLXF.CD', 714762584.5)\n('South Africa', 'ZAF', '\"Interest payments on external debt, long-term (INT, current US$)\"', 'DT.INT.DLXF.CD', 4872276053.4)\n('South Africa', 'ZAF', '\"Interest payments on external debt, private nonguaranteed (PNG) (INT, current US$)\"', 'DT.INT.DPNG.CD', 957111168.5)\n('South Africa', 'ZAF', '\"PPG, bonds (AMT, current US$)\"', 'DT.AMT.PBND.CD', 2000000000.0)\n('South Africa', 'ZAF', '\"PPG, bonds (INT, current US$)\"', 'DT.INT.PBND.CD', 3766186000.0)\n('South Africa', 'ZAF', '\"PPG, commercial banks (AMT, current US$)\"', 'DT.AMT.PCBK.CD', 398510262.9)\n('South Africa', 'ZAF', '\"PPG, commercial banks (DIS, current US$)\"', 'DT.DIS.PCBK.CD', 44117700.0)\n('South Africa', 'ZAF', '\"PPG, commercial banks (INT, current US$)\"', 'DT.INT.PCBK.CD', 65728818.1)\n('South Africa', 'ZAF', '\"PPG, multilateral (AMT, current US$)\"', 'DT.AMT.MLAT.CD', 346393763.9)\n('South Africa', 'ZAF', '\"PPG, multilateral (DIS, current US$)\"', 'DT.DIS.MLAT.CD', 251984484.5)\n('South Africa', 'ZAF', '\"PPG, multilateral (INT, current US$)\"', 'DT.INT.MLAT.CD', 82716066.79999998)\n('South Africa', 'ZAF', '\"PPG, official creditors (AMT, current US$)\"', 'DT.AMT.OFFT.CD', 346393763.9)\n('South Africa', 'ZAF', '\"PPG, official creditors (DIS, current US$)\"', 'DT.DIS.OFFT.CD', 251984484.5)\n('South Africa', 'ZAF', '\"PPG, official creditors (INT, current US$)\"', 'DT.INT.OFFT.CD', 82716066.79999998)\n('South Africa', 'ZAF', '\"PPG, other private creditors (AMT, current US$)\"', 'DT.AMT.PROP.CD', 43837666.7)\n('South Africa', 'ZAF', '\"PPG, other private creditors (INT, current US$)\"', 'DT.INT.PROP.CD', 534000.0)\n('South Africa', 'ZAF', '\"PPG, private creditors (AMT, current US$)\"', 'DT.AMT.PRVT.CD', 2442347929.6)\n('South Africa', 'ZAF', '\"PPG, private creditors (DIS, current US$)\"', 'DT.DIS.PRVT.CD', 44117700.0)\n('South Africa', 'ZAF', '\"PPG, private creditors (INT, current US$)\"', 'DT.INT.PRVT.CD', 3832448818.1)\n('South Africa', 'ZAF', '\"Principal repayments on external debt, long-term (AMT, current US$)\"', 'DT.AMT.DLXF.CD', 9474257551.9)\n('South Africa', 'ZAF', '\"Principal repayments on external debt, private nonguaranteed (PNG) (AMT, current US$)\"', 'DT.AMT.DPNG.CD', 6685515858.4)\n('South Asia', 'SAS', '\"Disbursements on external debt, long-term (DIS, current US$)\"', 'DT.DIS.DLXF.CD', 29306216064.7)\n('South Asia', 'SAS', '\"Interest payments on external debt, long-term (INT, current US$)\"', 'DT.INT.DLXF.CD', 15931560388.1)\n('South Asia', 'SAS', '\"Interest payments on external debt, private nonguaranteed (PNG) (INT, current US$)\"', 'DT.INT.DPNG.CD', 9813113000.0)\n('South Asia', 'SAS', '\"PPG, bilateral (AMT, current US$)\"', 'DT.AMT.BLAT.CD', 6437804448.1)\n('South Asia', 'SAS', '\"PPG, bilateral (DIS, current US$)\"', 'DT.DIS.BLAT.CD', 17269114040.9)\n('South Asia', 'SAS', '\"PPG, bilateral (INT, current US$)\"', 'DT.INT.BLAT.CD', 2004917449.3)\n('South Asia', 'SAS', '\"PPG, bonds (AMT, current US$)\"', 'DT.AMT.PBND.CD', 4883333333.3)\n('South Asia', 'SAS', '\"PPG, bonds (INT, current US$)\"', 'DT.INT.PBND.CD', 1515738709.8)\n('South Asia', 'SAS', '\"PPG, commercial banks (AMT, current US$)\"', 'DT.AMT.PCBK.CD', 5004801917.3)\n('South Asia', 'SAS', '\"PPG, commercial banks (DIS, current US$)\"', 'DT.DIS.PCBK.CD', 219553713.2)\n('South Asia', 'SAS', '\"PPG, commercial banks (INT, current US$)\"', 'DT.INT.PCBK.CD', 676602285.2)\n('South Asia', 'SAS', '\"PPG, multilateral (AMT, current US$)\"', 'DT.AMT.MLAT.CD', 7851739929.5)\n('South Asia', 'SAS', '\"PPG, multilateral (DIS, current US$)\"', 'DT.DIS.MLAT.CD', 11722783310.6)\n('South Asia', 'SAS', '\"PPG, multilateral (INT, current US$)\"', 'DT.INT.MLAT.CD', 1915432943.8)\n('South Asia', 'SAS', '\"PPG, official creditors (AMT, current US$)\"', 'DT.AMT.OFFT.CD', 14289544377.6)\n('South Asia', 'SAS', '\"PPG, official creditors (DIS, current US$)\"', 'DT.DIS.OFFT.CD', 28991897351.5)\n('South Asia', 'SAS', '\"PPG, official creditors (INT, current US$)\"', 'DT.INT.OFFT.CD', 3920350393.1)\n('South Asia', 'SAS', '\"PPG, other private creditors (AMT, current US$)\"', 'DT.AMT.PROP.CD', 207766207.6)\n('South Asia', 'SAS', '\"PPG, other private creditors (INT, current US$)\"', 'DT.INT.PROP.CD', 5756000.0)\n('South Asia', 'SAS', '\"PPG, private creditors (AMT, current US$)\"', 'DT.AMT.PRVT.CD', 10095901458.2)\n('South Asia', 'SAS', '\"PPG, private creditors (DIS, current US$)\"', 'DT.DIS.PRVT.CD', 219553713.2)\n('South Asia', 'SAS', '\"PPG, private creditors (INT, current US$)\"', 'DT.INT.PRVT.CD', 2198096995.0)\n('South Asia', 'SAS', '\"Principal repayments on external debt, long-term (AMT, current US$)\"', 'DT.AMT.DLXF.CD', 48756295898.2)\n('South Asia', 'SAS', '\"Principal repayments on external debt, private nonguaranteed (PNG) (AMT, current US$)\"', 'DT.AMT.DPNG.CD', 24370850062.4)\n('Sri Lanka', 'LKA', '\"Disbursements on external debt, long-term (DIS, current US$)\"', 'DT.DIS.DLXF.CD', 2547120639.9)\n('Sri Lanka', 'LKA', '\"Interest payments on external debt, long-term (INT, current US$)\"', 'DT.INT.DLXF.CD', 1304221181.4)\n('Sri Lanka', 'LKA', '\"Interest payments on external debt, private nonguaranteed (PNG) (INT, current US$)\"', 'DT.INT.DPNG.CD', 268295000.0)\n('Sri Lanka', 'LKA', '\"PPG, bilateral (AMT, current US$)\"', 'DT.AMT.BLAT.CD', 1075437996.6)\n('Sri Lanka', 'LKA', '\"PPG, bilateral (DIS, current US$)\"', 'DT.DIS.BLAT.CD', 1729975495.9)\n('Sri Lanka', 'LKA', '\"PPG, bilateral (INT, current US$)\"', 'DT.INT.BLAT.CD', 270096709.9)\n('Sri Lanka', 'LKA', '\"PPG, bonds (AMT, current US$)\"', 'DT.AMT.PBND.CD', 1750000000.0)\n('Sri Lanka', 'LKA', '\"PPG, bonds (INT, current US$)\"', 'DT.INT.PBND.CD', 571993000.0)\n('Sri Lanka', 'LKA', '\"PPG, commercial banks (AMT, current US$)\"', 'DT.AMT.PCBK.CD', 529046985.1)\n('Sri Lanka', 'LKA', '\"PPG, commercial banks (DIS, current US$)\"', 'DT.DIS.PCBK.CD', 77491628.09999998)\n('Sri Lanka', 'LKA', '\"PPG, commercial banks (INT, current US$)\"', 'DT.INT.PCBK.CD', 48689796.2)\n('Sri Lanka', 'LKA', '\"PPG, multilateral (AMT, current US$)\"', 'DT.AMT.MLAT.CD', 449771961.1)\n('Sri Lanka', 'LKA', '\"PPG, multilateral (DIS, current US$)\"', 'DT.DIS.MLAT.CD', 739653515.8999999)\n('Sri Lanka', 'LKA', '\"PPG, multilateral (INT, current US$)\"', 'DT.INT.MLAT.CD', 140722675.3)\n('Sri Lanka', 'LKA', '\"PPG, official creditors (AMT, current US$)\"', 'DT.AMT.OFFT.CD', 1525209957.7)\n('Sri Lanka', 'LKA', '\"PPG, official creditors (DIS, current US$)\"', 'DT.DIS.OFFT.CD', 2469629011.8)\n('Sri Lanka', 'LKA', '\"PPG, official creditors (INT, current US$)\"', 'DT.INT.OFFT.CD', 410819385.2)\n('Sri Lanka', 'LKA', '\"PPG, other private creditors (AMT, current US$)\"', 'DT.AMT.PROP.CD', 151529090.9)\n('Sri Lanka', 'LKA', '\"PPG, other private creditors (INT, current US$)\"', 'DT.INT.PROP.CD', 4424000.0)\n('Sri Lanka', 'LKA', '\"PPG, private creditors (AMT, current US$)\"', 'DT.AMT.PRVT.CD', 2430576076.0)\n('Sri Lanka', 'LKA', '\"PPG, private creditors (DIS, current US$)\"', 'DT.DIS.PRVT.CD', 77491628.09999998)\n('Sri Lanka', 'LKA', '\"PPG, private creditors (INT, current US$)\"', 'DT.INT.PRVT.CD', 625106796.2)\n('Sri Lanka', 'LKA', '\"Principal repayments on external debt, long-term (AMT, current US$)\"', 'DT.AMT.DLXF.CD', 5761489255.9)\n('Sri Lanka', 'LKA', '\"Principal repayments on external debt, private nonguaranteed (PNG) (AMT, current US$)\"', 'DT.AMT.DPNG.CD', 1805703222.2)\n('St. Lucia', 'LCA', '\"Disbursements on external debt, long-term (DIS, current US$)\"', 'DT.DIS.DLXF.CD', 37459842.2)\n('St. Lucia', 'LCA', '\"Interest payments on external debt, long-term (INT, current US$)\"', 'DT.INT.DLXF.CD', 4891779.5)\n('St. Lucia', 'LCA', '\"PPG, bilateral (AMT, current US$)\"', 'DT.AMT.BLAT.CD', 5113457.5)\n('St. Lucia', 'LCA', '\"PPG, bilateral (DIS, current US$)\"', 'DT.DIS.BLAT.CD', 5713700.5)\n('St. Lucia', 'LCA', '\"PPG, bilateral (INT, current US$)\"', 'DT.INT.BLAT.CD', 1375737.7)\n('St. Lucia', 'LCA', '\"PPG, bonds (AMT, current US$)\"', 'DT.AMT.PBND.CD', 200000.0)\n('St. Lucia', 'LCA', '\"PPG, bonds (INT, current US$)\"', 'DT.INT.PBND.CD', 85925.9)\n('St. Lucia', 'LCA', '\"PPG, multilateral (AMT, current US$)\"', 'DT.AMT.MLAT.CD', 15019216.3)\n('St. Lucia', 'LCA', '\"PPG, multilateral (DIS, current US$)\"', 'DT.DIS.MLAT.CD', 31746141.7)\n('St. Lucia', 'LCA', '\"PPG, multilateral (INT, current US$)\"', 'DT.INT.MLAT.CD', 3430115.9)\n('St. Lucia', 'LCA', '\"PPG, official creditors (AMT, current US$)\"', 'DT.AMT.OFFT.CD', 20132673.8)\n('St. Lucia', 'LCA', '\"PPG, official creditors (DIS, current US$)\"', 'DT.DIS.OFFT.CD', 37459842.2)\n('St. Lucia', 'LCA', '\"PPG, official creditors (INT, current US$)\"', 'DT.INT.OFFT.CD', 4805853.6)\n('St. Lucia', 'LCA', '\"PPG, private creditors (AMT, current US$)\"', 'DT.AMT.PRVT.CD', 200000.0)\n('St. Lucia', 'LCA', '\"PPG, private creditors (INT, current US$)\"', 'DT.INT.PRVT.CD', 85925.9)\n('St. Lucia', 'LCA', '\"Principal repayments on external debt, long-term (AMT, current US$)\"', 'DT.AMT.DLXF.CD', 20332673.8)\n('St. Vincent and the Grenadines', 'VCT', '\"Disbursements on external debt, long-term (DIS, current US$)\"', 'DT.DIS.DLXF.CD', 33458473.7)\n('St. Vincent and the Grenadines', 'VCT', '\"Interest payments on external debt, long-term (INT, current US$)\"', 'DT.INT.DLXF.CD', 6817648.3)\n('St. Vincent and the Grenadines', 'VCT', '\"PPG, bilateral (AMT, current US$)\"', 'DT.AMT.BLAT.CD', 3070092.3)\n('St. Vincent and the Grenadines', 'VCT', '\"PPG, bilateral (DIS, current US$)\"', 'DT.DIS.BLAT.CD', 8155461.4)\n('St. Vincent and the Grenadines', 'VCT', '\"PPG, bilateral (INT, current US$)\"', 'DT.INT.BLAT.CD', 1181883.8)\n('St. Vincent and the Grenadines', 'VCT', '\"PPG, bonds (AMT, current US$)\"', 'DT.AMT.PBND.CD', 1225216.3)\n('St. Vincent and the Grenadines', 'VCT', '\"PPG, bonds (INT, current US$)\"', 'DT.INT.PBND.CD', 567777.8)\n('St. Vincent and the Grenadines', 'VCT', '\"PPG, commercial banks (AMT, current US$)\"', 'DT.AMT.PCBK.CD', 500142.9)\n('St. Vincent and the Grenadines', 'VCT', '\"PPG, commercial banks (INT, current US$)\"', 'DT.INT.PCBK.CD', 8000.0)\n('St. Vincent and the Grenadines', 'VCT', '\"PPG, multilateral (AMT, current US$)\"', 'DT.AMT.MLAT.CD', 21615600.7)\n('St. Vincent and the Grenadines', 'VCT', '\"PPG, multilateral (DIS, current US$)\"', 'DT.DIS.MLAT.CD', 25303012.3)\n('St. Vincent and the Grenadines', 'VCT', '\"PPG, multilateral (INT, current US$)\"', 'DT.INT.MLAT.CD', 5059986.7)\n('St. Vincent and the Grenadines', 'VCT', '\"PPG, official creditors (AMT, current US$)\"', 'DT.AMT.OFFT.CD', 24685693.0)\n('St. Vincent and the Grenadines', 'VCT', '\"PPG, official creditors (DIS, current US$)\"', 'DT.DIS.OFFT.CD', 33458473.7)\n('St. Vincent and the Grenadines', 'VCT', '\"PPG, official creditors (INT, current US$)\"', 'DT.INT.OFFT.CD', 6241870.5)\n('St. Vincent and the Grenadines', 'VCT', '\"PPG, private creditors (AMT, current US$)\"', 'DT.AMT.PRVT.CD', 1725359.2)\n('St. Vincent and the Grenadines', 'VCT', '\"PPG, private creditors (INT, current US$)\"', 'DT.INT.PRVT.CD', 575777.8)\n('St. Vincent and the Grenadines', 'VCT', '\"Principal repayments on external debt, long-term (AMT, current US$)\"', 'DT.AMT.DLXF.CD', 26411052.2)\n('Sudan', 'SDN', '\"Disbursements on external debt, long-term (DIS, current US$)\"', 'DT.DIS.DLXF.CD', 704940261.8)\n('Sudan', 'SDN', '\"Interest payments on external debt, long-term (INT, current US$)\"', 'DT.INT.DLXF.CD', 93311473.0)\n('Sudan', 'SDN', '\"PPG, bilateral (AMT, current US$)\"', 'DT.AMT.BLAT.CD', 262918897.8)\n('Sudan', 'SDN', '\"PPG, bilateral (DIS, current US$)\"', 'DT.DIS.BLAT.CD', 376666146.5)\n('Sudan', 'SDN', '\"PPG, bilateral (INT, current US$)\"', 'DT.INT.BLAT.CD', 40572544.5)\n('Sudan', 'SDN', '\"PPG, multilateral (AMT, current US$)\"', 'DT.AMT.MLAT.CD', 217194878.8)\n('Sudan', 'SDN', '\"PPG, multilateral (DIS, current US$)\"', 'DT.DIS.MLAT.CD', 328274115.3)\n('Sudan', 'SDN', '\"PPG, multilateral (INT, current US$)\"', 'DT.INT.MLAT.CD', 52738928.5)\n('Sudan', 'SDN', '\"PPG, official creditors (AMT, current US$)\"', 'DT.AMT.OFFT.CD', 480113776.6)\n('Sudan', 'SDN', '\"PPG, official creditors (DIS, current US$)\"', 'DT.DIS.OFFT.CD', 704940261.8)\n('Sudan', 'SDN', '\"PPG, official creditors (INT, current US$)\"', 'DT.INT.OFFT.CD', 93311473.0)\n('Sudan', 'SDN', '\"Principal repayments on external debt, long-term (AMT, current US$)\"', 'DT.AMT.DLXF.CD', 480113776.6)\n('Syrian Arab Republic', 'SYR', '\"Disbursements on external debt, long-term (DIS, current US$)\"', 'DT.DIS.DLXF.CD', 266925460.4)\n('Syrian Arab Republic', 'SYR', '\"Interest payments on external debt, long-term (INT, current US$)\"', 'DT.INT.DLXF.CD', 39165280.6)\n('Syrian Arab Republic', 'SYR', '\"PPG, bilateral (AMT, current US$)\"', 'DT.AMT.BLAT.CD', 159358328.9)\n('Syrian Arab Republic', 'SYR', '\"PPG, bilateral (DIS, current US$)\"', 'DT.DIS.BLAT.CD', 126505578.0)\n('Syrian Arab Republic', 'SYR', '\"PPG, bilateral (INT, current US$)\"', 'DT.INT.BLAT.CD', 9269996.5)\n('Syrian Arab Republic', 'SYR', '\"PPG, multilateral (AMT, current US$)\"', 'DT.AMT.MLAT.CD', 147903571.1)\n('Syrian Arab Republic', 'SYR', '\"PPG, multilateral (DIS, current US$)\"', 'DT.DIS.MLAT.CD', 140419882.4)\n('Syrian Arab Republic', 'SYR', '\"PPG, multilateral (INT, current US$)\"', 'DT.INT.MLAT.CD', 29895284.1)\n('Syrian Arab Republic', 'SYR', '\"PPG, official creditors (AMT, current US$)\"', 'DT.AMT.OFFT.CD', 307261900.0)\n('Syrian Arab Republic', 'SYR', '\"PPG, official creditors (DIS, current US$)\"', 'DT.DIS.OFFT.CD', 266925460.4)\n('Syrian Arab Republic', 'SYR', '\"PPG, official creditors (INT, current US$)\"', 'DT.INT.OFFT.CD', 39165280.6)\n('Syrian Arab Republic', 'SYR', '\"Principal repayments on external debt, long-term (AMT, current US$)\"', 'DT.AMT.DLXF.CD', 307261900.0)\n('Tajikistan', 'TJK', '\"Disbursements on external debt, long-term (DIS, current US$)\"', 'DT.DIS.DLXF.CD', 89888943.9)\n('Tajikistan', 'TJK', '\"Interest payments on external debt, long-term (INT, current US$)\"', 'DT.INT.DLXF.CD', 95265217.6)\n('Tajikistan', 'TJK', '\"Interest payments on external debt, private nonguaranteed (PNG) (INT, current US$)\"', 'DT.INT.DPNG.CD', 57094000.0)\n('Tajikistan', 'TJK', '\"PPG, bilateral (AMT, current US$)\"', 'DT.AMT.BLAT.CD', 73281257.2)\n('Tajikistan', 'TJK', '\"PPG, bilateral (DIS, current US$)\"', 'DT.DIS.BLAT.CD', 4600834.4)\n('Tajikistan', 'TJK', '\"PPG, bilateral (INT, current US$)\"', 'DT.INT.BLAT.CD', 26333637.2)\n('Tajikistan', 'TJK', '\"PPG, multilateral (AMT, current US$)\"', 'DT.AMT.MLAT.CD', 59062982.0)\n('Tajikistan', 'TJK', '\"PPG, multilateral (DIS, current US$)\"', 'DT.DIS.MLAT.CD', 85288109.5)\n('Tajikistan', 'TJK', '\"PPG, multilateral (INT, current US$)\"', 'DT.INT.MLAT.CD', 11837580.4)\n('Tajikistan', 'TJK', '\"PPG, official creditors (AMT, current US$)\"', 'DT.AMT.OFFT.CD', 132344239.2)\n('Tajikistan', 'TJK', '\"PPG, official creditors (DIS, current US$)\"', 'DT.DIS.OFFT.CD', 89888943.9)\n('Tajikistan', 'TJK', '\"PPG, official creditors (INT, current US$)\"', 'DT.INT.OFFT.CD', 38171217.6)\n('Tajikistan', 'TJK', '\"Principal repayments on external debt, long-term (AMT, current US$)\"', 'DT.AMT.DLXF.CD', 467153429.2)\n('Tajikistan', 'TJK', '\"Principal repayments on external debt, private nonguaranteed (PNG) (AMT, current US$)\"', 'DT.AMT.DPNG.CD', 334809190.0)\n('Tanzania', 'TZA', '\"Disbursements on external debt, long-term (DIS, current US$)\"', 'DT.DIS.DLXF.CD', 1166055814.5)\n('Tanzania', 'TZA', '\"Interest payments on external debt, long-term (INT, current US$)\"', 'DT.INT.DLXF.CD', 283734011.6)\n('Tanzania', 'TZA', '\"Interest payments on external debt, private nonguaranteed (PNG) (INT, current US$)\"', 'DT.INT.DPNG.CD', 104305000.0)\n('Tanzania', 'TZA', '\"PPG, bilateral (AMT, current US$)\"', 'DT.AMT.BLAT.CD', 194944695.3)\n('Tanzania', 'TZA', '\"PPG, bilateral (DIS, current US$)\"', 'DT.DIS.BLAT.CD', 150348676.0)\n('Tanzania', 'TZA', '\"PPG, bilateral (INT, current US$)\"', 'DT.INT.BLAT.CD', 40941173.9)\n('Tanzania', 'TZA', '\"PPG, commercial banks (AMT, current US$)\"', 'DT.AMT.PCBK.CD', 440124365.3)\n('Tanzania', 'TZA', '\"PPG, commercial banks (INT, current US$)\"', 'DT.INT.PCBK.CD', 50780712.8)\n('Tanzania', 'TZA', '\"PPG, multilateral (AMT, current US$)\"', 'DT.AMT.MLAT.CD', 141436637.0)\n('Tanzania', 'TZA', '\"PPG, multilateral (DIS, current US$)\"', 'DT.DIS.MLAT.CD', 1015707138.5)\n('Tanzania', 'TZA', '\"PPG, multilateral (INT, current US$)\"', 'DT.INT.MLAT.CD', 87707124.9)\n('Tanzania', 'TZA', '\"PPG, official creditors (AMT, current US$)\"', 'DT.AMT.OFFT.CD', 336381332.3)\n('Tanzania', 'TZA', '\"PPG, official creditors (DIS, current US$)\"', 'DT.DIS.OFFT.CD', 1166055814.5)\n('Tanzania', 'TZA', '\"PPG, official creditors (INT, current US$)\"', 'DT.INT.OFFT.CD', 128648298.8)\n('Tanzania', 'TZA', '\"PPG, other private creditors (AMT, current US$)\"', 'DT.AMT.PROP.CD', 45783.8)\n('Tanzania', 'TZA', '\"PPG, other private creditors (INT, current US$)\"', 'DT.INT.PROP.CD', 0.0)\n('Tanzania', 'TZA', '\"PPG, private creditors (AMT, current US$)\"', 'DT.AMT.PRVT.CD', 440170149.1)\n('Tanzania', 'TZA', '\"PPG, private creditors (INT, current US$)\"', 'DT.INT.PRVT.CD', 50780712.8)\n('Tanzania', 'TZA', '\"Principal repayments on external debt, long-term (AMT, current US$)\"', 'DT.AMT.DLXF.CD', 1388218481.4)\n('Tanzania', 'TZA', '\"Principal repayments on external debt, private nonguaranteed (PNG) (AMT, current US$)\"', 'DT.AMT.DPNG.CD', 611667000.0)\n('Thailand', 'THA', '\"Disbursements on external debt, long-term (DIS, current US$)\"', 'DT.DIS.DLXF.CD', 301616651.9)\n('Thailand', 'THA', '\"Interest payments on external debt, long-term (INT, current US$)\"', 'DT.INT.DLXF.CD', 1844227471.1)\n('Thailand', 'THA', '\"Interest payments on external debt, private nonguaranteed (PNG) (INT, current US$)\"', 'DT.INT.DPNG.CD', 1347170000.0)\n('Thailand', 'THA', '\"PPG, bilateral (AMT, current US$)\"', 'DT.AMT.BLAT.CD', 277799616.8)\n('Thailand', 'THA', '\"PPG, bilateral (DIS, current US$)\"', 'DT.DIS.BLAT.CD', 301616651.9)\n('Thailand', 'THA', '\"PPG, bilateral (INT, current US$)\"', 'DT.INT.BLAT.CD', 59731471.1)\n('Thailand', 'THA', '\"PPG, bonds (AMT, current US$)\"', 'DT.AMT.PBND.CD', 0.0)\n('Thailand', 'THA', '\"PPG, bonds (INT, current US$)\"', 'DT.INT.PBND.CD', 410324000.0)\n('Thailand', 'THA', '\"PPG, commercial banks (AMT, current US$)\"', 'DT.AMT.PCBK.CD', 0.0)\n('Thailand', 'THA', '\"PPG, commercial banks (INT, current US$)\"', 'DT.INT.PCBK.CD', 498000.0)\n('Thailand', 'THA', '\"PPG, multilateral (AMT, current US$)\"', 'DT.AMT.MLAT.CD', 39071571.5)\n('Thailand', 'THA', '\"PPG, multilateral (INT, current US$)\"', 'DT.INT.MLAT.CD', 26504000.0)\n('Thailand', 'THA', '\"PPG, official creditors (AMT, current US$)\"', 'DT.AMT.OFFT.CD', 316871188.3)\n('Thailand', 'THA', '\"PPG, official creditors (DIS, current US$)\"', 'DT.DIS.OFFT.CD', 301616651.9)\n('Thailand', 'THA', '\"PPG, official creditors (INT, current US$)\"', 'DT.INT.OFFT.CD', 86235471.09999998)\n('Thailand', 'THA', '\"PPG, private creditors (AMT, current US$)\"', 'DT.AMT.PRVT.CD', 0.0)\n('Thailand', 'THA', '\"PPG, private creditors (INT, current US$)\"', 'DT.INT.PRVT.CD', 410822000.0)\n('Thailand', 'THA', '\"Principal repayments on external debt, long-term (AMT, current US$)\"', 'DT.AMT.DLXF.CD', 5914706998.3)\n('Thailand', 'THA', '\"Principal repayments on external debt, private nonguaranteed (PNG) (AMT, current US$)\"', 'DT.AMT.DPNG.CD', 5597835810.0)\n('Timor-Leste', 'TLS', '\"Disbursements on external debt, long-term (DIS, current US$)\"', 'DT.DIS.DLXF.CD', 21799986.4)\n('Timor-Leste', 'TLS', '\"Interest payments on external debt, long-term (INT, current US$)\"', 'DT.INT.DLXF.CD', 1042000.0)\n('Timor-Leste', 'TLS', '\"PPG, bilateral (DIS, current US$)\"', 'DT.DIS.BLAT.CD', 9869907.0)\n('Timor-Leste', 'TLS', '\"PPG, multilateral (AMT, current US$)\"', 'DT.AMT.MLAT.CD', 825000.0)\n('Timor-Leste', 'TLS', '\"PPG, multilateral (DIS, current US$)\"', 'DT.DIS.MLAT.CD', 11930079.4)\n('Timor-Leste', 'TLS', '\"PPG, multilateral (INT, current US$)\"', 'DT.INT.MLAT.CD', 1042000.0)\n('Timor-Leste', 'TLS', '\"PPG, official creditors (AMT, current US$)\"', 'DT.AMT.OFFT.CD', 825000.0)\n('Timor-Leste', 'TLS', '\"PPG, official creditors (DIS, current US$)\"', 'DT.DIS.OFFT.CD', 21799986.4)\n('Timor-Leste', 'TLS', '\"PPG, official creditors (INT, current US$)\"', 'DT.INT.OFFT.CD', 1042000.0)\n('Timor-Leste', 'TLS', '\"Principal repayments on external debt, long-term (AMT, current US$)\"', 'DT.AMT.DLXF.CD', 825000.0)\n('Togo', 'TGO', '\"Disbursements on external debt, long-term (DIS, current US$)\"', 'DT.DIS.DLXF.CD', 236837922.9)\n('Togo', 'TGO', '\"Interest payments on external debt, long-term (INT, current US$)\"', 'DT.INT.DLXF.CD', 29685476.6)\n('Togo', 'TGO', '\"PPG, bilateral (AMT, current US$)\"', 'DT.AMT.BLAT.CD', 25160550.3)\n('Togo', 'TGO', '\"PPG, bilateral (DIS, current US$)\"', 'DT.DIS.BLAT.CD', 79978552.9)\n('Togo', 'TGO', '\"PPG, bilateral (INT, current US$)\"', 'DT.INT.BLAT.CD', 12931550.3)\n('Togo', 'TGO', '\"PPG, commercial banks (AMT, current US$)\"', 'DT.AMT.PCBK.CD', 4453240.8)\n('Togo', 'TGO', '\"PPG, commercial banks (INT, current US$)\"', 'DT.INT.PCBK.CD', 310618.7)\n('Togo', 'TGO', '\"PPG, multilateral (AMT, current US$)\"', 'DT.AMT.MLAT.CD', 44198800.7)\n('Togo', 'TGO', '\"PPG, multilateral (DIS, current US$)\"', 'DT.DIS.MLAT.CD', 156859370.0)\n('Togo', 'TGO', '\"PPG, multilateral (INT, current US$)\"', 'DT.INT.MLAT.CD', 16443307.6)\n('Togo', 'TGO', '\"PPG, official creditors (AMT, current US$)\"', 'DT.AMT.OFFT.CD', 69359351.0)\n('Togo', 'TGO', '\"PPG, official creditors (DIS, current US$)\"', 'DT.DIS.OFFT.CD', 236837922.9)\n('Togo', 'TGO', '\"PPG, official creditors (INT, current US$)\"', 'DT.INT.OFFT.CD', 29374857.9)\n('Togo', 'TGO', '\"PPG, private creditors (AMT, current US$)\"', 'DT.AMT.PRVT.CD', 4453240.8)\n('Togo', 'TGO', '\"PPG, private creditors (INT, current US$)\"', 'DT.INT.PRVT.CD', 310618.7)\n('Togo', 'TGO', '\"Principal repayments on external debt, long-term (AMT, current US$)\"', 'DT.AMT.DLXF.CD', 73812591.79999998)\n('Tonga', 'TON', '\"Disbursements on external debt, long-term (DIS, current US$)\"', 'DT.DIS.DLXF.CD', 5529604.8)\n('Tonga', 'TON', '\"Interest payments on external debt, long-term (INT, current US$)\"', 'DT.INT.DLXF.CD', 2503586.2)\n('Tonga', 'TON', '\"PPG, bilateral (AMT, current US$)\"', 'DT.AMT.BLAT.CD', 7554054.0)\n('Tonga', 'TON', '\"PPG, bilateral (INT, current US$)\"', 'DT.INT.BLAT.CD', 1559371.0)\n('Tonga', 'TON', '\"PPG, commercial banks (AMT, current US$)\"', 'DT.AMT.PCBK.CD', 24603.4)\n('Tonga', 'TON', '\"PPG, commercial banks (INT, current US$)\"', 'DT.INT.PCBK.CD', 0.0)\n('Tonga', 'TON', '\"PPG, official creditors (AMT, current US$)\"', 'DT.AMT.OFFT.CD', 10345307.2)\n('Tonga', 'TON', '\"PPG, official creditors (DIS, current US$)\"', 'DT.DIS.OFFT.CD', 5529604.8)\n('Tonga', 'TON', '\"PPG, official creditors (INT, current US$)\"', 'DT.INT.OFFT.CD', 2503586.2)\n('Tonga', 'TON', '\"PPG, private creditors (AMT, current US$)\"', 'DT.AMT.PRVT.CD', 24603.4)\n('Tonga', 'TON', '\"PPG, private creditors (INT, current US$)\"', 'DT.INT.PRVT.CD', 0.0)\n('Tonga', 'TON', '\"Principal repayments on external debt, long-term (AMT, current US$)\"', 'DT.AMT.DLXF.CD', 10369910.6)\n('Tunisia', 'TUN', '\"Disbursements on external debt, long-term (DIS, current US$)\"', 'DT.DIS.DLXF.CD', 1820582243.5)\n('Tunisia', 'TUN', '\"Interest payments on external debt, long-term (INT, current US$)\"', 'DT.INT.DLXF.CD', 558379079.9)\n('Tunisia', 'TUN', '\"Interest payments on external debt, private nonguaranteed (PNG) (INT, current US$)\"', 'DT.INT.DPNG.CD', 26173000.0)\n('Tunisia', 'TUN', '\"PPG, bilateral (AMT, current US$)\"', 'DT.AMT.BLAT.CD', 507052864.2)\n('Tunisia', 'TUN', '\"PPG, bilateral (DIS, current US$)\"', 'DT.DIS.BLAT.CD', 855186119.8999999)\n('Tunisia', 'TUN', '\"PPG, bilateral (INT, current US$)\"', 'DT.INT.BLAT.CD', 87248174.79999998)\n('Tunisia', 'TUN', '\"PPG, bonds (AMT, current US$)\"', 'DT.AMT.PBND.CD', 735000000.0)\n('Tunisia', 'TUN', '\"PPG, bonds (INT, current US$)\"', 'DT.INT.PBND.CD', 238989390.1)\n('Tunisia', 'TUN', '\"PPG, commercial banks (AMT, current US$)\"', 'DT.AMT.PCBK.CD', 66123380.1)\n('Tunisia', 'TUN', '\"PPG, commercial banks (DIS, current US$)\"', 'DT.DIS.PCBK.CD', 17291669.3)\n('Tunisia', 'TUN', '\"PPG, commercial banks (INT, current US$)\"', 'DT.INT.PCBK.CD', 12030683.8)\n('Tunisia', 'TUN', '\"PPG, multilateral (AMT, current US$)\"', 'DT.AMT.MLAT.CD', 956604000.1)\n('Tunisia', 'TUN', '\"PPG, multilateral (DIS, current US$)\"', 'DT.DIS.MLAT.CD', 947210895.8)\n('Tunisia', 'TUN', '\"PPG, multilateral (INT, current US$)\"', 'DT.INT.MLAT.CD', 193716342.4)\n('Tunisia', 'TUN', '\"PPG, official creditors (AMT, current US$)\"', 'DT.AMT.OFFT.CD', 1463656864.3)\n('Tunisia', 'TUN', '\"PPG, official creditors (DIS, current US$)\"', 'DT.DIS.OFFT.CD', 1802397015.7)\n('Tunisia', 'TUN', '\"PPG, official creditors (INT, current US$)\"', 'DT.INT.OFFT.CD', 280964517.2)\n('Tunisia', 'TUN', '\"PPG, other private creditors (AMT, current US$)\"', 'DT.AMT.PROP.CD', 3796971.4)\n('Tunisia', 'TUN', '\"PPG, other private creditors (DIS, current US$)\"', 'DT.DIS.PROP.CD', 893558.5)\n('Tunisia', 'TUN', '\"PPG, other private creditors (INT, current US$)\"', 'DT.INT.PROP.CD', 221488.8)\n('Tunisia', 'TUN', '\"PPG, private creditors (AMT, current US$)\"', 'DT.AMT.PRVT.CD', 804920351.5)\n('Tunisia', 'TUN', '\"PPG, private creditors (DIS, current US$)\"', 'DT.DIS.PRVT.CD', 18185227.8)\n('Tunisia', 'TUN', '\"PPG, private creditors (INT, current US$)\"', 'DT.INT.PRVT.CD', 251241562.7)\n('Tunisia', 'TUN', '\"Principal repayments on external debt, long-term (AMT, current US$)\"', 'DT.AMT.DLXF.CD', 2422062635.8)\n('Tunisia', 'TUN', '\"Principal repayments on external debt, private nonguaranteed (PNG) (AMT, current US$)\"', 'DT.AMT.DPNG.CD', 153485420.0)\n('Turkey', 'TUR', '\"Disbursements on external debt, long-term (DIS, current US$)\"', 'DT.DIS.DLXF.CD', 2514443147.1)\n('Turkey', 'TUR', '\"Interest payments on external debt, long-term (INT, current US$)\"', 'DT.INT.DLXF.CD', 12095568642.2)\n('Turkey', 'TUR', '\"Interest payments on external debt, private nonguaranteed (PNG) (INT, current US$)\"', 'DT.INT.DPNG.CD', 7453172920.0)\n('Turkey', 'TUR', '\"PPG, bilateral (AMT, current US$)\"', 'DT.AMT.BLAT.CD', 646463879.8)\n('Turkey', 'TUR', '\"PPG, bilateral (DIS, current US$)\"', 'DT.DIS.BLAT.CD', 415269075.4)\n('Turkey', 'TUR', '\"PPG, bilateral (INT, current US$)\"', 'DT.INT.BLAT.CD', 110410777.7)\n('Turkey', 'TUR', '\"PPG, bonds (AMT, current US$)\"', 'DT.AMT.PBND.CD', 6499125000.0)\n('Turkey', 'TUR', '\"PPG, bonds (INT, current US$)\"', 'DT.INT.PBND.CD', 3786751212.0)\n('Turkey', 'TUR', '\"PPG, commercial banks (AMT, current US$)\"', 'DT.AMT.PCBK.CD', 1527243953.1)\n('Turkey', 'TUR', '\"PPG, commercial banks (DIS, current US$)\"', 'DT.DIS.PCBK.CD', 509650169.6)\n('Turkey', 'TUR', '\"PPG, commercial banks (INT, current US$)\"', 'DT.INT.PCBK.CD', 220044039.8)\n('Turkey', 'TUR', '\"PPG, multilateral (AMT, current US$)\"', 'DT.AMT.MLAT.CD', 2932698678.0)\n('Turkey', 'TUR', '\"PPG, multilateral (DIS, current US$)\"', 'DT.DIS.MLAT.CD', 1589523902.1)\n('Turkey', 'TUR', '\"PPG, multilateral (INT, current US$)\"', 'DT.INT.MLAT.CD', 524617190.9)\n('Turkey', 'TUR', '\"PPG, official creditors (AMT, current US$)\"', 'DT.AMT.OFFT.CD', 3579162557.8)\n('Turkey', 'TUR', '\"PPG, official creditors (DIS, current US$)\"', 'DT.DIS.OFFT.CD', 2004792977.5)\n('Turkey', 'TUR', '\"PPG, official creditors (INT, current US$)\"', 'DT.INT.OFFT.CD', 635027968.6)\n('Turkey', 'TUR', '\"PPG, other private creditors (AMT, current US$)\"', 'DT.AMT.PROP.CD', 33302064.9)\n('Turkey', 'TUR', '\"PPG, other private creditors (INT, current US$)\"', 'DT.INT.PROP.CD', 572501.8)\n('Turkey', 'TUR', '\"PPG, private creditors (AMT, current US$)\"', 'DT.AMT.PRVT.CD', 8059671018.0)\n('Turkey', 'TUR', '\"PPG, private creditors (DIS, current US$)\"', 'DT.DIS.PRVT.CD', 509650169.6)\n('Turkey', 'TUR', '\"PPG, private creditors (INT, current US$)\"', 'DT.INT.PRVT.CD', 4007367753.6)\n('Turkey', 'TUR', '\"Principal repayments on external debt, long-term (AMT, current US$)\"', 'DT.AMT.DLXF.CD', 51555031005.8)\n('Turkey', 'TUR', '\"Principal repayments on external debt, private nonguaranteed (PNG) (AMT, current US$)\"', 'DT.AMT.DPNG.CD', 39916197430.0)\n('Turkmenistan', 'TKM', '\"Interest payments on external debt, long-term (INT, current US$)\"', 'DT.INT.DLXF.CD', 6169623.2)\n('Turkmenistan', 'TKM', '\"Interest payments on external debt, private nonguaranteed (PNG) (INT, current US$)\"', 'DT.INT.DPNG.CD', 1514715.9)\n('Turkmenistan', 'TKM', '\"PPG, bilateral (AMT, current US$)\"', 'DT.AMT.BLAT.CD', 14046164.6)\n('Turkmenistan', 'TKM', '\"PPG, bilateral (INT, current US$)\"', 'DT.INT.BLAT.CD', 2505907.3)\n('Turkmenistan', 'TKM', '\"PPG, multilateral (AMT, current US$)\"', 'DT.AMT.MLAT.CD', 5831189.2)\n('Turkmenistan', 'TKM', '\"PPG, multilateral (INT, current US$)\"', 'DT.INT.MLAT.CD', 2149000.0)\n('Turkmenistan', 'TKM', '\"PPG, official creditors (AMT, current US$)\"', 'DT.AMT.OFFT.CD', 19877353.8)\n('Turkmenistan', 'TKM', '\"PPG, official creditors (INT, current US$)\"', 'DT.INT.OFFT.CD', 4654907.3)\n('Turkmenistan', 'TKM', '\"Principal repayments on external debt, long-term (AMT, current US$)\"', 'DT.AMT.DLXF.CD', 29132060.9)\n('Turkmenistan', 'TKM', '\"Principal repayments on external debt, private nonguaranteed (PNG) (AMT, current US$)\"', 'DT.AMT.DPNG.CD', 9254707.1)\n('Uganda', 'UGA', '\"Disbursements on external debt, long-term (DIS, current US$)\"', 'DT.DIS.DLXF.CD', 1359705707.6)\n('Uganda', 'UGA', '\"Interest payments on external debt, long-term (INT, current US$)\"', 'DT.INT.DLXF.CD', 221400672.8)\n('Uganda', 'UGA', '\"Interest payments on external debt, private nonguaranteed (PNG) (INT, current US$)\"', 'DT.INT.DPNG.CD', 97451000.0)\n('Uganda', 'UGA', '\"PPG, bilateral (AMT, current US$)\"', 'DT.AMT.BLAT.CD', 64110341.2)\n('Uganda', 'UGA', '\"PPG, bilateral (DIS, current US$)\"', 'DT.DIS.BLAT.CD', 538450864.4)\n('Uganda', 'UGA', '\"PPG, bilateral (INT, current US$)\"', 'DT.INT.BLAT.CD', 73813147.0)\n('Uganda', 'UGA', '\"PPG, commercial banks (AMT, current US$)\"', 'DT.AMT.PCBK.CD', 8901204.6)\n('Uganda', 'UGA', '\"PPG, commercial banks (DIS, current US$)\"', 'DT.DIS.PCBK.CD', 14686987.6)\n('Uganda', 'UGA', '\"PPG, commercial banks (INT, current US$)\"', 'DT.INT.PCBK.CD', 1351611.1)\n('Uganda', 'UGA', '\"PPG, multilateral (AMT, current US$)\"', 'DT.AMT.MLAT.CD', 145310077.2)\n('Uganda', 'UGA', '\"PPG, multilateral (DIS, current US$)\"', 'DT.DIS.MLAT.CD', 806567855.6)\n('Uganda', 'UGA', '\"PPG, multilateral (INT, current US$)\"', 'DT.INT.MLAT.CD', 48784914.7)\n('Uganda', 'UGA', '\"PPG, official creditors (AMT, current US$)\"', 'DT.AMT.OFFT.CD', 209420418.4)\n('Uganda', 'UGA', '\"PPG, official creditors (DIS, current US$)\"', 'DT.DIS.OFFT.CD', 1345018720.0)\n('Uganda', 'UGA', '\"PPG, official creditors (INT, current US$)\"', 'DT.INT.OFFT.CD', 122598061.7)\n('Uganda', 'UGA', '\"PPG, private creditors (AMT, current US$)\"', 'DT.AMT.PRVT.CD', 8901204.6)\n('Uganda', 'UGA', '\"PPG, private creditors (DIS, current US$)\"', 'DT.DIS.PRVT.CD', 14686987.6)\n('Uganda', 'UGA', '\"PPG, private creditors (INT, current US$)\"', 'DT.INT.PRVT.CD', 1351611.1)\n('Uganda', 'UGA', '\"Principal repayments on external debt, long-term (AMT, current US$)\"', 'DT.AMT.DLXF.CD', 637469740.6)\n('Uganda', 'UGA', '\"Principal repayments on external debt, private nonguaranteed (PNG) (AMT, current US$)\"', 'DT.AMT.DPNG.CD', 419148117.6)\n('Ukraine', 'UKR', '\"Disbursements on external debt, long-term (DIS, current US$)\"', 'DT.DIS.DLXF.CD', 510350370.6)\n('Ukraine', 'UKR', '\"Interest payments on external debt, long-term (INT, current US$)\"', 'DT.INT.DLXF.CD', 3001506404.4)\n('Ukraine', 'UKR', '\"Interest payments on external debt, private nonguaranteed (PNG) (INT, current US$)\"', 'DT.INT.DPNG.CD', 1647660000.0)\n('Ukraine', 'UKR', '\"PPG, bilateral (AMT, current US$)\"', 'DT.AMT.BLAT.CD', 95941219.4)\n('Ukraine', 'UKR', '\"PPG, bilateral (INT, current US$)\"', 'DT.INT.BLAT.CD', 19809816.8)\n('Ukraine', 'UKR', '\"PPG, bonds (AMT, current US$)\"', 'DT.AMT.PBND.CD', 1977107000.0)\n('Ukraine', 'UKR', '\"PPG, bonds (INT, current US$)\"', 'DT.INT.PBND.CD', 1176828000.0)\n('Ukraine', 'UKR', '\"PPG, multilateral (AMT, current US$)\"', 'DT.AMT.MLAT.CD', 1072472830.3)\n('Ukraine', 'UKR', '\"PPG, multilateral (DIS, current US$)\"', 'DT.DIS.MLAT.CD', 510350370.6)\n('Ukraine', 'UKR', '\"PPG, multilateral (INT, current US$)\"', 'DT.INT.MLAT.CD', 153872076.6)\n('Ukraine', 'UKR', '\"PPG, official creditors (AMT, current US$)\"', 'DT.AMT.OFFT.CD', 1168414049.7)\n('Ukraine', 'UKR', '\"PPG, official creditors (DIS, current US$)\"', 'DT.DIS.OFFT.CD', 510350370.6)\n('Ukraine', 'UKR', '\"PPG, official creditors (INT, current US$)\"', 'DT.INT.OFFT.CD', 173681893.4)\n('Ukraine', 'UKR', '\"PPG, other private creditors (AMT, current US$)\"', 'DT.AMT.PROP.CD', 158881474.4)\n('Ukraine', 'UKR', '\"PPG, other private creditors (INT, current US$)\"', 'DT.INT.PROP.CD', 3336511.0)\n('Ukraine', 'UKR', '\"PPG, private creditors (AMT, current US$)\"', 'DT.AMT.PRVT.CD', 2135988474.4)\n('Ukraine', 'UKR', '\"PPG, private creditors (INT, current US$)\"', 'DT.INT.PRVT.CD', 1180164511.0)\n('Ukraine', 'UKR', '\"Principal repayments on external debt, long-term (AMT, current US$)\"', 'DT.AMT.DLXF.CD', 8148995625.6)\n('Ukraine', 'UKR', '\"Principal repayments on external debt, private nonguaranteed (PNG) (AMT, current US$)\"', 'DT.AMT.DPNG.CD', 4844593101.5)\n('Uzbekistan', 'UZB', '\"Disbursements on external debt, long-term (DIS, current US$)\"', 'DT.DIS.DLXF.CD', 1239046975.1)\n('Uzbekistan', 'UZB', '\"Interest payments on external debt, long-term (INT, current US$)\"', 'DT.INT.DLXF.CD', 436626524.9)\n('Uzbekistan', 'UZB', '\"Interest payments on external debt, private nonguaranteed (PNG) (INT, current US$)\"', 'DT.INT.DPNG.CD', 260318000.0)\n('Uzbekistan', 'UZB', '\"PPG, bilateral (AMT, current US$)\"', 'DT.AMT.BLAT.CD', 273378640.0)\n('Uzbekistan', 'UZB', '\"PPG, bilateral (DIS, current US$)\"', 'DT.DIS.BLAT.CD', 503520641.3)\n('Uzbekistan', 'UZB', '\"PPG, bilateral (INT, current US$)\"', 'DT.INT.BLAT.CD', 64937572.1)\n('Uzbekistan', 'UZB', '\"PPG, commercial banks (AMT, current US$)\"', 'DT.AMT.PCBK.CD', 53342975.3)\n('Uzbekistan', 'UZB', '\"PPG, commercial banks (INT, current US$)\"', 'DT.INT.PCBK.CD', 7547194.9)\n('Uzbekistan', 'UZB', '\"PPG, multilateral (AMT, current US$)\"', 'DT.AMT.MLAT.CD', 244240575.6)\n('Uzbekistan', 'UZB', '\"PPG, multilateral (DIS, current US$)\"', 'DT.DIS.MLAT.CD', 735526333.7999998)\n('Uzbekistan', 'UZB', '\"PPG, multilateral (INT, current US$)\"', 'DT.INT.MLAT.CD', 103823757.9)\n('Uzbekistan', 'UZB', '\"PPG, official creditors (AMT, current US$)\"', 'DT.AMT.OFFT.CD', 517619215.6)\n('Uzbekistan', 'UZB', '\"PPG, official creditors (DIS, current US$)\"', 'DT.DIS.OFFT.CD', 1239046975.1)\n('Uzbekistan', 'UZB', '\"PPG, official creditors (INT, current US$)\"', 'DT.INT.OFFT.CD', 168761330.0)\n('Uzbekistan', 'UZB', '\"PPG, private creditors (AMT, current US$)\"', 'DT.AMT.PRVT.CD', 53342975.3)\n('Uzbekistan', 'UZB', '\"PPG, private creditors (INT, current US$)\"', 'DT.INT.PRVT.CD', 7547194.9)\n('Uzbekistan', 'UZB', '\"Principal repayments on external debt, long-term (AMT, current US$)\"', 'DT.AMT.DLXF.CD', 2097517190.9)\n('Uzbekistan', 'UZB', '\"Principal repayments on external debt, private nonguaranteed (PNG) (AMT, current US$)\"', 'DT.AMT.DPNG.CD', 1526555000.0)\n('Vanuatu', 'VUT', '\"Disbursements on external debt, long-term (DIS, current US$)\"', 'DT.DIS.DLXF.CD', 38626756.0)\n('Vanuatu', 'VUT', '\"Interest payments on external debt, long-term (INT, current US$)\"', 'DT.INT.DLXF.CD', 5031805.2)\n('Vanuatu', 'VUT', '\"PPG, bilateral (AMT, current US$)\"', 'DT.AMT.BLAT.CD', 10956691.0)\n('Vanuatu', 'VUT', '\"PPG, bilateral (DIS, current US$)\"', 'DT.DIS.BLAT.CD', 9007166.6)\n('Vanuatu', 'VUT', '\"PPG, bilateral (INT, current US$)\"', 'DT.INT.BLAT.CD', 3160158.4)\n('Vanuatu', 'VUT', '\"PPG, multilateral (AMT, current US$)\"', 'DT.AMT.MLAT.CD', 2593419.3)\n('Vanuatu', 'VUT', '\"PPG, multilateral (DIS, current US$)\"', 'DT.DIS.MLAT.CD', 29619589.4)\n('Vanuatu', 'VUT', '\"PPG, multilateral (INT, current US$)\"', 'DT.INT.MLAT.CD', 1871646.8)\n('Vanuatu', 'VUT', '\"PPG, official creditors (AMT, current US$)\"', 'DT.AMT.OFFT.CD', 13550110.3)\n('Vanuatu', 'VUT', '\"PPG, official creditors (DIS, current US$)\"', 'DT.DIS.OFFT.CD', 38626756.0)\n('Vanuatu', 'VUT', '\"PPG, official creditors (INT, current US$)\"', 'DT.INT.OFFT.CD', 5031805.2)\n('Vanuatu', 'VUT', '\"Principal repayments on external debt, long-term (AMT, current US$)\"', 'DT.AMT.DLXF.CD', 13550110.3)\n('\"Venezuela, RB\"', 'VEN', '\"Disbursements on external debt, long-term (DIS, current US$)\"', 'DT.DIS.DLXF.CD', 521048463.1)\n('\"Venezuela, RB\"', 'VEN', '\"Interest payments on external debt, long-term (INT, current US$)\"', 'DT.INT.DLXF.CD', 4159342365.6)\n('\"Venezuela, RB\"', 'VEN', '\"Interest payments on external debt, private nonguaranteed (PNG) (INT, current US$)\"', 'DT.INT.DPNG.CD', 1111403000.0)\n('\"Venezuela, RB\"', 'VEN', '\"PPG, bilateral (AMT, current US$)\"', 'DT.AMT.BLAT.CD', 106054401.7)\n('\"Venezuela, RB\"', 'VEN', '\"PPG, bilateral (DIS, current US$)\"', 'DT.DIS.BLAT.CD', 65088096.0)\n('\"Venezuela, RB\"', 'VEN', '\"PPG, bilateral (INT, current US$)\"', 'DT.INT.BLAT.CD', 13163216.3)\n('\"Venezuela, RB\"', 'VEN', '\"PPG, bonds (AMT, current US$)\"', 'DT.AMT.PBND.CD', 2551518555.6)\n('\"Venezuela, RB\"', 'VEN', '\"PPG, bonds (INT, current US$)\"', 'DT.INT.PBND.CD', 2810526000.0)\n('\"Venezuela, RB\"', 'VEN', '\"PPG, commercial banks (AMT, current US$)\"', 'DT.AMT.PCBK.CD', 174069119.8)\n('\"Venezuela, RB\"', 'VEN', '\"PPG, commercial banks (DIS, current US$)\"', 'DT.DIS.PCBK.CD', 102206207.3)\n('\"Venezuela, RB\"', 'VEN', '\"PPG, commercial banks (INT, current US$)\"', 'DT.INT.PCBK.CD', 8436089.5)\n('\"Venezuela, RB\"', 'VEN', '\"PPG, multilateral (AMT, current US$)\"', 'DT.AMT.MLAT.CD', 509512564.6)\n('\"Venezuela, RB\"', 'VEN', '\"PPG, multilateral (DIS, current US$)\"', 'DT.DIS.MLAT.CD', 353754159.8)\n('\"Venezuela, RB\"', 'VEN', '\"PPG, multilateral (INT, current US$)\"', 'DT.INT.MLAT.CD', 206837690.9)\n('\"Venezuela, RB\"', 'VEN', '\"PPG, official creditors (AMT, current US$)\"', 'DT.AMT.OFFT.CD', 615566966.3)\n('\"Venezuela, RB\"', 'VEN', '\"PPG, official creditors (DIS, current US$)\"', 'DT.DIS.OFFT.CD', 418842255.8)\n('\"Venezuela, RB\"', 'VEN', '\"PPG, official creditors (INT, current US$)\"', 'DT.INT.OFFT.CD', 220000907.2)\n('\"Venezuela, RB\"', 'VEN', '\"PPG, other private creditors (AMT, current US$)\"', 'DT.AMT.PROP.CD', 20017565.5)\n('\"Venezuela, RB\"', 'VEN', '\"PPG, other private creditors (INT, current US$)\"', 'DT.INT.PROP.CD', 8976368.9)\n('\"Venezuela, RB\"', 'VEN', '\"PPG, private creditors (AMT, current US$)\"', 'DT.AMT.PRVT.CD', 2745605240.9)\n('\"Venezuela, RB\"', 'VEN', '\"PPG, private creditors (DIS, current US$)\"', 'DT.DIS.PRVT.CD', 102206207.3)\n('\"Venezuela, RB\"', 'VEN', '\"PPG, private creditors (INT, current US$)\"', 'DT.INT.PRVT.CD', 2827938458.4)\n('\"Venezuela, RB\"', 'VEN', '\"Principal repayments on external debt, long-term (AMT, current US$)\"', 'DT.AMT.DLXF.CD', 9878659207.2)\n('\"Venezuela, RB\"', 'VEN', '\"Principal repayments on external debt, private nonguaranteed (PNG) (AMT, current US$)\"', 'DT.AMT.DPNG.CD', 6517487000.0)\n('Vietnam', 'VNM', '\"Disbursements on external debt, long-term (DIS, current US$)\"', 'DT.DIS.DLXF.CD', 6494121653.2)\n('Vietnam', 'VNM', '\"Interest payments on external debt, long-term (INT, current US$)\"', 'DT.INT.DLXF.CD', 2120093736.3)\n('Vietnam', 'VNM', '\"Interest payments on external debt, private nonguaranteed (PNG) (INT, current US$)\"', 'DT.INT.DPNG.CD', 965351000.0)\n('Vietnam', 'VNM', '\"PPG, bilateral (AMT, current US$)\"', 'DT.AMT.BLAT.CD', 1561158600.3)\n('Vietnam', 'VNM', '\"PPG, bilateral (DIS, current US$)\"', 'DT.DIS.BLAT.CD', 4134438674.8)\n('Vietnam', 'VNM', '\"PPG, bilateral (INT, current US$)\"', 'DT.INT.BLAT.CD', 502741840.9)\n('Vietnam', 'VNM', '\"PPG, bonds (AMT, current US$)\"', 'DT.AMT.PBND.CD', 13632857.1)\n('Vietnam', 'VNM', '\"PPG, bonds (INT, current US$)\"', 'DT.INT.PBND.CD', 65622000.0)\n('Vietnam', 'VNM', '\"PPG, commercial banks (AMT, current US$)\"', 'DT.AMT.PCBK.CD', 704569299.3)\n('Vietnam', 'VNM', '\"PPG, commercial banks (DIS, current US$)\"', 'DT.DIS.PCBK.CD', 25346927.8)\n('Vietnam', 'VNM', '\"PPG, commercial banks (INT, current US$)\"', 'DT.INT.PCBK.CD', 180617476.7)\n('Vietnam', 'VNM', '\"PPG, multilateral (AMT, current US$)\"', 'DT.AMT.MLAT.CD', 947632152.5)\n('Vietnam', 'VNM', '\"PPG, multilateral (DIS, current US$)\"', 'DT.DIS.MLAT.CD', 2334336050.6)\n('Vietnam', 'VNM', '\"PPG, multilateral (INT, current US$)\"', 'DT.INT.MLAT.CD', 405761418.7)\n('Vietnam', 'VNM', '\"PPG, official creditors (AMT, current US$)\"', 'DT.AMT.OFFT.CD', 2508790752.8)\n('Vietnam', 'VNM', '\"PPG, official creditors (DIS, current US$)\"', 'DT.DIS.OFFT.CD', 6468774725.4)\n('Vietnam', 'VNM', '\"PPG, official creditors (INT, current US$)\"', 'DT.INT.OFFT.CD', 908503259.6)\n('Vietnam', 'VNM', '\"PPG, private creditors (AMT, current US$)\"', 'DT.AMT.PRVT.CD', 718202156.4)\n('Vietnam', 'VNM', '\"PPG, private creditors (DIS, current US$)\"', 'DT.DIS.PRVT.CD', 25346927.8)\n('Vietnam', 'VNM', '\"PPG, private creditors (INT, current US$)\"', 'DT.INT.PRVT.CD', 246239476.7)\n('Vietnam', 'VNM', '\"Principal repayments on external debt, long-term (AMT, current US$)\"', 'DT.AMT.DLXF.CD', 8873505909.2)\n('Vietnam', 'VNM', '\"Principal repayments on external debt, private nonguaranteed (PNG) (AMT, current US$)\"', 'DT.AMT.DPNG.CD', 5646513000.0)\n('\"Yemen, Rep.\"', 'YEM', '\"Disbursements on external debt, long-term (DIS, current US$)\"', 'DT.DIS.DLXF.CD', 402113863.0)\n('\"Yemen, Rep.\"', 'YEM', '\"Interest payments on external debt, long-term (INT, current US$)\"', 'DT.INT.DLXF.CD', 77955354.9)\n('\"Yemen, Rep.\"', 'YEM', '\"PPG, bilateral (AMT, current US$)\"', 'DT.AMT.BLAT.CD', 150087048.6)\n('\"Yemen, Rep.\"', 'YEM', '\"PPG, bilateral (DIS, current US$)\"', 'DT.DIS.BLAT.CD', 91012892.5)\n('\"Yemen, Rep.\"', 'YEM', '\"PPG, bilateral (INT, current US$)\"', 'DT.INT.BLAT.CD', 25996299.6)\n('\"Yemen, Rep.\"', 'YEM', '\"PPG, multilateral (AMT, current US$)\"', 'DT.AMT.MLAT.CD', 220743129.9)\n('\"Yemen, Rep.\"', 'YEM', '\"PPG, multilateral (DIS, current US$)\"', 'DT.DIS.MLAT.CD', 311100970.5)\n('\"Yemen, Rep.\"', 'YEM', '\"PPG, multilateral (INT, current US$)\"', 'DT.INT.MLAT.CD', 51959055.3)\n('\"Yemen, Rep.\"', 'YEM', '\"PPG, official creditors (AMT, current US$)\"', 'DT.AMT.OFFT.CD', 370830178.5)\n('\"Yemen, Rep.\"', 'YEM', '\"PPG, official creditors (DIS, current US$)\"', 'DT.DIS.OFFT.CD', 402113863.0)\n('\"Yemen, Rep.\"', 'YEM', '\"PPG, official creditors (INT, current US$)\"', 'DT.INT.OFFT.CD', 77955354.9)\n('\"Yemen, Rep.\"', 'YEM', '\"Principal repayments on external debt, long-term (AMT, current US$)\"', 'DT.AMT.DLXF.CD', 370830178.5)\n('Zambia', 'ZMB', '\"Disbursements on external debt, long-term (DIS, current US$)\"', 'DT.DIS.DLXF.CD', 1502399702.8)\n('Zambia', 'ZMB', '\"Interest payments on external debt, long-term (INT, current US$)\"', 'DT.INT.DLXF.CD', 642613116.2)\n('Zambia', 'ZMB', '\"Interest payments on external debt, private nonguaranteed (PNG) (INT, current US$)\"', 'DT.INT.DPNG.CD', 124285000.0)\n('Zambia', 'ZMB', '\"PPG, bilateral (AMT, current US$)\"', 'DT.AMT.BLAT.CD', 211048374.3)\n('Zambia', 'ZMB', '\"PPG, bilateral (DIS, current US$)\"', 'DT.DIS.BLAT.CD', 711130463.7)\n('Zambia', 'ZMB', '\"PPG, bilateral (INT, current US$)\"', 'DT.INT.BLAT.CD', 121800491.2)\n('Zambia', 'ZMB', '\"PPG, bonds (AMT, current US$)\"', 'DT.AMT.PBND.CD', 0.0)\n('Zambia', 'ZMB', '\"PPG, bonds (INT, current US$)\"', 'DT.INT.PBND.CD', 237436000.0)\n('Zambia', 'ZMB', '\"PPG, commercial banks (AMT, current US$)\"', 'DT.AMT.PCBK.CD', 386100432.2)\n('Zambia', 'ZMB', '\"PPG, commercial banks (DIS, current US$)\"', 'DT.DIS.PCBK.CD', 383744556.9)\n('Zambia', 'ZMB', '\"PPG, commercial banks (INT, current US$)\"', 'DT.INT.PCBK.CD', 130206000.0)\n('Zambia', 'ZMB', '\"PPG, multilateral (AMT, current US$)\"', 'DT.AMT.MLAT.CD', 53068964.9)\n('Zambia', 'ZMB', '\"PPG, multilateral (DIS, current US$)\"', 'DT.DIS.MLAT.CD', 392541825.1)\n('Zambia', 'ZMB', '\"PPG, multilateral (INT, current US$)\"', 'DT.INT.MLAT.CD', 21418258.1)\n('Zambia', 'ZMB', '\"PPG, official creditors (AMT, current US$)\"', 'DT.AMT.OFFT.CD', 264117339.2)\n('Zambia', 'ZMB', '\"PPG, official creditors (DIS, current US$)\"', 'DT.DIS.OFFT.CD', 1103672288.8)\n('Zambia', 'ZMB', '\"PPG, official creditors (INT, current US$)\"', 'DT.INT.OFFT.CD', 143218749.3)\n('Zambia', 'ZMB', '\"PPG, other private creditors (AMT, current US$)\"', 'DT.AMT.PROP.CD', 34248812.7)\n('Zambia', 'ZMB', '\"PPG, other private creditors (DIS, current US$)\"', 'DT.DIS.PROP.CD', 14982857.1)\n('Zambia', 'ZMB', '\"PPG, other private creditors (INT, current US$)\"', 'DT.INT.PROP.CD', 7467366.9)\n('Zambia', 'ZMB', '\"PPG, private creditors (AMT, current US$)\"', 'DT.AMT.PRVT.CD', 420349244.9)\n('Zambia', 'ZMB', '\"PPG, private creditors (DIS, current US$)\"', 'DT.DIS.PRVT.CD', 398727414.0)\n('Zambia', 'ZMB', '\"PPG, private creditors (INT, current US$)\"', 'DT.INT.PRVT.CD', 375109366.9)\n('Zambia', 'ZMB', '\"Principal repayments on external debt, long-term (AMT, current US$)\"', 'DT.AMT.DLXF.CD', 1217643471.9)\n('Zambia', 'ZMB', '\"Principal repayments on external debt, private nonguaranteed (PNG) (AMT, current US$)\"', 'DT.AMT.DPNG.CD', 533176887.8)\n('Zimbabwe', 'ZWE', '\"Disbursements on external debt, long-term (DIS, current US$)\"', 'DT.DIS.DLXF.CD', 44396033.7)\n('Zimbabwe', 'ZWE', '\"Interest payments on external debt, long-term (INT, current US$)\"', 'DT.INT.DLXF.CD', 46758660.0)\n('Zimbabwe', 'ZWE', '\"Interest payments on external debt, private nonguaranteed (PNG) (INT, current US$)\"', 'DT.INT.DPNG.CD', 30997000.0)\n('Zimbabwe', 'ZWE', '\"PPG, bilateral (AMT, current US$)\"', 'DT.AMT.BLAT.CD', 71794214.8)\n('Zimbabwe', 'ZWE', '\"PPG, bilateral (DIS, current US$)\"', 'DT.DIS.BLAT.CD', 42332836.7)\n('Zimbabwe', 'ZWE', '\"PPG, bilateral (INT, current US$)\"', 'DT.INT.BLAT.CD', 11769908.3)\n('Zimbabwe', 'ZWE', '\"PPG, multilateral (AMT, current US$)\"', 'DT.AMT.MLAT.CD', 26697905.1)\n('Zimbabwe', 'ZWE', '\"PPG, multilateral (DIS, current US$)\"', 'DT.DIS.MLAT.CD', 2063197.0)\n('Zimbabwe', 'ZWE', '\"PPG, multilateral (INT, current US$)\"', 'DT.INT.MLAT.CD', 3991751.7)\n('Zimbabwe', 'ZWE', '\"PPG, official creditors (AMT, current US$)\"', 'DT.AMT.OFFT.CD', 98492119.9)\n('Zimbabwe', 'ZWE', '\"PPG, official creditors (DIS, current US$)\"', 'DT.DIS.OFFT.CD', 44396033.7)\n('Zimbabwe', 'ZWE', '\"PPG, official creditors (INT, current US$)\"', 'DT.INT.OFFT.CD', 15761660.0)\n('Zimbabwe', 'ZWE', '\"Principal repayments on external debt, long-term (AMT, current US$)\"', 'DT.AMT.DLXF.CD', 461632253.7)\n('Zimbabwe', 'ZWE', '\"Principal repayments on external debt, private nonguaranteed (PNG) (AMT, current US$)\"', 'DT.AMT.DPNG.CD', 363140133.8)\n\n\n\ninspector = inspect(engine)\ncolumns = inspector.get_columns('inter_debt')\n\n# Extract the column names\ncolumn_names = [col['name'] for col in columns]\nprint(column_names)\n\n['country_name', 'country_code', 'indicator_name', 'indicator_code', 'debt']\n\n\n\nquery1 = \"SELECT COUNT(DISTINCT country_name) AS total_distinct_countries FROM inter_debt\"\ndf_query = pd.read_sql_query(query1, engine)\n\n# Display the results\nprint(df_query)\n\n   total_distinct_countries\n0                       124\n\n\n\nquery2 = \"SELECT DISTINCT indicator_name AS distinct_debt_indicators FROM inter_debt\"\ndf_query2 = pd.read_sql_query(query2, engine)\n\n# Display the results\nprint(df_query2)\n\n                             distinct_debt_indicators\n0   \"Disbursements on external debt, long-term (DI...\n1   \"Interest payments on external debt, long-term...\n2                 \"PPG, bilateral (AMT, current US$)\"\n3                 \"PPG, bilateral (DIS, current US$)\"\n4                 \"PPG, bilateral (INT, current US$)\"\n5              \"PPG, multilateral (AMT, current US$)\"\n6              \"PPG, multilateral (DIS, current US$)\"\n7              \"PPG, multilateral (INT, current US$)\"\n8        \"PPG, official creditors (AMT, current US$)\"\n9        \"PPG, official creditors (DIS, current US$)\"\n10       \"PPG, official creditors (INT, current US$)\"\n11  \"Principal repayments on external debt, long-t...\n12  \"Interest payments on external debt, private n...\n13                    \"PPG, bonds (AMT, current US$)\"\n14                    \"PPG, bonds (INT, current US$)\"\n15         \"PPG, commercial banks (AMT, current US$)\"\n16         \"PPG, commercial banks (DIS, current US$)\"\n17         \"PPG, commercial banks (INT, current US$)\"\n18  \"PPG, other private creditors (AMT, current US$)\"\n19  \"PPG, other private creditors (DIS, current US$)\"\n20  \"PPG, other private creditors (INT, current US$)\"\n21        \"PPG, private creditors (AMT, current US$)\"\n22        \"PPG, private creditors (DIS, current US$)\"\n23        \"PPG, private creditors (INT, current US$)\"\n24  \"Principal repayments on external debt, privat...\n\n\n\nquery3 = \"SELECT ROUND(SUM(debt)/1000000, 2) AS total_debt FROM inter_debt\"\ndf_query3 = pd.read_sql_query(query3, engine)\n\n# Display the results\nprint(df_query3)\n\n   total_debt\n0  3079734.49\n\n\n\nquery4 = \"SELECT country_name, SUM(debt) AS total_debt FROM inter_debt GROUP BY country_name ORDER BY SUM(debt) DESC LIMIT 1;\"\ndf_query4 = pd.read_sql_query(query4, engine)\n\n# Display the results\nprint(df_query4)\n\n  country_name    total_debt\n0        China  2.857935e+11\n\n\n\nquery5 = \"SELECT indicator_code AS debt_indicator, indicator_name, AVG(debt) AS average_debt FROM inter_debt GROUP BY debt_indicator, indicator_name ORDER BY AVG(debt) DESC LIMIT 10;\"\ndf_query5 = pd.read_sql_query(query5, engine)\n\n# Display the results\nprint(df_query5)\n\n   debt_indicator                                     indicator_name  \\\n0  DT.AMT.DLXF.CD  \"Principal repayments on external debt, long-t...   \n1  DT.AMT.DPNG.CD  \"Principal repayments on external debt, privat...   \n2  DT.DIS.DLXF.CD  \"Disbursements on external debt, long-term (DI...   \n3  DT.DIS.OFFT.CD       \"PPG, official creditors (DIS, current US$)\"   \n4  DT.AMT.PRVT.CD        \"PPG, private creditors (AMT, current US$)\"   \n5  DT.INT.DLXF.CD  \"Interest payments on external debt, long-term...   \n6  DT.DIS.BLAT.CD                \"PPG, bilateral (DIS, current US$)\"   \n7  DT.INT.DPNG.CD  \"Interest payments on external debt, private n...   \n8  DT.AMT.OFFT.CD       \"PPG, official creditors (AMT, current US$)\"   \n9  DT.AMT.PBND.CD                    \"PPG, bonds (AMT, current US$)\"   \n\n   average_debt  \n0  5.904868e+09  \n1  5.161194e+09  \n2  2.152041e+09  \n3  1.958983e+09  \n4  1.803694e+09  \n5  1.644024e+09  \n6  1.223139e+09  \n7  1.220411e+09  \n8  1.191188e+09  \n9  1.082624e+09  \n\n\n\nquery6 = \"SELECT inter_debt.country_name, inter_debt.indicator_name FROM inter_debt WHERE debt = (SELECT MAX(debt) FROM inter_debt WHERE indicator_code='DT.AMT.DLXF.CD');\"\ndf_query6 = pd.read_sql_query(query6, engine)\n\n# Display the results\nprint(df_query6)\n\n  country_name                                     indicator_name\n0        China  \"Principal repayments on external debt, long-t..."
  },
  {
    "objectID": "Analyzing industry Carbon Emissions/notebook.html",
    "href": "Analyzing industry Carbon Emissions/notebook.html",
    "title": "portfolio_website",
    "section": "",
    "text": "Factories creating emissions\n\n\nPhoto by Maxim Tolchinskiy on Unsplash\nWhen factoring heat generation required for the manufacturing and transportation of products, Greenhouse gas emissions attributable to products, from food to sneakers to appliances, make up more than 75% of global emissions. -The Carbon Catalogue\nThe data, which is publicly available on nature.com, contains product carbon footprints (PCFs) for various companies. PCFs are the greenhouse gas emissions attributable to a given product, measured in CO2 (carbon dioxide equivalent).\nThis data is stored in a PostgreSQL database containing one table, prouduct_emissions, which looks at PCFs by product as well as the stage of production that these emissions occurred. Here’s a snapshot of what product_emissions contains in each column:\n\nproduct_emissions\n\n\n\nfield\ndata type\n\n\n\n\nid\nVARCHAR\n\n\nyear\nINT\n\n\nproduct_name\nVARCHAR\n\n\ncompany\nVARCHAR\n\n\ncountry\nVARCHAR\n\n\nindustry_group\nVARCHAR\n\n\nweight_kg\nNUMERIC\n\n\ncarbon_footprint_pcf\nNUMERIC\n\n\nupstream_percent_total_pcf\nVARCHAR\n\n\noperations_percent_total_pcf\nVARCHAR\n\n\ndownstream_percent_total_pcf\nVARCHAR\n\n\n\nI will use this data to examine the carbon footprint of each industry in the dataset!\n\nSELECT industry_group,\n    COUNT(DISTINCT company) AS num_companies,\n    ROUND(SUM(carbon_footprint_pcf), 1) AS total_industry_footprint\nFROM product_emissions\nWHERE year IN (SELECT MAX(year) FROM product_emissions)\nGROUP BY industry_group\nORDER BY total_industry_footprint DESC;\n\n\n\n\n\n\n\n\nindustry_group\nnum_companies\ntotal_industry_footprint\n\n\n\n\n0\nMaterials\n3\n107129.0\n\n\n1\nCapital Goods\n2\n94942.7\n\n\n2\nTechnology Hardware & Equipment\n4\n21865.1\n\n\n3\nFood, Beverage & Tobacco\n1\n3161.5\n\n\n4\nCommercial & Professional Services\n1\n740.6\n\n\n5\nSoftware & Services\n1\n690.0"
  },
  {
    "objectID": "Analyzing Student's mental health/notebook.html",
    "href": "Analyzing Student's mental health/notebook.html",
    "title": "portfolio_website",
    "section": "",
    "text": "Illustration of silhouetted heads\n\n\nDoes going to university in a different country affect your mental health? A Japanese international university surveyed its students in 2018 and published a study the following year that was approved by several ethical and regulatory boards.The study found that international students have a higher risk of mental health difficulties than the general population, and that social connectedness (belonging to a social group) and acculturative stress (stress associated with joining a new culture) are predictive of depression.Explore the students data using PostgreSQL to find out if you would come to a similar conclusion for international students and see if the length of stay is a contributing factor.Here is a data description of the columns you may find helpful.\nField Name | Description || ————- | ———————————————— || inter_dom | Types of students (international or domestic) || japanese_cate | Japanese language proficiency || english_cate | English language proficiency || academic | Current academic level (undergraduate or graduate) || age | Current age of student || stay | Current length of stay in years || todep | Total score of depression (PHQ-9 test) || tosc | Total score of social connectedness (SCS test) || toas | Total score of acculturative stress (ASISS test) |\n\n-- Run this code to save the CSV file as studentsSELECT * FROM 'students.csv';\n\n\n\n\n\n\n\n\ninter_dom\nregion\ngender\nacademic\nage\nage_cate\nstay\nstay_cate\njapanese\njapanese_cate\nenglish\nenglish_cate\nintimate\nreligion\nsuicide\ndep\ndeptype\ntodep\ndepsev\ntosc\napd\nahome\naph\nafear\nacs\naguilt\namiscell\ntoas\npartner\nfriends\nparents\nrelative\nprofess\nphone\ndoctor\nreli\nalone\nothers\ninternet\npartner_bi\nfriends_bi\nparents_bi\nrelative_bi\nprofessional_bi\nphone_bi\ndoctor_bi\nreligion_bi\nalone_bi\nothers_bi\ninternet_bi\n\n\n\n\n0\nInter\nSEA\nMale\nGrad\n24.0\n4.0\n5.0\nLong\n3.0\nAverage\n5.0\nHigh\nNone\nYes\nNo\nNo\nNo\n0.0\nMin\n34.0\n23.0\n9.0\n11.0\n8.0\n11.0\n2.0\n27.0\n91.0\n5.0\n5.0\n6.0\n3.0\n2.0\n1.0\n4.0\n1.0\n3.0\n4.0\nNaN\nYes\nYes\nYes\nNo\nNo\nNo\nNo\nNo\nNo\nNo\nNo\n\n\n1\nInter\nSEA\nMale\nGrad\n28.0\n5.0\n1.0\nShort\n4.0\nHigh\n4.0\nHigh\nNone\nNo\nNo\nNo\nNo\n2.0\nMin\n48.0\n8.0\n7.0\n5.0\n4.0\n3.0\n2.0\n10.0\n39.0\n7.0\n7.0\n7.0\n4.0\n4.0\n4.0\n4.0\n1.0\n1.0\n1.0\nNaN\nYes\nYes\nYes\nNo\nNo\nNo\nNo\nNo\nNo\nNo\nNo\n\n\n2\nInter\nSEA\nMale\nGrad\n25.0\n4.0\n6.0\nLong\n4.0\nHigh\n4.0\nHigh\nYes\nYes\nNo\nNo\nNo\n2.0\nMin\n41.0\n13.0\n4.0\n7.0\n6.0\n4.0\n3.0\n14.0\n51.0\n3.0\n3.0\n3.0\n1.0\n1.0\n2.0\n1.0\n1.0\n1.0\n1.0\nNaN\nNo\nNo\nNo\nNo\nNo\nNo\nNo\nNo\nNo\nNo\nNo\n\n\n3\nInter\nEA\nFemale\nGrad\n29.0\n5.0\n1.0\nShort\n2.0\nLow\n3.0\nAverage\nNo\nNo\nNo\nNo\nNo\n3.0\nMin\n37.0\n16.0\n10.0\n10.0\n8.0\n6.0\n4.0\n21.0\n75.0\n5.0\n5.0\n5.0\n5.0\n5.0\n2.0\n2.0\n2.0\n4.0\n4.0\nNaN\nYes\nYes\nYes\nYes\nYes\nNo\nNo\nNo\nNo\nNo\nNo\n\n\n4\nInter\nEA\nFemale\nGrad\n28.0\n5.0\n1.0\nShort\n1.0\nLow\n3.0\nAverage\nYes\nNo\nNo\nNo\nNo\n3.0\nMin\n37.0\n15.0\n12.0\n5.0\n8.0\n7.0\n4.0\n31.0\n82.0\n5.0\n5.0\n5.0\n2.0\n5.0\n2.0\n5.0\n5.0\n4.0\n4.0\nNaN\nYes\nYes\nYes\nNo\nYes\nNo\nYes\nYes\nNo\nNo\nNo\n\n\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n...\n\n\n281\nNone\nNone\nNone\nNone\nNaN\nNaN\nNaN\nNone\nNaN\nNone\nNaN\nNone\nNone\nNone\nNone\nNone\nNone\nNaN\nNone\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n46\n222\nNone\nNone\nNone\nNone\nNone\nNone\nNone\nNone\nNone\n\n\n282\nNone\nNone\nNone\nNone\nNaN\nNaN\nNaN\nNone\nNaN\nNone\nNaN\nNone\nNone\nNone\nNone\nNone\nNone\nNaN\nNone\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n19\n249\nNone\nNone\nNone\nNone\nNone\nNone\nNone\nNone\nNone\n\n\n283\nNone\nNone\nNone\nNone\nNaN\nNaN\nNaN\nNone\nNaN\nNone\nNaN\nNone\nNone\nNone\nNone\nNone\nNone\nNaN\nNone\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n65\n203\nNone\nNone\nNone\nNone\nNone\nNone\nNone\nNone\nNone\n\n\n284\nNone\nNone\nNone\nNone\nNaN\nNaN\nNaN\nNone\nNaN\nNone\nNaN\nNone\nNone\nNone\nNone\nNone\nNone\nNaN\nNone\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n21\n247\nNone\nNone\nNone\nNone\nNone\nNone\nNone\nNone\nNone\n\n\n285\nNone\nNone\nNone\nNone\nNaN\nNaN\nNaN\nNone\nNaN\nNone\nNaN\nNone\nNone\nNone\nNone\nNone\nNone\nNaN\nNone\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\nNaN\n45\n223\nNone\nNone\nNone\nNone\nNone\nNone\nNone\nNone\nNone\n\n\n\n\n286 rows × 50 columns\n\n\n\n\n-- Start coding here...SELECT inter_dom, COUNT(Inter_dom)FROM students.csvGROUP BY inter_dom;\n\n\n\n\n\n\n\n\ninter_dom\ncount(Inter_dom)\n\n\n\n\n0\nInter\n201\n\n\n1\nDom\n67\n\n\n2\nNone\n0\n\n\n\n\n\n\n\n\nSELECT inter_dom, COUNT(Inter_dom)FROM students.csvGROUP BY inter_dom;\n\n\n\n\n\n\n\n\ninter_dom\ncount(Inter_dom)\n\n\n\n\n0\nInter\n201\n\n\n1\nDom\n67\n\n\n2\nNone\n0\n\n\n\n\n\n\n\n\nSELECT inter_dom, COUNT(Inter_dom)FROM students.csvWHERE inter_dom IS NOT NULLGROUP BY inter_dom;\n\n\n\n\n\n\n\n\ninter_dom\ncount(Inter_dom)\n\n\n\n\n0\nInter\n201\n\n\n1\nDom\n67\n\n\n\n\n\n\n\n\nSELECT stay,       ROUND(MIN(todep), 2) AS min_phq,        ROUND(MAX(todep), 2) AS max_phq,        ROUND(AVG(todep), 2) AS average_phq,        ROUND(MIN(tosc), 2) AS min_scs,     ROUND(MAX(tosc), 2) AS max_scs,        ROUND(AVG(tosc), 2) AS average_scs,      ROUND(MIN(toas), 2) AS min_as,      ROUND(MAX(toas), 2) AS max_as,        ROUND(AVG(toas), 2) AS average_asFROM studentsWHERE inter_dom = 'Inter'GROUP BY stayORDER BY stay DESC;\n\n\n\n\n\n\n\n\nstay\nmin_phq\nmax_phq\naverage_phq\nmin_scs\nmax_scs\naverage_scs\nmin_as\nmax_as\naverage_as\n\n\n\n\n0\n10.0\n13.0\n13.0\n13.00\n32.0\n32.0\n32.00\n50.0\n50.0\n50.00\n\n\n1\n8.0\n10.0\n10.0\n10.00\n44.0\n44.0\n44.00\n65.0\n65.0\n65.00\n\n\n2\n7.0\n4.0\n4.0\n4.00\n48.0\n48.0\n48.00\n45.0\n45.0\n45.00\n\n\n3\n6.0\n2.0\n10.0\n6.00\n35.0\n41.0\n38.00\n42.0\n83.0\n58.67\n\n\n4\n5.0\n0.0\n0.0\n0.00\n34.0\n34.0\n34.00\n91.0\n91.0\n91.00\n\n\n5\n4.0\n0.0\n14.0\n8.57\n17.0\n48.0\n33.93\n36.0\n129.0\n87.71\n\n\n6\n3.0\n0.0\n24.0\n9.09\n13.0\n48.0\n37.13\n36.0\n133.0\n78.00\n\n\n7\n2.0\n0.0\n21.0\n8.28\n11.0\n48.0\n37.08\n36.0\n127.0\n77.67\n\n\n8\n1.0\n0.0\n25.0\n7.48\n11.0\n48.0\n38.11\n36.0\n145.0\n72.80\n\n\n\n\n\n\n\n\nSELECT stay,        ROUND(AVG(todep), 2) AS average_phq,        ROUND(AVG(tosc), 2) AS average_scs,        ROUND(AVG(toas), 2) AS average_asFROM studentsWHERE inter_dom = 'Inter'GROUP BY stayORDER BY stay DESC;\n\n\n\n\n\n\n\n\nstay\naverage_phq\naverage_scs\naverage_as\n\n\n\n\n0\n10.0\n13.00\n32.00\n50.00\n\n\n1\n8.0\n10.00\n44.00\n65.00\n\n\n2\n7.0\n4.00\n48.00\n45.00\n\n\n3\n6.0\n6.00\n38.00\n58.67\n\n\n4\n5.0\n0.00\n34.00\n91.00\n\n\n5\n4.0\n8.57\n33.93\n87.71\n\n\n6\n3.0\n9.09\n37.13\n78.00\n\n\n7\n2.0\n8.28\n37.08\n77.67\n\n\n8\n1.0\n7.48\n38.11\n72.80"
  },
  {
    "objectID": "Investigating Netflix Movies/notebook.html",
    "href": "Investigating Netflix Movies/notebook.html",
    "title": "Start coding!’ execution_count=2}",
    "section": "",
    "text": "Movie popcorn on red background\nNetflix! What started in 1997 as a DVD rental service has since exploded into one of the largest entertainment and media companies.\nGiven the large number of movies and series available on the platform, It’s a perfect opportunity for me to flex my exploratory data analysis skills and dive into the entertainment industry. I’ve also been brushing up on my Python skills and have taken an initial look at a CSV file containing Netflix data. I believe that the average duration of movies has been declining. Using my initial research, I’ll delve into the Netflix data to determine whether movie lengths are actually getting shorter and explain some of the contributing factors, if any.\nThis dataset netflix_data.csv , has the following table detailing the column names and descriptions:"
  },
  {
    "objectID": "Investigating Netflix Movies/notebook.html#the-data",
    "href": "Investigating Netflix Movies/notebook.html#the-data",
    "title": "Start coding!’ execution_count=2}",
    "section": "The data",
    "text": "The data\n\nnetflix_data.csv\n\n\n\nColumn\nDescription\n\n\n\n\nshow_id\nThe ID of the show\n\n\ntype\nType of show\n\n\ntitle\nTitle of the show\n\n\ndirector\nDirector of the show\n\n\ncast\nCast of the show\n\n\ncountry\nCountry of origin\n\n\ndate_added\nDate added to Netflix\n\n\nrelease_year\nYear of Netflix release\n\n\nduration\nDuration of the show in minutes\n\n\ndescription\nDescription of the show\n\n\ngenre\nShow genre\n\n\n\n::: {#320a3abc-8a36-4b2b-baaf-473325363a4d .cell executionCancelledAt=‘null’ executionTime=‘10’ lastExecutedAt=‘1704181340975’ lastScheduledRunId=‘null’ lastSuccessfullyExecutedCode=’# Importing pandas and matplotlib import pandas as pd import matplotlib.pyplot as plt"
  },
  {
    "objectID": "Philippine_food_price_Analysis_and_Visualization/Data/Interim/cleaning.html",
    "href": "Philippine_food_price_Analysis_and_Visualization/Data/Interim/cleaning.html",
    "title": "portfolio_website",
    "section": "",
    "text": "import pandas as pd\n\n\n# Load your dataset (replace with your actual file path)\nfile_path = \"../External/full_dataset.csv\"\ndf = pd.read_csv(file_path)\n\n\n# Display the first few rows before cleaning\nprint(\"Before Cleaning:\")\nprint(df.head())\n\nBefore Cleaning:\n  ISO3      country                         adm1_name adm2_name mkt_name  \\\n0  PHL  Philippines  Cordillera Administrative region      Abra     Abra   \n1  PHL  Philippines  Cordillera Administrative region      Abra     Abra   \n2  PHL  Philippines  Cordillera Administrative region      Abra     Abra   \n3  PHL  Philippines  Cordillera Administrative region      Abra     Abra   \n4  PHL  Philippines  Cordillera Administrative region      Abra     Abra   \n\n         lat         lon                   geo_id       DATES  year  ...  \\\n0  17.600651  120.619362  gid_1760065101206193620  2007-01-01  2007  ...   \n1  17.600651  120.619362  gid_1760065101206193620  2007-02-01  2007  ...   \n2  17.600651  120.619362  gid_1760065101206193620  2007-03-01  2007  ...   \n3  17.600651  120.619362  gid_1760065101206193620  2007-04-01  2007  ...   \n4  17.600651  120.619362  gid_1760065101206193620  2007-05-01  2007  ...   \n\n   l_yogurt c_yogurt inflation_yogurt trust_yogurt o_food_price_index  \\\n0       NaN      NaN              NaN          NaN               0.68   \n1       NaN      NaN              NaN          NaN               0.68   \n2       NaN      NaN              NaN          NaN               0.66   \n3       NaN      NaN              NaN          NaN               0.66   \n4       NaN      NaN              NaN          NaN               0.67   \n\n   h_food_price_index  l_food_price_index  c_food_price_index  \\\n0                0.69                0.67                0.68   \n1                0.69                0.67                0.67   \n2                0.67                0.65                0.66   \n3                0.67                0.65                0.66   \n4                0.68                0.66                0.67   \n\n   inflation_food_price_index  trust_food_price_index  \n0                         NaN                     9.4  \n1                         NaN                     9.4  \n2                         NaN                     9.4  \n3                         NaN                     9.4  \n4                         NaN                     9.4  \n\n[5 rows x 508 columns]\n\n\n\n# View the columns and data types of the dataset\nprint(df.info())\n\n&lt;class 'pandas.core.frame.DataFrame'&gt;\nRangeIndex: 23653 entries, 0 to 23652\nColumns: 508 entries, ISO3 to trust_food_price_index\ndtypes: float64(494), int64(3), object(11)\nmemory usage: 91.7+ MB\nNone\n\n\n\n# View the summary statistics of the dataset though this may not make sense as they are already described in the EDA report\nprint(df.describe())\n\n                lat           lon          year         month  data_coverage  \\\ncount  23436.000000  23436.000000  23653.000000  23653.000000       23653.00   \nmean      11.709358    122.876852   2015.543779      6.474654          19.34   \nstd        3.640368      1.949177      5.216106      3.464248           0.00   \nmin        5.029099    118.735278   2007.000000      1.000000          19.34   \n25%        8.481003    121.086142   2011.000000      3.000000          19.34   \n50%       11.570265    122.851105   2016.000000      6.000000          19.34   \n75%       14.716339    124.667869   2020.000000      9.000000          19.34   \nmax       18.194082    126.207645   2025.000000     12.000000          19.34   \n\n       data_coverage_recent  index_confidence_score  spatially_interpolated  \\\ncount          2.365300e+04            2.365300e+04                 23653.0   \nmean           4.264000e+01            9.600000e-01                     0.0   \nstd            7.105578e-15            3.330739e-16                     0.0   \nmin            4.264000e+01            9.600000e-01                     0.0   \n25%            4.264000e+01            9.600000e-01                     0.0   \n50%            4.264000e+01            9.600000e-01                     0.0   \n75%            4.264000e+01            9.600000e-01                     0.0   \nmax            4.264000e+01            9.600000e-01                     0.0   \n\n       apples  bananas  ...  l_yogurt  c_yogurt  inflation_yogurt  \\\ncount     0.0      0.0  ...       0.0       0.0               0.0   \nmean      NaN      NaN  ...       NaN       NaN               NaN   \nstd       NaN      NaN  ...       NaN       NaN               NaN   \nmin       NaN      NaN  ...       NaN       NaN               NaN   \n25%       NaN      NaN  ...       NaN       NaN               NaN   \n50%       NaN      NaN  ...       NaN       NaN               NaN   \n75%       NaN      NaN  ...       NaN       NaN               NaN   \nmax       NaN      NaN  ...       NaN       NaN               NaN   \n\n       trust_yogurt  o_food_price_index  h_food_price_index  \\\ncount           0.0        23653.000000        23653.000000   \nmean            NaN            0.976953            0.994561   \nstd             NaN            0.221319            0.228211   \nmin             NaN            0.640000            0.650000   \n25%             NaN            0.820000            0.830000   \n50%             NaN            0.910000            0.920000   \n75%             NaN            1.070000            1.090000   \nmax             NaN            1.810000            1.850000   \n\n       l_food_price_index  c_food_price_index  inflation_food_price_index  \\\ncount        23653.000000        23653.000000                22345.000000   \nmean             0.959457            0.977137                    4.042098   \nstd              0.215228            0.223137                    6.929498   \nmin              0.610000            0.640000                  -17.670000   \n25%              0.800000            0.810000                   -0.720000   \n50%              0.890000            0.900000                    3.180000   \n75%              1.050000            1.070000                    7.570000   \nmax              1.740000            1.810000                   44.990000   \n\n       trust_food_price_index  \ncount            23653.000000  \nmean                 9.521046  \nstd                  0.183176  \nmin                  9.400000  \n25%                  9.400000  \n50%                  9.400000  \n75%                  9.700000  \nmax                  9.900000  \n\n[8 rows x 497 columns]\n\n\n\n# Identify and drop empty columns\nempty_columns = df.columns[df.isnull().all()]  # Columns where all values are NaN\nprint(f\"Empty columns to drop: {empty_columns.tolist()}\")\n\nEmpty columns to drop: ['apples', 'bananas', 'bread', 'bulgur', 'cassava', 'cassava_flour', 'cassava_meal', 'cheese', 'chickpeas', 'chili', 'coffee_instant', 'couscous', 'cowpeas', 'cucumbers', 'dates', 'fish', 'fish_catfish', 'fish_mackerel', 'fish_sardine_canned', 'fish_tilapia', 'fish_tuna_canned', 'gari', 'groundnuts', 'lentils', 'livestock_sheep_two_year_old_male', 'livestocksheep_castrated_male', 'maize', 'maize_meal', 'meat_beef', 'meat_beef_minced', 'meat_buffalo', 'meat_chicken', 'meat_chicken_broiler', 'meat_chicken_plucked', 'meat_goat', 'meat_lamb', 'milk', 'millet', 'oil', 'oranges', 'parsley', 'pasta', 'peas', 'plantains', 'pulses', 'rice_various', 'salt', 'sesame', 'sorghum', 'sorghum_food_aid', 'sugar', 'tea', 'tomatoes_paste', 'wheat', 'wheat_flour', 'yam', 'yogurt', 'o_apples', 'h_apples', 'l_apples', 'c_apples', 'inflation_apples', 'trust_apples', 'o_bananas', 'h_bananas', 'l_bananas', 'c_bananas', 'inflation_bananas', 'trust_bananas', 'o_bread', 'h_bread', 'l_bread', 'c_bread', 'inflation_bread', 'trust_bread', 'o_bulgur', 'h_bulgur', 'l_bulgur', 'c_bulgur', 'inflation_bulgur', 'trust_bulgur', 'o_cassava', 'h_cassava', 'l_cassava', 'c_cassava', 'inflation_cassava', 'trust_cassava', 'o_cassava_flour', 'h_cassava_flour', 'l_cassava_flour', 'c_cassava_flour', 'inflation_cassava_flour', 'trust_cassava_flour', 'o_cassava_meal', 'h_cassava_meal', 'l_cassava_meal', 'c_cassava_meal', 'inflation_cassava_meal', 'trust_cassava_meal', 'o_cheese', 'h_cheese', 'l_cheese', 'c_cheese', 'inflation_cheese', 'trust_cheese', 'o_chickpeas', 'h_chickpeas', 'l_chickpeas', 'c_chickpeas', 'inflation_chickpeas', 'trust_chickpeas', 'o_chili', 'h_chili', 'l_chili', 'c_chili', 'inflation_chili', 'trust_chili', 'o_coffee_instant', 'h_coffee_instant', 'l_coffee_instant', 'c_coffee_instant', 'inflation_coffee_instant', 'trust_coffee_instant', 'o_couscous', 'h_couscous', 'l_couscous', 'c_couscous', 'inflation_couscous', 'trust_couscous', 'o_cowpeas', 'h_cowpeas', 'l_cowpeas', 'c_cowpeas', 'inflation_cowpeas', 'trust_cowpeas', 'o_cucumbers', 'h_cucumbers', 'l_cucumbers', 'c_cucumbers', 'inflation_cucumbers', 'trust_cucumbers', 'o_dates', 'h_dates', 'l_dates', 'c_dates', 'inflation_dates', 'trust_dates', 'o_fish', 'h_fish', 'l_fish', 'c_fish', 'inflation_fish', 'trust_fish', 'o_fish_catfish', 'h_fish_catfish', 'l_fish_catfish', 'c_fish_catfish', 'inflation_fish_catfish', 'trust_fish_catfish', 'o_fish_mackerel', 'h_fish_mackerel', 'l_fish_mackerel', 'c_fish_mackerel', 'inflation_fish_mackerel', 'trust_fish_mackerel', 'o_fish_sardine_canned', 'h_fish_sardine_canned', 'l_fish_sardine_canned', 'c_fish_sardine_canned', 'inflation_fish_sardine_canned', 'trust_fish_sardine_canned', 'o_fish_tilapia', 'h_fish_tilapia', 'l_fish_tilapia', 'c_fish_tilapia', 'inflation_fish_tilapia', 'trust_fish_tilapia', 'o_fish_tuna_canned', 'h_fish_tuna_canned', 'l_fish_tuna_canned', 'c_fish_tuna_canned', 'inflation_fish_tuna_canned', 'trust_fish_tuna_canned', 'o_gari', 'h_gari', 'l_gari', 'c_gari', 'inflation_gari', 'trust_gari', 'o_groundnuts', 'h_groundnuts', 'l_groundnuts', 'c_groundnuts', 'inflation_groundnuts', 'trust_groundnuts', 'o_lentils', 'h_lentils', 'l_lentils', 'c_lentils', 'inflation_lentils', 'trust_lentils', 'o_livestock_sheep_two_year_old_male', 'h_livestock_sheep_two_year_old_male', 'l_livestock_sheep_two_year_old_male', 'c_livestock_sheep_two_year_old_male', 'inflation_livestock_sheep_two_year_old_male', 'trust_livestock_sheep_two_year_old_male', 'o_livestocksheep_castrated_male', 'h_livestocksheep_castrated_male', 'l_livestocksheep_castrated_male', 'c_livestocksheep_castrated_male', 'inflation_livestocksheep_castrated_male', 'trust_livestocksheep_castrated_male', 'o_maize', 'h_maize', 'l_maize', 'c_maize', 'inflation_maize', 'trust_maize', 'o_maize_meal', 'h_maize_meal', 'l_maize_meal', 'c_maize_meal', 'inflation_maize_meal', 'trust_maize_meal', 'o_meat_beef', 'h_meat_beef', 'l_meat_beef', 'c_meat_beef', 'inflation_meat_beef', 'trust_meat_beef', 'o_meat_beef_minced', 'h_meat_beef_minced', 'l_meat_beef_minced', 'c_meat_beef_minced', 'inflation_meat_beef_minced', 'trust_meat_beef_minced', 'o_meat_buffalo', 'h_meat_buffalo', 'l_meat_buffalo', 'c_meat_buffalo', 'inflation_meat_buffalo', 'trust_meat_buffalo', 'o_meat_chicken', 'h_meat_chicken', 'l_meat_chicken', 'c_meat_chicken', 'inflation_meat_chicken', 'trust_meat_chicken', 'o_meat_chicken_broiler', 'h_meat_chicken_broiler', 'l_meat_chicken_broiler', 'c_meat_chicken_broiler', 'inflation_meat_chicken_broiler', 'trust_meat_chicken_broiler', 'o_meat_chicken_plucked', 'h_meat_chicken_plucked', 'l_meat_chicken_plucked', 'c_meat_chicken_plucked', 'inflation_meat_chicken_plucked', 'trust_meat_chicken_plucked', 'o_meat_goat', 'h_meat_goat', 'l_meat_goat', 'c_meat_goat', 'inflation_meat_goat', 'trust_meat_goat', 'o_meat_lamb', 'h_meat_lamb', 'l_meat_lamb', 'c_meat_lamb', 'inflation_meat_lamb', 'trust_meat_lamb', 'o_milk', 'h_milk', 'l_milk', 'c_milk', 'inflation_milk', 'trust_milk', 'o_millet', 'h_millet', 'l_millet', 'c_millet', 'inflation_millet', 'trust_millet', 'o_oil', 'h_oil', 'l_oil', 'c_oil', 'inflation_oil', 'trust_oil', 'o_oranges', 'h_oranges', 'l_oranges', 'c_oranges', 'inflation_oranges', 'trust_oranges', 'o_parsley', 'h_parsley', 'l_parsley', 'c_parsley', 'inflation_parsley', 'trust_parsley', 'o_pasta', 'h_pasta', 'l_pasta', 'c_pasta', 'inflation_pasta', 'trust_pasta', 'o_peas', 'h_peas', 'l_peas', 'c_peas', 'inflation_peas', 'trust_peas', 'o_plantains', 'h_plantains', 'l_plantains', 'c_plantains', 'inflation_plantains', 'trust_plantains', 'o_pulses', 'h_pulses', 'l_pulses', 'c_pulses', 'inflation_pulses', 'trust_pulses', 'o_rice_various', 'h_rice_various', 'l_rice_various', 'c_rice_various', 'inflation_rice_various', 'trust_rice_various', 'o_salt', 'h_salt', 'l_salt', 'c_salt', 'inflation_salt', 'trust_salt', 'o_sesame', 'h_sesame', 'l_sesame', 'c_sesame', 'inflation_sesame', 'trust_sesame', 'o_sorghum', 'h_sorghum', 'l_sorghum', 'c_sorghum', 'inflation_sorghum', 'trust_sorghum', 'o_sorghum_food_aid', 'h_sorghum_food_aid', 'l_sorghum_food_aid', 'c_sorghum_food_aid', 'inflation_sorghum_food_aid', 'trust_sorghum_food_aid', 'o_sugar', 'h_sugar', 'l_sugar', 'c_sugar', 'inflation_sugar', 'trust_sugar', 'o_tea', 'h_tea', 'l_tea', 'c_tea', 'inflation_tea', 'trust_tea', 'o_tomatoes_paste', 'h_tomatoes_paste', 'l_tomatoes_paste', 'c_tomatoes_paste', 'inflation_tomatoes_paste', 'trust_tomatoes_paste', 'o_wheat', 'h_wheat', 'l_wheat', 'c_wheat', 'inflation_wheat', 'trust_wheat', 'o_wheat_flour', 'h_wheat_flour', 'l_wheat_flour', 'c_wheat_flour', 'inflation_wheat_flour', 'trust_wheat_flour', 'o_yam', 'h_yam', 'l_yam', 'c_yam', 'inflation_yam', 'trust_yam', 'o_yogurt', 'h_yogurt', 'l_yogurt', 'c_yogurt', 'inflation_yogurt', 'trust_yogurt']\n\n\n\n# Drop empty columns\ndf_cleaned = df.drop(columns=empty_columns)\n\n\n# Display the cleaned dataset\nprint(\"After Cleaning:\")\nprint(df_cleaned.head())\n\nAfter Cleaning:\n  ISO3      country                         adm1_name adm2_name mkt_name  \\\n0  PHL  Philippines  Cordillera Administrative region      Abra     Abra   \n1  PHL  Philippines  Cordillera Administrative region      Abra     Abra   \n2  PHL  Philippines  Cordillera Administrative region      Abra     Abra   \n3  PHL  Philippines  Cordillera Administrative region      Abra     Abra   \n4  PHL  Philippines  Cordillera Administrative region      Abra     Abra   \n\n         lat         lon                   geo_id       DATES  year  ...  \\\n0  17.600651  120.619362  gid_1760065101206193620  2007-01-01  2007  ...   \n1  17.600651  120.619362  gid_1760065101206193620  2007-02-01  2007  ...   \n2  17.600651  120.619362  gid_1760065101206193620  2007-03-01  2007  ...   \n3  17.600651  120.619362  gid_1760065101206193620  2007-04-01  2007  ...   \n4  17.600651  120.619362  gid_1760065101206193620  2007-05-01  2007  ...   \n\n   l_tomatoes c_tomatoes inflation_tomatoes trust_tomatoes o_food_price_index  \\\n0       26.03      27.84                NaN            8.0               0.68   \n1       26.31      26.82                NaN            8.0               0.68   \n2       24.95      26.21                NaN            8.0               0.66   \n3       24.93      26.74                NaN            8.0               0.66   \n4       26.30      27.19                NaN            8.0               0.67   \n\n   h_food_price_index  l_food_price_index  c_food_price_index  \\\n0                0.69                0.67                0.68   \n1                0.69                0.67                0.67   \n2                0.67                0.65                0.66   \n3                0.67                0.65                0.66   \n4                0.68                0.66                0.67   \n\n   inflation_food_price_index  trust_food_price_index  \n0                         NaN                     9.4  \n1                         NaN                     9.4  \n2                         NaN                     9.4  \n3                         NaN                     9.4  \n4                         NaN                     9.4  \n\n[5 rows x 109 columns]\n\n\n\n# Dropping unneeded columns\ncleaned_data = df_cleaned.drop(columns=['ISO3', 'geo_id', 'currency', 'components', 'start_dense_data', 'last_survey_point', 'data_coverage', 'data_coverage_recent', 'index_confidence_score', 'spatially_interpolated'])\n\n\nmissing_values = cleaned_data.isnull().sum()\nprint(\"Missing values per column:\")\nprint(missing_values)\n\nMissing values per column:\ncountry                          0\nadm1_name                        0\nadm2_name                        0\nmkt_name                         0\nlat                            217\n                              ... \nh_food_price_index               0\nl_food_price_index               0\nc_food_price_index               0\ninflation_food_price_index    1308\ntrust_food_price_index           0\nLength: 99, dtype: int64\n\n\n\n# Rename multiple columns at once\ncleaned_data.rename(columns={'DATES': 'Date', 'adm1_name': 'Region', 'adm2_name': 'Province', 'mkt_name': 'City'}, inplace=True)\n\n\n# Save cleaned data to a CSV file\ncleaned_data.to_csv(\"cleaned_food_prices.csv\", index=False)"
  },
  {
    "objectID": "Philippine_food_price_Analysis_and_Visualization/Data/Processed/hypothesis_testing.html",
    "href": "Philippine_food_price_Analysis_and_Visualization/Data/Processed/hypothesis_testing.html",
    "title": "prepare data",
    "section": "",
    "text": "import pandas as pd\nimport numpy as np\nfrom scipy.stats import shapiro\nfrom scipy.stats import kruskal\nimport seaborn as sns\nimport statsmodels.api as sm\nimport matplotlib.pyplot as plt\nfrom scipy.stats import levene\n# Load dataset\nfile_path = \"../Interim/cleaned_food_prices.csv\"\ndf = pd.read_csv(file_path)\n#dropping columns related to food price index\ndf_nofpi = df.drop(columns=['country','Province', 'City', 'lat', 'lon', 'month', 'o_food_price_index', 'h_food_price_index', 'l_food_price_index', 'c_food_price_index', 'inflation_food_price_index', 'trust_food_price_index'])\n# Convert 'Date' column to datetime format\ndf_nofpi['Date'] = pd.to_datetime(df_nofpi['Date'])\n#dropping columns related to inflation\ndf_noinf = df_nofpi.drop(columns=['inflation_beans','inflation_cabbage', 'inflation_carrots', 'inflation_eggs', 'inflation_garlic', 'inflation_meat_beef_chops', 'inflation_meat_chicken_whole', 'inflation_meat_pork', 'inflation_onions', 'inflation_potatoes', 'inflation_rice', 'inflation_tomatoes'])\n#dropping columns related to trust scores\ndf_cleaned = df_noinf.drop(columns=['trust_beans','trust_cabbage', 'trust_carrots', 'trust_eggs', 'trust_garlic', 'trust_meat_beef_chops', 'trust_meat_chicken_whole', 'trust_meat_pork', 'trust_onions', 'trust_potatoes', 'trust_rice', 'trust_tomatoes'])\n# Reshaping from wide to long format (including year and month as part of the identifier)\ndf_melted = df_cleaned.melt(id_vars=['Region', 'Date', 'year'], var_name='Food_Items', value_name='Price')"
  },
  {
    "objectID": "Philippine_food_price_Analysis_and_Visualization/Data/Processed/hypothesis_testing.html#start-analysis",
    "href": "Philippine_food_price_Analysis_and_Visualization/Data/Processed/hypothesis_testing.html#start-analysis",
    "title": "prepare data",
    "section": "Start Analysis",
    "text": "Start Analysis\n\nOne-way ANOVA\n\nCheck if one-way ANOVA is appropriate\n\none-way ANOVA can only be used of normality and homogeneity of variances holds. If not, there are two test that can be used, namely, Welch’s ANOVA and Kruskall-Wallis Test.\n\n\n* Welch’s ANOVA can be used when your data is normally distributed, but the variances are unequal.\n\n\n* Kruskall-Wallis Test, on the other hand, is used when your data is non-normal, ordinal, or you can’t assume equal variances.\n\n\n1. Normality\n\n# Grouping by region and year\ngrouped = df_melted.groupby(['year', 'Food_Items'])['Price'].apply(list)\n\n# Shapiro-Wilk Test for each group\nalpha = 0.05  # Significance level\nfor group, prices in grouped.items():\n    stat, p = shapiro(prices)\n    result = \"Pass\" if p &gt; alpha else \"Shapiro-Wilk Test Failed\"\n    print(f'{group}: W-statistic={stat:.4f}, p-value={p:.4f}, Result={result}')\n\n(2007, 'beans'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2007, 'c_beans'): W-statistic=0.9744, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2007, 'c_cabbage'): W-statistic=0.9698, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2007, 'c_carrots'): W-statistic=0.9208, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2007, 'c_eggs'): W-statistic=0.7932, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2007, 'c_garlic'): W-statistic=0.8767, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2007, 'c_meat_beef_chops'): W-statistic=0.9786, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2007, 'c_meat_chicken_whole'): W-statistic=0.9837, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2007, 'c_meat_pork'): W-statistic=0.9850, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2007, 'c_onions'): W-statistic=0.9738, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2007, 'c_potatoes'): W-statistic=0.9533, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2007, 'c_rice'): W-statistic=0.9876, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2007, 'c_tomatoes'): W-statistic=0.9774, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2007, 'cabbage'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2007, 'carrots'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2007, 'eggs'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2007, 'garlic'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2007, 'h_beans'): W-statistic=0.9748, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2007, 'h_cabbage'): W-statistic=0.9681, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2007, 'h_carrots'): W-statistic=0.9161, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2007, 'h_eggs'): W-statistic=0.7707, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2007, 'h_garlic'): W-statistic=0.8710, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2007, 'h_meat_beef_chops'): W-statistic=0.9774, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2007, 'h_meat_chicken_whole'): W-statistic=0.9835, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2007, 'h_meat_pork'): W-statistic=0.9868, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2007, 'h_onions'): W-statistic=0.9700, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2007, 'h_potatoes'): W-statistic=0.9465, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2007, 'h_rice'): W-statistic=0.9860, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2007, 'h_tomatoes'): W-statistic=0.9767, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2007, 'l_beans'): W-statistic=0.9745, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2007, 'l_cabbage'): W-statistic=0.9735, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2007, 'l_carrots'): W-statistic=0.9232, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2007, 'l_eggs'): W-statistic=0.8081, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2007, 'l_garlic'): W-statistic=0.8831, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2007, 'l_meat_beef_chops'): W-statistic=0.9785, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2007, 'l_meat_chicken_whole'): W-statistic=0.9823, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2007, 'l_meat_pork'): W-statistic=0.9850, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2007, 'l_onions'): W-statistic=0.9726, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2007, 'l_potatoes'): W-statistic=0.9548, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2007, 'l_rice'): W-statistic=0.9883, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2007, 'l_tomatoes'): W-statistic=0.9798, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2007, 'meat_beef_chops'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2007, 'meat_chicken_whole'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2007, 'meat_pork'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2007, 'o_beans'): W-statistic=0.9748, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2007, 'o_cabbage'): W-statistic=0.9687, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2007, 'o_carrots'): W-statistic=0.9156, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2007, 'o_eggs'): W-statistic=0.7863, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2007, 'o_garlic'): W-statistic=0.8760, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2007, 'o_meat_beef_chops'): W-statistic=0.9779, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2007, 'o_meat_chicken_whole'): W-statistic=0.9830, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2007, 'o_meat_pork'): W-statistic=0.9862, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2007, 'o_onions'): W-statistic=0.9721, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2007, 'o_potatoes'): W-statistic=0.9501, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2007, 'o_rice'): W-statistic=0.9873, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2007, 'o_tomatoes'): W-statistic=0.9769, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2007, 'onions'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2007, 'potatoes'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2007, 'rice'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2007, 'tomatoes'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2008, 'beans'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2008, 'c_beans'): W-statistic=0.9708, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2008, 'c_cabbage'): W-statistic=0.9693, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2008, 'c_carrots'): W-statistic=0.9172, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2008, 'c_eggs'): W-statistic=0.8352, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2008, 'c_garlic'): W-statistic=0.9517, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2008, 'c_meat_beef_chops'): W-statistic=0.9800, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2008, 'c_meat_chicken_whole'): W-statistic=0.9635, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2008, 'c_meat_pork'): W-statistic=0.9843, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2008, 'c_onions'): W-statistic=0.9727, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2008, 'c_potatoes'): W-statistic=0.9938, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2008, 'c_rice'): W-statistic=0.9868, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2008, 'c_tomatoes'): W-statistic=0.9770, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2008, 'cabbage'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2008, 'carrots'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2008, 'eggs'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2008, 'garlic'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2008, 'h_beans'): W-statistic=0.9655, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2008, 'h_cabbage'): W-statistic=0.9564, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2008, 'h_carrots'): W-statistic=0.9002, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2008, 'h_eggs'): W-statistic=0.8239, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2008, 'h_garlic'): W-statistic=0.9562, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2008, 'h_meat_beef_chops'): W-statistic=0.9783, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2008, 'h_meat_chicken_whole'): W-statistic=0.9626, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2008, 'h_meat_pork'): W-statistic=0.9879, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2008, 'h_onions'): W-statistic=0.9813, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2008, 'h_potatoes'): W-statistic=0.9896, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2008, 'h_rice'): W-statistic=0.9837, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2008, 'h_tomatoes'): W-statistic=0.9599, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2008, 'l_beans'): W-statistic=0.9778, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2008, 'l_cabbage'): W-statistic=0.9775, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2008, 'l_carrots'): W-statistic=0.9418, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2008, 'l_eggs'): W-statistic=0.8562, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2008, 'l_garlic'): W-statistic=0.9574, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2008, 'l_meat_beef_chops'): W-statistic=0.9798, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2008, 'l_meat_chicken_whole'): W-statistic=0.9730, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2008, 'l_meat_pork'): W-statistic=0.9872, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2008, 'l_onions'): W-statistic=0.9765, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2008, 'l_potatoes'): W-statistic=0.9950, p-value=0.0002, Result=Shapiro-Wilk Test Failed\n(2008, 'l_rice'): W-statistic=0.9780, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2008, 'l_tomatoes'): W-statistic=0.9855, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2008, 'meat_beef_chops'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2008, 'meat_chicken_whole'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2008, 'meat_pork'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2008, 'o_beans'): W-statistic=0.9725, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2008, 'o_cabbage'): W-statistic=0.9678, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2008, 'o_carrots'): W-statistic=0.9246, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2008, 'o_eggs'): W-statistic=0.8418, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2008, 'o_garlic'): W-statistic=0.9593, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2008, 'o_meat_beef_chops'): W-statistic=0.9794, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2008, 'o_meat_chicken_whole'): W-statistic=0.9685, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2008, 'o_meat_pork'): W-statistic=0.9887, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2008, 'o_onions'): W-statistic=0.9790, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2008, 'o_potatoes'): W-statistic=0.9940, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2008, 'o_rice'): W-statistic=0.9760, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2008, 'o_tomatoes'): W-statistic=0.9777, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2008, 'onions'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2008, 'potatoes'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2008, 'rice'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2008, 'tomatoes'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2009, 'beans'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2009, 'c_beans'): W-statistic=0.9501, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2009, 'c_cabbage'): W-statistic=0.9093, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2009, 'c_carrots'): W-statistic=0.8038, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2009, 'c_eggs'): W-statistic=0.9751, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2009, 'c_garlic'): W-statistic=0.8969, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2009, 'c_meat_beef_chops'): W-statistic=0.9831, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2009, 'c_meat_chicken_whole'): W-statistic=0.9156, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2009, 'c_meat_pork'): W-statistic=0.9902, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2009, 'c_onions'): W-statistic=0.9815, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2009, 'c_potatoes'): W-statistic=0.9818, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2009, 'c_rice'): W-statistic=0.9763, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2009, 'c_tomatoes'): W-statistic=0.9638, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2009, 'cabbage'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2009, 'carrots'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2009, 'eggs'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2009, 'garlic'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2009, 'h_beans'): W-statistic=0.9447, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2009, 'h_cabbage'): W-statistic=0.8380, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2009, 'h_carrots'): W-statistic=0.7526, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2009, 'h_eggs'): W-statistic=0.9526, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2009, 'h_garlic'): W-statistic=0.8933, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2009, 'h_meat_beef_chops'): W-statistic=0.9827, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2009, 'h_meat_chicken_whole'): W-statistic=0.9065, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2009, 'h_meat_pork'): W-statistic=0.9902, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2009, 'h_onions'): W-statistic=0.9875, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2009, 'h_potatoes'): W-statistic=0.9680, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2009, 'h_rice'): W-statistic=0.9855, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2009, 'h_tomatoes'): W-statistic=0.9395, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2009, 'l_beans'): W-statistic=0.9525, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2009, 'l_cabbage'): W-statistic=0.9543, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2009, 'l_carrots'): W-statistic=0.8900, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2009, 'l_eggs'): W-statistic=0.9899, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2009, 'l_garlic'): W-statistic=0.9043, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2009, 'l_meat_beef_chops'): W-statistic=0.9848, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2009, 'l_meat_chicken_whole'): W-statistic=0.9219, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2009, 'l_meat_pork'): W-statistic=0.9925, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2009, 'l_onions'): W-statistic=0.9896, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2009, 'l_potatoes'): W-statistic=0.9938, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2009, 'l_rice'): W-statistic=0.9818, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2009, 'l_tomatoes'): W-statistic=0.9844, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2009, 'meat_beef_chops'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2009, 'meat_chicken_whole'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2009, 'meat_pork'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2009, 'o_beans'): W-statistic=0.9478, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2009, 'o_cabbage'): W-statistic=0.9047, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2009, 'o_carrots'): W-statistic=0.8267, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2009, 'o_eggs'): W-statistic=0.9776, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2009, 'o_garlic'): W-statistic=0.9004, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2009, 'o_meat_beef_chops'): W-statistic=0.9843, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2009, 'o_meat_chicken_whole'): W-statistic=0.9148, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2009, 'o_meat_pork'): W-statistic=0.9921, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2009, 'o_onions'): W-statistic=0.9875, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2009, 'o_potatoes'): W-statistic=0.9857, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2009, 'o_rice'): W-statistic=0.9820, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2009, 'o_tomatoes'): W-statistic=0.9635, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2009, 'onions'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2009, 'potatoes'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2009, 'rice'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2009, 'tomatoes'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2010, 'beans'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2010, 'c_beans'): W-statistic=0.9543, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2010, 'c_cabbage'): W-statistic=0.9283, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2010, 'c_carrots'): W-statistic=0.8764, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2010, 'c_eggs'): W-statistic=0.9852, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2010, 'c_garlic'): W-statistic=0.8865, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2010, 'c_meat_beef_chops'): W-statistic=0.9814, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2010, 'c_meat_chicken_whole'): W-statistic=0.8979, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2010, 'c_meat_pork'): W-statistic=0.9908, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2010, 'c_onions'): W-statistic=0.9471, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2010, 'c_potatoes'): W-statistic=0.9623, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2010, 'c_rice'): W-statistic=0.9501, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2010, 'c_tomatoes'): W-statistic=0.9137, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2010, 'cabbage'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2010, 'carrots'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2010, 'eggs'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2010, 'garlic'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2010, 'h_beans'): W-statistic=0.9520, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2010, 'h_cabbage'): W-statistic=0.9073, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2010, 'h_carrots'): W-statistic=0.8540, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2010, 'h_eggs'): W-statistic=0.9728, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2010, 'h_garlic'): W-statistic=0.8719, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2010, 'h_meat_beef_chops'): W-statistic=0.9808, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2010, 'h_meat_chicken_whole'): W-statistic=0.8877, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2010, 'h_meat_pork'): W-statistic=0.9881, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2010, 'h_onions'): W-statistic=0.9404, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2010, 'h_potatoes'): W-statistic=0.9528, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2010, 'h_rice'): W-statistic=0.9625, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2010, 'h_tomatoes'): W-statistic=0.8508, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2010, 'l_beans'): W-statistic=0.9599, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2010, 'l_cabbage'): W-statistic=0.9535, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2010, 'l_carrots'): W-statistic=0.9132, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2010, 'l_eggs'): W-statistic=0.9922, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2010, 'l_garlic'): W-statistic=0.9021, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2010, 'l_meat_beef_chops'): W-statistic=0.9810, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2010, 'l_meat_chicken_whole'): W-statistic=0.9155, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2010, 'l_meat_pork'): W-statistic=0.9942, p-value=0.0001, Result=Shapiro-Wilk Test Failed\n(2010, 'l_onions'): W-statistic=0.9746, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2010, 'l_potatoes'): W-statistic=0.9753, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2010, 'l_rice'): W-statistic=0.9485, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2010, 'l_tomatoes'): W-statistic=0.9705, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2010, 'meat_beef_chops'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2010, 'meat_chicken_whole'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2010, 'meat_pork'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2010, 'o_beans'): W-statistic=0.9566, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2010, 'o_cabbage'): W-statistic=0.9337, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2010, 'o_carrots'): W-statistic=0.8872, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2010, 'o_eggs'): W-statistic=0.9871, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2010, 'o_garlic'): W-statistic=0.8904, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2010, 'o_meat_beef_chops'): W-statistic=0.9813, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2010, 'o_meat_chicken_whole'): W-statistic=0.9039, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2010, 'o_meat_pork'): W-statistic=0.9929, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2010, 'o_onions'): W-statistic=0.9455, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2010, 'o_potatoes'): W-statistic=0.9665, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2010, 'o_rice'): W-statistic=0.9575, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2010, 'o_tomatoes'): W-statistic=0.9184, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2010, 'onions'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2010, 'potatoes'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2010, 'rice'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2010, 'tomatoes'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2011, 'beans'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2011, 'c_beans'): W-statistic=0.9708, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2011, 'c_cabbage'): W-statistic=0.9343, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2011, 'c_carrots'): W-statistic=0.9041, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2011, 'c_eggs'): W-statistic=0.9839, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2011, 'c_garlic'): W-statistic=0.8565, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2011, 'c_meat_beef_chops'): W-statistic=0.9832, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2011, 'c_meat_chicken_whole'): W-statistic=0.9231, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2011, 'c_meat_pork'): W-statistic=0.9822, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2011, 'c_onions'): W-statistic=0.9888, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2011, 'c_potatoes'): W-statistic=0.9831, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2011, 'c_rice'): W-statistic=0.9382, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2011, 'c_tomatoes'): W-statistic=0.9664, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2011, 'cabbage'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2011, 'carrots'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2011, 'eggs'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2011, 'garlic'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2011, 'h_beans'): W-statistic=0.9627, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2011, 'h_cabbage'): W-statistic=0.8951, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2011, 'h_carrots'): W-statistic=0.8765, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2011, 'h_eggs'): W-statistic=0.9829, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2011, 'h_garlic'): W-statistic=0.8450, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2011, 'h_meat_beef_chops'): W-statistic=0.9831, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2011, 'h_meat_chicken_whole'): W-statistic=0.9082, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2011, 'h_meat_pork'): W-statistic=0.9868, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2011, 'h_onions'): W-statistic=0.9909, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2011, 'h_potatoes'): W-statistic=0.9815, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2011, 'h_rice'): W-statistic=0.9455, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2011, 'h_tomatoes'): W-statistic=0.9557, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2011, 'l_beans'): W-statistic=0.9737, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2011, 'l_cabbage'): W-statistic=0.9655, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2011, 'l_carrots'): W-statistic=0.9436, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2011, 'l_eggs'): W-statistic=0.9838, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2011, 'l_garlic'): W-statistic=0.8677, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2011, 'l_meat_beef_chops'): W-statistic=0.9835, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2011, 'l_meat_chicken_whole'): W-statistic=0.9334, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2011, 'l_meat_pork'): W-statistic=0.9819, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2011, 'l_onions'): W-statistic=0.9880, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2011, 'l_potatoes'): W-statistic=0.9838, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2011, 'l_rice'): W-statistic=0.9453, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2011, 'l_tomatoes'): W-statistic=0.9770, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2011, 'meat_beef_chops'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2011, 'meat_chicken_whole'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2011, 'meat_pork'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2011, 'o_beans'): W-statistic=0.9682, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2011, 'o_cabbage'): W-statistic=0.9355, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2011, 'o_carrots'): W-statistic=0.9138, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2011, 'o_eggs'): W-statistic=0.9832, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2011, 'o_garlic'): W-statistic=0.8526, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2011, 'o_meat_beef_chops'): W-statistic=0.9834, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2011, 'o_meat_chicken_whole'): W-statistic=0.9199, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2011, 'o_meat_pork'): W-statistic=0.9855, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2011, 'o_onions'): W-statistic=0.9886, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2011, 'o_potatoes'): W-statistic=0.9828, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2011, 'o_rice'): W-statistic=0.9435, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2011, 'o_tomatoes'): W-statistic=0.9704, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2011, 'onions'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2011, 'potatoes'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2011, 'rice'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2011, 'tomatoes'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2012, 'beans'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2012, 'c_beans'): W-statistic=0.9838, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2012, 'c_cabbage'): W-statistic=0.9018, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2012, 'c_carrots'): W-statistic=0.8437, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2012, 'c_eggs'): W-statistic=0.9731, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2012, 'c_garlic'): W-statistic=0.8728, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2012, 'c_meat_beef_chops'): W-statistic=0.9877, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2012, 'c_meat_chicken_whole'): W-statistic=0.9272, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2012, 'c_meat_pork'): W-statistic=0.9947, p-value=0.0001, Result=Shapiro-Wilk Test Failed\n(2012, 'c_onions'): W-statistic=0.9906, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2012, 'c_potatoes'): W-statistic=0.9913, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2012, 'c_rice'): W-statistic=0.9035, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2012, 'c_tomatoes'): W-statistic=0.9510, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2012, 'cabbage'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2012, 'carrots'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2012, 'eggs'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2012, 'garlic'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2012, 'h_beans'): W-statistic=0.9825, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2012, 'h_cabbage'): W-statistic=0.8460, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2012, 'h_carrots'): W-statistic=0.8071, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2012, 'h_eggs'): W-statistic=0.9729, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2012, 'h_garlic'): W-statistic=0.8516, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2012, 'h_meat_beef_chops'): W-statistic=0.9871, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2012, 'h_meat_chicken_whole'): W-statistic=0.9299, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2012, 'h_meat_pork'): W-statistic=0.9940, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2012, 'h_onions'): W-statistic=0.9847, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2012, 'h_potatoes'): W-statistic=0.9883, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2012, 'h_rice'): W-statistic=0.9201, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2012, 'h_tomatoes'): W-statistic=0.9266, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2012, 'l_beans'): W-statistic=0.9834, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2012, 'l_cabbage'): W-statistic=0.9489, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2012, 'l_carrots'): W-statistic=0.8770, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2012, 'l_eggs'): W-statistic=0.9794, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2012, 'l_garlic'): W-statistic=0.8978, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2012, 'l_meat_beef_chops'): W-statistic=0.9881, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2012, 'l_meat_chicken_whole'): W-statistic=0.9318, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2012, 'l_meat_pork'): W-statistic=0.9955, p-value=0.0006, Result=Shapiro-Wilk Test Failed\n(2012, 'l_onions'): W-statistic=0.9944, p-value=0.0001, Result=Shapiro-Wilk Test Failed\n(2012, 'l_potatoes'): W-statistic=0.9908, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2012, 'l_rice'): W-statistic=0.9038, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2012, 'l_tomatoes'): W-statistic=0.9701, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2012, 'meat_beef_chops'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2012, 'meat_chicken_whole'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2012, 'meat_pork'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2012, 'o_beans'): W-statistic=0.9832, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2012, 'o_cabbage'): W-statistic=0.8979, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2012, 'o_carrots'): W-statistic=0.8408, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2012, 'o_eggs'): W-statistic=0.9744, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2012, 'o_garlic'): W-statistic=0.8744, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2012, 'o_meat_beef_chops'): W-statistic=0.9876, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2012, 'o_meat_chicken_whole'): W-statistic=0.9329, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2012, 'o_meat_pork'): W-statistic=0.9947, p-value=0.0001, Result=Shapiro-Wilk Test Failed\n(2012, 'o_onions'): W-statistic=0.9928, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2012, 'o_potatoes'): W-statistic=0.9918, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2012, 'o_rice'): W-statistic=0.9116, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2012, 'o_tomatoes'): W-statistic=0.9564, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2012, 'onions'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2012, 'potatoes'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2012, 'rice'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2012, 'tomatoes'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2013, 'beans'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2013, 'c_beans'): W-statistic=0.9782, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2013, 'c_cabbage'): W-statistic=0.9461, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2013, 'c_carrots'): W-statistic=0.9320, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2013, 'c_eggs'): W-statistic=0.9636, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2013, 'c_garlic'): W-statistic=0.8937, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2013, 'c_meat_beef_chops'): W-statistic=0.9865, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2013, 'c_meat_chicken_whole'): W-statistic=0.9518, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2013, 'c_meat_pork'): W-statistic=0.9953, p-value=0.0005, Result=Shapiro-Wilk Test Failed\n(2013, 'c_onions'): W-statistic=0.9945, p-value=0.0001, Result=Shapiro-Wilk Test Failed\n(2013, 'c_potatoes'): W-statistic=0.9956, p-value=0.0008, Result=Shapiro-Wilk Test Failed\n(2013, 'c_rice'): W-statistic=0.9559, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2013, 'c_tomatoes'): W-statistic=0.9513, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2013, 'cabbage'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2013, 'carrots'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2013, 'eggs'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2013, 'garlic'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2013, 'h_beans'): W-statistic=0.9752, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2013, 'h_cabbage'): W-statistic=0.9323, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2013, 'h_carrots'): W-statistic=0.9116, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2013, 'h_eggs'): W-statistic=0.9638, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2013, 'h_garlic'): W-statistic=0.8828, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2013, 'h_meat_beef_chops'): W-statistic=0.9859, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2013, 'h_meat_chicken_whole'): W-statistic=0.9497, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2013, 'h_meat_pork'): W-statistic=0.9958, p-value=0.0011, Result=Shapiro-Wilk Test Failed\n(2013, 'h_onions'): W-statistic=0.9965, p-value=0.0052, Result=Shapiro-Wilk Test Failed\n(2013, 'h_potatoes'): W-statistic=0.9948, p-value=0.0002, Result=Shapiro-Wilk Test Failed\n(2013, 'h_rice'): W-statistic=0.9574, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2013, 'h_tomatoes'): W-statistic=0.9247, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2013, 'l_beans'): W-statistic=0.9817, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2013, 'l_cabbage'): W-statistic=0.9581, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2013, 'l_carrots'): W-statistic=0.9421, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2013, 'l_eggs'): W-statistic=0.9720, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2013, 'l_garlic'): W-statistic=0.9022, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2013, 'l_meat_beef_chops'): W-statistic=0.9882, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2013, 'l_meat_chicken_whole'): W-statistic=0.9460, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2013, 'l_meat_pork'): W-statistic=0.9947, p-value=0.0001, Result=Shapiro-Wilk Test Failed\n(2013, 'l_onions'): W-statistic=0.9943, p-value=0.0001, Result=Shapiro-Wilk Test Failed\n(2013, 'l_potatoes'): W-statistic=0.9962, p-value=0.0023, Result=Shapiro-Wilk Test Failed\n(2013, 'l_rice'): W-statistic=0.9434, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2013, 'l_tomatoes'): W-statistic=0.9643, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2013, 'meat_beef_chops'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2013, 'meat_chicken_whole'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2013, 'meat_pork'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2013, 'o_beans'): W-statistic=0.9785, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2013, 'o_cabbage'): W-statistic=0.9439, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2013, 'o_carrots'): W-statistic=0.9244, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2013, 'o_eggs'): W-statistic=0.9667, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2013, 'o_garlic'): W-statistic=0.8913, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2013, 'o_meat_beef_chops'): W-statistic=0.9876, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2013, 'o_meat_chicken_whole'): W-statistic=0.9472, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2013, 'o_meat_pork'): W-statistic=0.9956, p-value=0.0007, Result=Shapiro-Wilk Test Failed\n(2013, 'o_onions'): W-statistic=0.9948, p-value=0.0002, Result=Shapiro-Wilk Test Failed\n(2013, 'o_potatoes'): W-statistic=0.9958, p-value=0.0010, Result=Shapiro-Wilk Test Failed\n(2013, 'o_rice'): W-statistic=0.9466, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2013, 'o_tomatoes'): W-statistic=0.9549, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2013, 'onions'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2013, 'potatoes'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2013, 'rice'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2013, 'tomatoes'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2014, 'beans'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2014, 'c_beans'): W-statistic=0.9756, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2014, 'c_cabbage'): W-statistic=0.9229, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2014, 'c_carrots'): W-statistic=0.8970, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2014, 'c_eggs'): W-statistic=0.7415, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2014, 'c_garlic'): W-statistic=0.8013, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2014, 'c_meat_beef_chops'): W-statistic=0.9866, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2014, 'c_meat_chicken_whole'): W-statistic=0.9050, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2014, 'c_meat_pork'): W-statistic=0.9877, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2014, 'c_onions'): W-statistic=0.9818, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2014, 'c_potatoes'): W-statistic=0.9871, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2014, 'c_rice'): W-statistic=0.9931, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2014, 'c_tomatoes'): W-statistic=0.9469, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2014, 'cabbage'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2014, 'carrots'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2014, 'eggs'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2014, 'garlic'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2014, 'h_beans'): W-statistic=0.9717, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2014, 'h_cabbage'): W-statistic=0.9025, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2014, 'h_carrots'): W-statistic=0.8768, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2014, 'h_eggs'): W-statistic=0.7433, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2014, 'h_garlic'): W-statistic=0.7698, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2014, 'h_meat_beef_chops'): W-statistic=0.9853, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2014, 'h_meat_chicken_whole'): W-statistic=0.8970, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2014, 'h_meat_pork'): W-statistic=0.9895, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2014, 'h_onions'): W-statistic=0.9775, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2014, 'h_potatoes'): W-statistic=0.9862, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2014, 'h_rice'): W-statistic=0.9959, p-value=0.0013, Result=Shapiro-Wilk Test Failed\n(2014, 'h_tomatoes'): W-statistic=0.9370, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2014, 'l_beans'): W-statistic=0.9748, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2014, 'l_cabbage'): W-statistic=0.9419, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2014, 'l_carrots'): W-statistic=0.9242, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2014, 'l_eggs'): W-statistic=0.7763, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2014, 'l_garlic'): W-statistic=0.8357, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2014, 'l_meat_beef_chops'): W-statistic=0.9870, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2014, 'l_meat_chicken_whole'): W-statistic=0.9076, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2014, 'l_meat_pork'): W-statistic=0.9885, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2014, 'l_onions'): W-statistic=0.9856, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2014, 'l_potatoes'): W-statistic=0.9897, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2014, 'l_rice'): W-statistic=0.9951, p-value=0.0003, Result=Shapiro-Wilk Test Failed\n(2014, 'l_tomatoes'): W-statistic=0.9709, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2014, 'meat_beef_chops'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2014, 'meat_chicken_whole'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2014, 'meat_pork'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2014, 'o_beans'): W-statistic=0.9727, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2014, 'o_cabbage'): W-statistic=0.9182, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2014, 'o_carrots'): W-statistic=0.9029, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2014, 'o_eggs'): W-statistic=0.7638, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2014, 'o_garlic'): W-statistic=0.8059, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2014, 'o_meat_beef_chops'): W-statistic=0.9859, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2014, 'o_meat_chicken_whole'): W-statistic=0.9022, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2014, 'o_meat_pork'): W-statistic=0.9893, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2014, 'o_onions'): W-statistic=0.9815, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2014, 'o_potatoes'): W-statistic=0.9881, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2014, 'o_rice'): W-statistic=0.9953, p-value=0.0004, Result=Shapiro-Wilk Test Failed\n(2014, 'o_tomatoes'): W-statistic=0.9575, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2014, 'onions'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2014, 'potatoes'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2014, 'rice'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2014, 'tomatoes'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2015, 'beans'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2015, 'c_beans'): W-statistic=0.9825, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2015, 'c_cabbage'): W-statistic=0.9308, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2015, 'c_carrots'): W-statistic=0.9343, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2015, 'c_eggs'): W-statistic=0.7370, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2015, 'c_garlic'): W-statistic=0.6109, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2015, 'c_meat_beef_chops'): W-statistic=0.9951, p-value=0.0003, Result=Shapiro-Wilk Test Failed\n(2015, 'c_meat_chicken_whole'): W-statistic=0.9318, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2015, 'c_meat_pork'): W-statistic=0.9940, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2015, 'c_onions'): W-statistic=0.9163, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2015, 'c_potatoes'): W-statistic=0.9960, p-value=0.0019, Result=Shapiro-Wilk Test Failed\n(2015, 'c_rice'): W-statistic=0.9927, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2015, 'c_tomatoes'): W-statistic=0.9735, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2015, 'cabbage'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2015, 'carrots'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2015, 'eggs'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2015, 'garlic'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2015, 'h_beans'): W-statistic=0.9770, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2015, 'h_cabbage'): W-statistic=0.8833, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2015, 'h_carrots'): W-statistic=0.9049, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2015, 'h_eggs'): W-statistic=0.7461, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2015, 'h_garlic'): W-statistic=0.5726, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2015, 'h_meat_beef_chops'): W-statistic=0.9948, p-value=0.0002, Result=Shapiro-Wilk Test Failed\n(2015, 'h_meat_chicken_whole'): W-statistic=0.9170, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2015, 'h_meat_pork'): W-statistic=0.9903, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2015, 'h_onions'): W-statistic=0.9050, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2015, 'h_potatoes'): W-statistic=0.9954, p-value=0.0005, Result=Shapiro-Wilk Test Failed\n(2015, 'h_rice'): W-statistic=0.9934, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2015, 'h_tomatoes'): W-statistic=0.9665, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2015, 'l_beans'): W-statistic=0.9832, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2015, 'l_cabbage'): W-statistic=0.9581, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2015, 'l_carrots'): W-statistic=0.9403, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2015, 'l_eggs'): W-statistic=0.7376, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2015, 'l_garlic'): W-statistic=0.6673, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2015, 'l_meat_beef_chops'): W-statistic=0.9949, p-value=0.0002, Result=Shapiro-Wilk Test Failed\n(2015, 'l_meat_chicken_whole'): W-statistic=0.9362, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2015, 'l_meat_pork'): W-statistic=0.9938, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2015, 'l_onions'): W-statistic=0.9409, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2015, 'l_potatoes'): W-statistic=0.9958, p-value=0.0012, Result=Shapiro-Wilk Test Failed\n(2015, 'l_rice'): W-statistic=0.9937, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2015, 'l_tomatoes'): W-statistic=0.9737, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2015, 'meat_beef_chops'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2015, 'meat_chicken_whole'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2015, 'meat_pork'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2015, 'o_beans'): W-statistic=0.9797, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2015, 'o_cabbage'): W-statistic=0.9245, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2015, 'o_carrots'): W-statistic=0.9211, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2015, 'o_eggs'): W-statistic=0.7455, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2015, 'o_garlic'): W-statistic=0.6129, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2015, 'o_meat_beef_chops'): W-statistic=0.9949, p-value=0.0002, Result=Shapiro-Wilk Test Failed\n(2015, 'o_meat_chicken_whole'): W-statistic=0.9263, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2015, 'o_meat_pork'): W-statistic=0.9910, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2015, 'o_onions'): W-statistic=0.9197, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2015, 'o_potatoes'): W-statistic=0.9964, p-value=0.0041, Result=Shapiro-Wilk Test Failed\n(2015, 'o_rice'): W-statistic=0.9933, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2015, 'o_tomatoes'): W-statistic=0.9739, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2015, 'onions'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2015, 'potatoes'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2015, 'rice'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2015, 'tomatoes'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2016, 'beans'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2016, 'c_beans'): W-statistic=0.9825, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2016, 'c_cabbage'): W-statistic=0.9503, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2016, 'c_carrots'): W-statistic=0.9378, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2016, 'c_eggs'): W-statistic=0.8072, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2016, 'c_garlic'): W-statistic=0.7251, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2016, 'c_meat_beef_chops'): W-statistic=0.9924, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2016, 'c_meat_chicken_whole'): W-statistic=0.9484, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2016, 'c_meat_pork'): W-statistic=0.9975, p-value=0.0384, Result=Shapiro-Wilk Test Failed\n(2016, 'c_onions'): W-statistic=0.9776, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2016, 'c_potatoes'): W-statistic=0.9816, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2016, 'c_rice'): W-statistic=0.9847, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2016, 'c_tomatoes'): W-statistic=0.9582, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2016, 'cabbage'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2016, 'carrots'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2016, 'eggs'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2016, 'garlic'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2016, 'h_beans'): W-statistic=0.9821, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2016, 'h_cabbage'): W-statistic=0.9239, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2016, 'h_carrots'): W-statistic=0.9214, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2016, 'h_eggs'): W-statistic=0.7720, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2016, 'h_garlic'): W-statistic=0.6910, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2016, 'h_meat_beef_chops'): W-statistic=0.9924, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2016, 'h_meat_chicken_whole'): W-statistic=0.9473, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2016, 'h_meat_pork'): W-statistic=0.9962, p-value=0.0024, Result=Shapiro-Wilk Test Failed\n(2016, 'h_onions'): W-statistic=0.9839, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2016, 'h_potatoes'): W-statistic=0.9671, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2016, 'h_rice'): W-statistic=0.9865, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2016, 'h_tomatoes'): W-statistic=0.9569, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2016, 'l_beans'): W-statistic=0.9844, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2016, 'l_cabbage'): W-statistic=0.9661, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2016, 'l_carrots'): W-statistic=0.9559, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2016, 'l_eggs'): W-statistic=0.7503, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2016, 'l_garlic'): W-statistic=0.7536, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2016, 'l_meat_beef_chops'): W-statistic=0.9920, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2016, 'l_meat_chicken_whole'): W-statistic=0.9466, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2016, 'l_meat_pork'): W-statistic=0.9965, p-value=0.0049, Result=Shapiro-Wilk Test Failed\n(2016, 'l_onions'): W-statistic=0.9804, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2016, 'l_potatoes'): W-statistic=0.9929, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2016, 'l_rice'): W-statistic=0.9882, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2016, 'l_tomatoes'): W-statistic=0.9563, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2016, 'meat_beef_chops'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2016, 'meat_chicken_whole'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2016, 'meat_pork'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2016, 'o_beans'): W-statistic=0.9835, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2016, 'o_cabbage'): W-statistic=0.9523, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2016, 'o_carrots'): W-statistic=0.9517, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2016, 'o_eggs'): W-statistic=0.7417, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2016, 'o_garlic'): W-statistic=0.7172, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2016, 'o_meat_beef_chops'): W-statistic=0.9925, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2016, 'o_meat_chicken_whole'): W-statistic=0.9463, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2016, 'o_meat_pork'): W-statistic=0.9962, p-value=0.0024, Result=Shapiro-Wilk Test Failed\n(2016, 'o_onions'): W-statistic=0.9768, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2016, 'o_potatoes'): W-statistic=0.9841, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2016, 'o_rice'): W-statistic=0.9871, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2016, 'o_tomatoes'): W-statistic=0.9624, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2016, 'onions'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2016, 'potatoes'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2016, 'rice'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2016, 'tomatoes'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2017, 'beans'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2017, 'c_beans'): W-statistic=0.9645, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2017, 'c_cabbage'): W-statistic=0.9547, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2017, 'c_carrots'): W-statistic=0.8748, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2017, 'c_eggs'): W-statistic=0.9687, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2017, 'c_garlic'): W-statistic=0.8498, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2017, 'c_meat_beef_chops'): W-statistic=0.9910, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2017, 'c_meat_chicken_whole'): W-statistic=0.9418, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2017, 'c_meat_pork'): W-statistic=0.9790, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2017, 'c_onions'): W-statistic=0.8922, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2017, 'c_potatoes'): W-statistic=0.9959, p-value=0.0015, Result=Shapiro-Wilk Test Failed\n(2017, 'c_rice'): W-statistic=0.9785, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2017, 'c_tomatoes'): W-statistic=0.9701, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2017, 'cabbage'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2017, 'carrots'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2017, 'eggs'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2017, 'garlic'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2017, 'h_beans'): W-statistic=0.9609, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2017, 'h_cabbage'): W-statistic=0.8987, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2017, 'h_carrots'): W-statistic=0.7946, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2017, 'h_eggs'): W-statistic=0.9727, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2017, 'h_garlic'): W-statistic=0.8455, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2017, 'h_meat_beef_chops'): W-statistic=0.9891, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2017, 'h_meat_chicken_whole'): W-statistic=0.9340, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2017, 'h_meat_pork'): W-statistic=0.9828, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2017, 'h_onions'): W-statistic=0.9170, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2017, 'h_potatoes'): W-statistic=0.9944, p-value=0.0001, Result=Shapiro-Wilk Test Failed\n(2017, 'h_rice'): W-statistic=0.9779, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2017, 'h_tomatoes'): W-statistic=0.9416, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2017, 'l_beans'): W-statistic=0.9729, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2017, 'l_cabbage'): W-statistic=0.9670, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2017, 'l_carrots'): W-statistic=0.9341, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2017, 'l_eggs'): W-statistic=0.9771, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2017, 'l_garlic'): W-statistic=0.8525, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2017, 'l_meat_beef_chops'): W-statistic=0.9915, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2017, 'l_meat_chicken_whole'): W-statistic=0.9526, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2017, 'l_meat_pork'): W-statistic=0.9831, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2017, 'l_onions'): W-statistic=0.9816, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2017, 'l_potatoes'): W-statistic=0.9968, p-value=0.0092, Result=Shapiro-Wilk Test Failed\n(2017, 'l_rice'): W-statistic=0.9871, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2017, 'l_tomatoes'): W-statistic=0.9636, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2017, 'meat_beef_chops'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2017, 'meat_chicken_whole'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2017, 'meat_pork'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2017, 'o_beans'): W-statistic=0.9674, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2017, 'o_cabbage'): W-statistic=0.9381, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2017, 'o_carrots'): W-statistic=0.8712, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2017, 'o_eggs'): W-statistic=0.9766, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2017, 'o_garlic'): W-statistic=0.8480, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2017, 'o_meat_beef_chops'): W-statistic=0.9903, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2017, 'o_meat_chicken_whole'): W-statistic=0.9447, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2017, 'o_meat_pork'): W-statistic=0.9829, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2017, 'o_onions'): W-statistic=0.9763, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2017, 'o_potatoes'): W-statistic=0.9963, p-value=0.0032, Result=Shapiro-Wilk Test Failed\n(2017, 'o_rice'): W-statistic=0.9833, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2017, 'o_tomatoes'): W-statistic=0.9690, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2017, 'onions'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2017, 'potatoes'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2017, 'rice'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2017, 'tomatoes'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2018, 'beans'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2018, 'c_beans'): W-statistic=0.9725, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2018, 'c_cabbage'): W-statistic=0.8493, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2018, 'c_carrots'): W-statistic=0.9265, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2018, 'c_eggs'): W-statistic=0.9848, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2018, 'c_garlic'): W-statistic=0.8091, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2018, 'c_meat_beef_chops'): W-statistic=0.9803, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2018, 'c_meat_chicken_whole'): W-statistic=0.9283, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2018, 'c_meat_pork'): W-statistic=0.9982, p-value=0.1673, Result=Pass\n(2018, 'c_onions'): W-statistic=0.9594, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2018, 'c_potatoes'): W-statistic=0.9962, p-value=0.0027, Result=Shapiro-Wilk Test Failed\n(2018, 'c_rice'): W-statistic=0.9787, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2018, 'c_tomatoes'): W-statistic=0.9718, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2018, 'cabbage'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2018, 'carrots'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2018, 'eggs'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2018, 'garlic'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2018, 'h_beans'): W-statistic=0.9649, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2018, 'h_cabbage'): W-statistic=0.7648, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2018, 'h_carrots'): W-statistic=0.8764, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2018, 'h_eggs'): W-statistic=0.9818, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2018, 'h_garlic'): W-statistic=0.7901, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2018, 'h_meat_beef_chops'): W-statistic=0.9806, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2018, 'h_meat_chicken_whole'): W-statistic=0.9220, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2018, 'h_meat_pork'): W-statistic=0.9991, p-value=0.8103, Result=Pass\n(2018, 'h_onions'): W-statistic=0.9301, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2018, 'h_potatoes'): W-statistic=0.9901, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2018, 'h_rice'): W-statistic=0.9781, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2018, 'h_tomatoes'): W-statistic=0.9187, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2018, 'l_beans'): W-statistic=0.9743, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2018, 'l_cabbage'): W-statistic=0.9470, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2018, 'l_carrots'): W-statistic=0.9569, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2018, 'l_eggs'): W-statistic=0.9893, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2018, 'l_garlic'): W-statistic=0.8303, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2018, 'l_meat_beef_chops'): W-statistic=0.9814, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2018, 'l_meat_chicken_whole'): W-statistic=0.9387, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2018, 'l_meat_pork'): W-statistic=0.9981, p-value=0.1549, Result=Pass\n(2018, 'l_onions'): W-statistic=0.9711, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2018, 'l_potatoes'): W-statistic=0.9934, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2018, 'l_rice'): W-statistic=0.9924, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2018, 'l_tomatoes'): W-statistic=0.9870, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2018, 'meat_beef_chops'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2018, 'meat_chicken_whole'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2018, 'meat_pork'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2018, 'o_beans'): W-statistic=0.9700, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2018, 'o_cabbage'): W-statistic=0.8640, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2018, 'o_carrots'): W-statistic=0.9272, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2018, 'o_eggs'): W-statistic=0.9851, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2018, 'o_garlic'): W-statistic=0.8100, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2018, 'o_meat_beef_chops'): W-statistic=0.9813, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2018, 'o_meat_chicken_whole'): W-statistic=0.9321, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2018, 'o_meat_pork'): W-statistic=0.9990, p-value=0.7274, Result=Pass\n(2018, 'o_onions'): W-statistic=0.9538, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2018, 'o_potatoes'): W-statistic=0.9937, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2018, 'o_rice'): W-statistic=0.9866, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2018, 'o_tomatoes'): W-statistic=0.9747, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2018, 'onions'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2018, 'potatoes'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2018, 'rice'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2018, 'tomatoes'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2019, 'beans'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2019, 'c_beans'): W-statistic=0.9816, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2019, 'c_cabbage'): W-statistic=0.9854, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2019, 'c_carrots'): W-statistic=0.9791, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2019, 'c_eggs'): W-statistic=0.9900, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2019, 'c_garlic'): W-statistic=0.7890, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2019, 'c_meat_beef_chops'): W-statistic=0.9830, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2019, 'c_meat_chicken_whole'): W-statistic=0.9267, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2019, 'c_meat_pork'): W-statistic=0.9796, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2019, 'c_onions'): W-statistic=0.9701, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2019, 'c_potatoes'): W-statistic=0.9904, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2019, 'c_rice'): W-statistic=0.9831, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2019, 'c_tomatoes'): W-statistic=0.9915, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2019, 'cabbage'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2019, 'carrots'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2019, 'eggs'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2019, 'garlic'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2019, 'h_beans'): W-statistic=0.9783, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2019, 'h_cabbage'): W-statistic=0.9715, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2019, 'h_carrots'): W-statistic=0.9530, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2019, 'h_eggs'): W-statistic=0.9860, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2019, 'h_garlic'): W-statistic=0.7600, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2019, 'h_meat_beef_chops'): W-statistic=0.9826, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2019, 'h_meat_chicken_whole'): W-statistic=0.9140, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2019, 'h_meat_pork'): W-statistic=0.9827, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2019, 'h_onions'): W-statistic=0.9839, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2019, 'h_potatoes'): W-statistic=0.9900, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2019, 'h_rice'): W-statistic=0.9842, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2019, 'h_tomatoes'): W-statistic=0.9889, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2019, 'l_beans'): W-statistic=0.9829, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2019, 'l_cabbage'): W-statistic=0.9875, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2019, 'l_carrots'): W-statistic=0.9849, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2019, 'l_eggs'): W-statistic=0.9916, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2019, 'l_garlic'): W-statistic=0.8258, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2019, 'l_meat_beef_chops'): W-statistic=0.9810, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2019, 'l_meat_chicken_whole'): W-statistic=0.9358, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2019, 'l_meat_pork'): W-statistic=0.9787, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2019, 'l_onions'): W-statistic=0.9896, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2019, 'l_potatoes'): W-statistic=0.9895, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2019, 'l_rice'): W-statistic=0.9928, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2019, 'l_tomatoes'): W-statistic=0.9869, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2019, 'meat_beef_chops'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2019, 'meat_chicken_whole'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2019, 'meat_pork'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2019, 'o_beans'): W-statistic=0.9812, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2019, 'o_cabbage'): W-statistic=0.9790, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2019, 'o_carrots'): W-statistic=0.9683, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2019, 'o_eggs'): W-statistic=0.9895, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2019, 'o_garlic'): W-statistic=0.7942, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2019, 'o_meat_beef_chops'): W-statistic=0.9814, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2019, 'o_meat_chicken_whole'): W-statistic=0.9236, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2019, 'o_meat_pork'): W-statistic=0.9808, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2019, 'o_onions'): W-statistic=0.9908, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2019, 'o_potatoes'): W-statistic=0.9902, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2019, 'o_rice'): W-statistic=0.9930, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2019, 'o_tomatoes'): W-statistic=0.9882, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2019, 'onions'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2019, 'potatoes'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2019, 'rice'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2019, 'tomatoes'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2020, 'beans'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2020, 'c_beans'): W-statistic=0.7958, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2020, 'c_cabbage'): W-statistic=0.9528, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2020, 'c_carrots'): W-statistic=0.9662, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2020, 'c_eggs'): W-statistic=0.9807, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2020, 'c_garlic'): W-statistic=0.7907, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2020, 'c_meat_beef_chops'): W-statistic=0.9712, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2020, 'c_meat_chicken_whole'): W-statistic=0.9766, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2020, 'c_meat_pork'): W-statistic=0.9201, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2020, 'c_onions'): W-statistic=0.9504, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2020, 'c_potatoes'): W-statistic=0.9793, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2020, 'c_rice'): W-statistic=0.9737, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2020, 'c_tomatoes'): W-statistic=0.8707, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2020, 'cabbage'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2020, 'carrots'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2020, 'eggs'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2020, 'garlic'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2020, 'h_beans'): W-statistic=0.7740, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2020, 'h_cabbage'): W-statistic=0.9481, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2020, 'h_carrots'): W-statistic=0.9593, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2020, 'h_eggs'): W-statistic=0.9804, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2020, 'h_garlic'): W-statistic=0.7784, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2020, 'h_meat_beef_chops'): W-statistic=0.9716, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2020, 'h_meat_chicken_whole'): W-statistic=0.9699, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2020, 'h_meat_pork'): W-statistic=0.9239, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2020, 'h_onions'): W-statistic=0.9449, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2020, 'h_potatoes'): W-statistic=0.9785, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2020, 'h_rice'): W-statistic=0.9720, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2020, 'h_tomatoes'): W-statistic=0.8290, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2020, 'l_beans'): W-statistic=0.8250, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2020, 'l_cabbage'): W-statistic=0.9558, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2020, 'l_carrots'): W-statistic=0.9710, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2020, 'l_eggs'): W-statistic=0.9685, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2020, 'l_garlic'): W-statistic=0.8048, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2020, 'l_meat_beef_chops'): W-statistic=0.9721, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2020, 'l_meat_chicken_whole'): W-statistic=0.9763, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2020, 'l_meat_pork'): W-statistic=0.9313, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2020, 'l_onions'): W-statistic=0.9496, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2020, 'l_potatoes'): W-statistic=0.9846, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2020, 'l_rice'): W-statistic=0.9760, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2020, 'l_tomatoes'): W-statistic=0.9116, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2020, 'meat_beef_chops'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2020, 'meat_chicken_whole'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2020, 'meat_pork'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2020, 'o_beans'): W-statistic=0.8034, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2020, 'o_cabbage'): W-statistic=0.9524, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2020, 'o_carrots'): W-statistic=0.9649, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2020, 'o_eggs'): W-statistic=0.9716, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2020, 'o_garlic'): W-statistic=0.7897, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2020, 'o_meat_beef_chops'): W-statistic=0.9724, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2020, 'o_meat_chicken_whole'): W-statistic=0.9734, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2020, 'o_meat_pork'): W-statistic=0.9317, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2020, 'o_onions'): W-statistic=0.9417, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2020, 'o_potatoes'): W-statistic=0.9838, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2020, 'o_rice'): W-statistic=0.9743, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2020, 'o_tomatoes'): W-statistic=0.8697, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2020, 'onions'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2020, 'potatoes'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2020, 'rice'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2020, 'tomatoes'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2021, 'beans'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2021, 'c_beans'): W-statistic=0.9607, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2021, 'c_cabbage'): W-statistic=0.9264, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2021, 'c_carrots'): W-statistic=0.9836, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2021, 'c_eggs'): W-statistic=0.9579, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2021, 'c_garlic'): W-statistic=0.8611, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2021, 'c_meat_beef_chops'): W-statistic=0.9899, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2021, 'c_meat_chicken_whole'): W-statistic=0.9872, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2021, 'c_meat_pork'): W-statistic=0.9748, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2021, 'c_onions'): W-statistic=0.9759, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2021, 'c_potatoes'): W-statistic=0.9909, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2021, 'c_rice'): W-statistic=0.9633, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2021, 'c_tomatoes'): W-statistic=0.9674, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2021, 'cabbage'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2021, 'carrots'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2021, 'eggs'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2021, 'garlic'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2021, 'h_beans'): W-statistic=0.9342, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2021, 'h_cabbage'): W-statistic=0.9136, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2021, 'h_carrots'): W-statistic=0.9758, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2021, 'h_eggs'): W-statistic=0.9540, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2021, 'h_garlic'): W-statistic=0.8581, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2021, 'h_meat_beef_chops'): W-statistic=0.9903, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2021, 'h_meat_chicken_whole'): W-statistic=0.9860, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2021, 'h_meat_pork'): W-statistic=0.9766, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2021, 'h_onions'): W-statistic=0.9663, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2021, 'h_potatoes'): W-statistic=0.9937, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2021, 'h_rice'): W-statistic=0.9577, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2021, 'h_tomatoes'): W-statistic=0.9218, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2021, 'l_beans'): W-statistic=0.9692, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2021, 'l_cabbage'): W-statistic=0.9573, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2021, 'l_carrots'): W-statistic=0.9890, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2021, 'l_eggs'): W-statistic=0.9590, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2021, 'l_garlic'): W-statistic=0.8681, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2021, 'l_meat_beef_chops'): W-statistic=0.9891, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2021, 'l_meat_chicken_whole'): W-statistic=0.9919, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2021, 'l_meat_pork'): W-statistic=0.9785, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2021, 'l_onions'): W-statistic=0.9887, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2021, 'l_potatoes'): W-statistic=0.9894, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2021, 'l_rice'): W-statistic=0.9717, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2021, 'l_tomatoes'): W-statistic=0.9894, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2021, 'meat_beef_chops'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2021, 'meat_chicken_whole'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2021, 'meat_pork'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2021, 'o_beans'): W-statistic=0.9462, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2021, 'o_cabbage'): W-statistic=0.9365, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2021, 'o_carrots'): W-statistic=0.9827, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2021, 'o_eggs'): W-statistic=0.9570, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2021, 'o_garlic'): W-statistic=0.8640, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2021, 'o_meat_beef_chops'): W-statistic=0.9896, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2021, 'o_meat_chicken_whole'): W-statistic=0.9902, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2021, 'o_meat_pork'): W-statistic=0.9784, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2021, 'o_onions'): W-statistic=0.9725, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2021, 'o_potatoes'): W-statistic=0.9924, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2021, 'o_rice'): W-statistic=0.9657, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2021, 'o_tomatoes'): W-statistic=0.9542, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2021, 'onions'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2021, 'potatoes'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2021, 'rice'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2021, 'tomatoes'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2022, 'beans'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2022, 'c_beans'): W-statistic=0.9779, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2022, 'c_cabbage'): W-statistic=0.9933, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2022, 'c_carrots'): W-statistic=0.9818, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2022, 'c_eggs'): W-statistic=0.9748, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2022, 'c_garlic'): W-statistic=0.8340, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2022, 'c_meat_beef_chops'): W-statistic=0.9931, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2022, 'c_meat_chicken_whole'): W-statistic=0.9912, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2022, 'c_meat_pork'): W-statistic=0.9897, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2022, 'c_onions'): W-statistic=0.9209, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2022, 'c_potatoes'): W-statistic=0.9931, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2022, 'c_rice'): W-statistic=0.9366, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2022, 'c_tomatoes'): W-statistic=0.9876, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2022, 'cabbage'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2022, 'carrots'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2022, 'eggs'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2022, 'garlic'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2022, 'h_beans'): W-statistic=0.9758, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2022, 'h_cabbage'): W-statistic=0.9914, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2022, 'h_carrots'): W-statistic=0.9829, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2022, 'h_eggs'): W-statistic=0.9738, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2022, 'h_garlic'): W-statistic=0.8252, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2022, 'h_meat_beef_chops'): W-statistic=0.9934, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2022, 'h_meat_chicken_whole'): W-statistic=0.9887, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2022, 'h_meat_pork'): W-statistic=0.9893, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2022, 'h_onions'): W-statistic=0.9437, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2022, 'h_potatoes'): W-statistic=0.9938, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2022, 'h_rice'): W-statistic=0.9367, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2022, 'h_tomatoes'): W-statistic=0.9744, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2022, 'l_beans'): W-statistic=0.9753, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2022, 'l_cabbage'): W-statistic=0.9934, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2022, 'l_carrots'): W-statistic=0.9829, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2022, 'l_eggs'): W-statistic=0.9718, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2022, 'l_garlic'): W-statistic=0.8444, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2022, 'l_meat_beef_chops'): W-statistic=0.9925, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2022, 'l_meat_chicken_whole'): W-statistic=0.9933, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2022, 'l_meat_pork'): W-statistic=0.9906, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2022, 'l_onions'): W-statistic=0.9641, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2022, 'l_potatoes'): W-statistic=0.9934, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2022, 'l_rice'): W-statistic=0.9448, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2022, 'l_tomatoes'): W-statistic=0.9889, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2022, 'meat_beef_chops'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2022, 'meat_chicken_whole'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2022, 'meat_pork'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2022, 'o_beans'): W-statistic=0.9746, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2022, 'o_cabbage'): W-statistic=0.9928, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2022, 'o_carrots'): W-statistic=0.9820, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2022, 'o_eggs'): W-statistic=0.9728, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2022, 'o_garlic'): W-statistic=0.8365, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2022, 'o_meat_beef_chops'): W-statistic=0.9928, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2022, 'o_meat_chicken_whole'): W-statistic=0.9908, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2022, 'o_meat_pork'): W-statistic=0.9897, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2022, 'o_onions'): W-statistic=0.9605, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2022, 'o_potatoes'): W-statistic=0.9937, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2022, 'o_rice'): W-statistic=0.9406, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2022, 'o_tomatoes'): W-statistic=0.9820, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2022, 'onions'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2022, 'potatoes'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2022, 'rice'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2022, 'tomatoes'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2023, 'beans'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2023, 'c_beans'): W-statistic=0.9815, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2023, 'c_cabbage'): W-statistic=0.9753, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2023, 'c_carrots'): W-statistic=0.9850, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2023, 'c_eggs'): W-statistic=0.9858, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2023, 'c_garlic'): W-statistic=0.7274, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2023, 'c_meat_beef_chops'): W-statistic=0.9809, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2023, 'c_meat_chicken_whole'): W-statistic=0.9905, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2023, 'c_meat_pork'): W-statistic=0.9797, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2023, 'c_onions'): W-statistic=0.8247, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2023, 'c_potatoes'): W-statistic=0.9855, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2023, 'c_rice'): W-statistic=0.9634, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2023, 'c_tomatoes'): W-statistic=0.9678, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2023, 'cabbage'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2023, 'carrots'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2023, 'eggs'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2023, 'garlic'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2023, 'h_beans'): W-statistic=0.9846, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2023, 'h_cabbage'): W-statistic=0.9739, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2023, 'h_carrots'): W-statistic=0.9800, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2023, 'h_eggs'): W-statistic=0.9882, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2023, 'h_garlic'): W-statistic=0.7183, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2023, 'h_meat_beef_chops'): W-statistic=0.9828, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2023, 'h_meat_chicken_whole'): W-statistic=0.9909, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2023, 'h_meat_pork'): W-statistic=0.9822, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2023, 'h_onions'): W-statistic=0.8027, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2023, 'h_potatoes'): W-statistic=0.9808, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2023, 'h_rice'): W-statistic=0.9626, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2023, 'h_tomatoes'): W-statistic=0.9379, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2023, 'l_beans'): W-statistic=0.9809, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2023, 'l_cabbage'): W-statistic=0.9858, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2023, 'l_carrots'): W-statistic=0.9891, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2023, 'l_eggs'): W-statistic=0.9834, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2023, 'l_garlic'): W-statistic=0.7454, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2023, 'l_meat_beef_chops'): W-statistic=0.9804, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2023, 'l_meat_chicken_whole'): W-statistic=0.9911, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2023, 'l_meat_pork'): W-statistic=0.9899, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2023, 'l_onions'): W-statistic=0.9066, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2023, 'l_potatoes'): W-statistic=0.9927, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2023, 'l_rice'): W-statistic=0.9636, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2023, 'l_tomatoes'): W-statistic=0.9912, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2023, 'meat_beef_chops'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2023, 'meat_chicken_whole'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2023, 'meat_pork'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2023, 'o_beans'): W-statistic=0.9834, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2023, 'o_cabbage'): W-statistic=0.9816, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2023, 'o_carrots'): W-statistic=0.9845, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2023, 'o_eggs'): W-statistic=0.9867, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2023, 'o_garlic'): W-statistic=0.7363, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2023, 'o_meat_beef_chops'): W-statistic=0.9819, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2023, 'o_meat_chicken_whole'): W-statistic=0.9917, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2023, 'o_meat_pork'): W-statistic=0.9881, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2023, 'o_onions'): W-statistic=0.8418, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2023, 'o_potatoes'): W-statistic=0.9880, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2023, 'o_rice'): W-statistic=0.9616, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2023, 'o_tomatoes'): W-statistic=0.9606, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2023, 'onions'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2023, 'potatoes'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2023, 'rice'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2023, 'tomatoes'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2024, 'beans'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2024, 'c_beans'): W-statistic=0.9823, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2024, 'c_cabbage'): W-statistic=0.9968, p-value=0.0090, Result=Shapiro-Wilk Test Failed\n(2024, 'c_carrots'): W-statistic=0.9823, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2024, 'c_eggs'): W-statistic=0.9879, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2024, 'c_garlic'): W-statistic=0.6917, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2024, 'c_meat_beef_chops'): W-statistic=0.9833, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2024, 'c_meat_chicken_whole'): W-statistic=0.9798, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2024, 'c_meat_pork'): W-statistic=0.9636, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2024, 'c_onions'): W-statistic=0.9479, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2024, 'c_potatoes'): W-statistic=0.9872, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2024, 'c_rice'): W-statistic=0.9976, p-value=0.0471, Result=Shapiro-Wilk Test Failed\n(2024, 'c_tomatoes'): W-statistic=0.9763, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2024, 'cabbage'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2024, 'carrots'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2024, 'eggs'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2024, 'garlic'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2024, 'h_beans'): W-statistic=0.9823, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2024, 'h_cabbage'): W-statistic=0.9954, p-value=0.0005, Result=Shapiro-Wilk Test Failed\n(2024, 'h_carrots'): W-statistic=0.9841, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2024, 'h_eggs'): W-statistic=0.9844, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2024, 'h_garlic'): W-statistic=0.6793, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2024, 'h_meat_beef_chops'): W-statistic=0.9838, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2024, 'h_meat_chicken_whole'): W-statistic=0.9766, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2024, 'h_meat_pork'): W-statistic=0.9524, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2024, 'h_onions'): W-statistic=0.9252, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2024, 'h_potatoes'): W-statistic=0.9833, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2024, 'h_rice'): W-statistic=0.9984, p-value=0.2640, Result=Pass\n(2024, 'h_tomatoes'): W-statistic=0.9626, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2024, 'l_beans'): W-statistic=0.9798, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2024, 'l_cabbage'): W-statistic=0.9957, p-value=0.0010, Result=Shapiro-Wilk Test Failed\n(2024, 'l_carrots'): W-statistic=0.9843, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2024, 'l_eggs'): W-statistic=0.9840, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2024, 'l_garlic'): W-statistic=0.6956, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2024, 'l_meat_beef_chops'): W-statistic=0.9830, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2024, 'l_meat_chicken_whole'): W-statistic=0.9830, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2024, 'l_meat_pork'): W-statistic=0.9648, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2024, 'l_onions'): W-statistic=0.9425, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2024, 'l_potatoes'): W-statistic=0.9900, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2024, 'l_rice'): W-statistic=0.9980, p-value=0.1202, Result=Pass\n(2024, 'l_tomatoes'): W-statistic=0.9905, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2024, 'meat_beef_chops'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2024, 'meat_chicken_whole'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2024, 'meat_pork'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2024, 'o_beans'): W-statistic=0.9807, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2024, 'o_cabbage'): W-statistic=0.9966, p-value=0.0061, Result=Shapiro-Wilk Test Failed\n(2024, 'o_carrots'): W-statistic=0.9846, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2024, 'o_eggs'): W-statistic=0.9828, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2024, 'o_garlic'): W-statistic=0.6870, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2024, 'o_meat_beef_chops'): W-statistic=0.9836, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2024, 'o_meat_chicken_whole'): W-statistic=0.9793, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2024, 'o_meat_pork'): W-statistic=0.9584, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2024, 'o_onions'): W-statistic=0.9291, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2024, 'o_potatoes'): W-statistic=0.9861, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2024, 'o_rice'): W-statistic=0.9980, p-value=0.1226, Result=Pass\n(2024, 'o_tomatoes'): W-statistic=0.9790, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2024, 'onions'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2024, 'potatoes'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2024, 'rice'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2024, 'tomatoes'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2025, 'beans'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2025, 'c_beans'): W-statistic=0.9834, p-value=0.1932, Result=Pass\n(2025, 'c_cabbage'): W-statistic=0.9642, p-value=0.0050, Result=Shapiro-Wilk Test Failed\n(2025, 'c_carrots'): W-statistic=0.9341, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2025, 'c_eggs'): W-statistic=0.9683, p-value=0.0106, Result=Shapiro-Wilk Test Failed\n(2025, 'c_garlic'): W-statistic=0.7040, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2025, 'c_meat_beef_chops'): W-statistic=0.9778, p-value=0.0652, Result=Pass\n(2025, 'c_meat_chicken_whole'): W-statistic=0.9482, p-value=0.0003, Result=Shapiro-Wilk Test Failed\n(2025, 'c_meat_pork'): W-statistic=0.9613, p-value=0.0030, Result=Shapiro-Wilk Test Failed\n(2025, 'c_onions'): W-statistic=0.9350, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2025, 'c_potatoes'): W-statistic=0.9426, p-value=0.0001, Result=Shapiro-Wilk Test Failed\n(2025, 'c_rice'): W-statistic=0.9738, p-value=0.0302, Result=Shapiro-Wilk Test Failed\n(2025, 'c_tomatoes'): W-statistic=0.8996, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2025, 'cabbage'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2025, 'carrots'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2025, 'eggs'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2025, 'garlic'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2025, 'h_beans'): W-statistic=0.9800, p-value=0.1003, Result=Pass\n(2025, 'h_cabbage'): W-statistic=0.9745, p-value=0.0344, Result=Shapiro-Wilk Test Failed\n(2025, 'h_carrots'): W-statistic=0.9491, p-value=0.0004, Result=Shapiro-Wilk Test Failed\n(2025, 'h_eggs'): W-statistic=0.9641, p-value=0.0049, Result=Shapiro-Wilk Test Failed\n(2025, 'h_garlic'): W-statistic=0.6746, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2025, 'h_meat_beef_chops'): W-statistic=0.9787, p-value=0.0782, Result=Pass\n(2025, 'h_meat_chicken_whole'): W-statistic=0.9487, p-value=0.0004, Result=Shapiro-Wilk Test Failed\n(2025, 'h_meat_pork'): W-statistic=0.9797, p-value=0.0951, Result=Pass\n(2025, 'h_onions'): W-statistic=0.9343, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2025, 'h_potatoes'): W-statistic=0.9500, p-value=0.0005, Result=Shapiro-Wilk Test Failed\n(2025, 'h_rice'): W-statistic=0.9751, p-value=0.0389, Result=Shapiro-Wilk Test Failed\n(2025, 'h_tomatoes'): W-statistic=0.8989, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2025, 'l_beans'): W-statistic=0.9797, p-value=0.0953, Result=Pass\n(2025, 'l_cabbage'): W-statistic=0.9823, p-value=0.1580, Result=Pass\n(2025, 'l_carrots'): W-statistic=0.9497, p-value=0.0004, Result=Shapiro-Wilk Test Failed\n(2025, 'l_eggs'): W-statistic=0.9452, p-value=0.0002, Result=Shapiro-Wilk Test Failed\n(2025, 'l_garlic'): W-statistic=0.7138, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2025, 'l_meat_beef_chops'): W-statistic=0.9809, p-value=0.1199, Result=Pass\n(2025, 'l_meat_chicken_whole'): W-statistic=0.9559, p-value=0.0012, Result=Shapiro-Wilk Test Failed\n(2025, 'l_meat_pork'): W-statistic=0.9674, p-value=0.0090, Result=Shapiro-Wilk Test Failed\n(2025, 'l_onions'): W-statistic=0.9380, p-value=0.0001, Result=Shapiro-Wilk Test Failed\n(2025, 'l_potatoes'): W-statistic=0.9586, p-value=0.0019, Result=Shapiro-Wilk Test Failed\n(2025, 'l_rice'): W-statistic=0.9778, p-value=0.0658, Result=Pass\n(2025, 'l_tomatoes'): W-statistic=0.9469, p-value=0.0003, Result=Shapiro-Wilk Test Failed\n(2025, 'meat_beef_chops'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2025, 'meat_chicken_whole'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2025, 'meat_pork'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2025, 'o_beans'): W-statistic=0.9789, p-value=0.0806, Result=Pass\n(2025, 'o_cabbage'): W-statistic=0.9789, p-value=0.0812, Result=Pass\n(2025, 'o_carrots'): W-statistic=0.9463, p-value=0.0003, Result=Shapiro-Wilk Test Failed\n(2025, 'o_eggs'): W-statistic=0.9541, p-value=0.0009, Result=Shapiro-Wilk Test Failed\n(2025, 'o_garlic'): W-statistic=0.6760, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2025, 'o_meat_beef_chops'): W-statistic=0.9792, p-value=0.0861, Result=Pass\n(2025, 'o_meat_chicken_whole'): W-statistic=0.9534, p-value=0.0008, Result=Shapiro-Wilk Test Failed\n(2025, 'o_meat_pork'): W-statistic=0.9783, p-value=0.0714, Result=Pass\n(2025, 'o_onions'): W-statistic=0.9338, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2025, 'o_potatoes'): W-statistic=0.9525, p-value=0.0007, Result=Shapiro-Wilk Test Failed\n(2025, 'o_rice'): W-statistic=0.9720, p-value=0.0213, Result=Shapiro-Wilk Test Failed\n(2025, 'o_tomatoes'): W-statistic=0.9227, p-value=0.0000, Result=Shapiro-Wilk Test Failed\n(2025, 'onions'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2025, 'potatoes'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2025, 'rice'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n(2025, 'tomatoes'): W-statistic=nan, p-value=nan, Result=Shapiro-Wilk Test Failed\n\n\n\n\nonly few passed, and most failed the test. But to be sure, Homogeneity of variances must be tested.\n\n\n2. Homogeneity of Variance\n\n# Group the data by year and Food_Items\ngrouped_data = df_melted.groupby(['year', 'Food_Items'])\n\nfor (year, food_item), group in grouped_data:\n    # Extract prices for all regions within the group\n    region_prices = [group[group['Region'] == region]['Price'].values \n                     for region in group['Region'].unique()] \n    \n    if len(region_prices) &gt; 1:  # Ensure there's more than one region\n        try:\n            stat, p = levene(*region_prices)\n            if p &gt; 0.05:  # Levene's test not significant (p &gt; 0.05)\n                print(f'{food_item} ({year}): Levene\\'s Test passed (p-value: {p:.4f})')\n            else:\n                print(f'{food_item} ({year}): Levene\\'s Test failed (p-value: {p:.4f})')\n        except ValueError:\n            print(f\"{food_item} ({year}): Levene's test failed. \"\n                  \"Possible issue with data (e.g., all values are the same).\")\n    else:\n        print(f'{food_item} ({year}): Only one region, cannot apply Levene\\'s test')\n\nbeans (2007): Levene's Test failed (p-value: nan)\nc_beans (2007): Levene's Test failed (p-value: 0.0000)\nc_cabbage (2007): Levene's Test failed (p-value: 0.0000)\nc_carrots (2007): Levene's Test failed (p-value: 0.0000)\nc_eggs (2007): Levene's Test failed (p-value: 0.0000)\nc_garlic (2007): Levene's Test failed (p-value: 0.0000)\nc_meat_beef_chops (2007): Levene's Test failed (p-value: 0.0000)\nc_meat_chicken_whole (2007): Levene's Test failed (p-value: 0.0000)\nc_meat_pork (2007): Levene's Test failed (p-value: 0.0025)\nc_onions (2007): Levene's Test failed (p-value: 0.0000)\nc_potatoes (2007): Levene's Test failed (p-value: 0.0000)\nc_rice (2007): Levene's Test failed (p-value: 0.0004)\nc_tomatoes (2007): Levene's Test failed (p-value: 0.0000)\ncabbage (2007): Levene's Test failed (p-value: nan)\ncarrots (2007): Levene's Test failed (p-value: nan)\neggs (2007): Levene's Test failed (p-value: nan)\ngarlic (2007): Levene's Test failed (p-value: nan)\nh_beans (2007): Levene's Test failed (p-value: 0.0000)\nh_cabbage (2007): Levene's Test failed (p-value: 0.0000)\nh_carrots (2007): Levene's Test failed (p-value: 0.0000)\nh_eggs (2007): Levene's Test failed (p-value: 0.0000)\nh_garlic (2007): Levene's Test failed (p-value: 0.0000)\nh_meat_beef_chops (2007): Levene's Test failed (p-value: 0.0000)\nh_meat_chicken_whole (2007): Levene's Test failed (p-value: 0.0000)\nh_meat_pork (2007): Levene's Test failed (p-value: 0.0012)\nh_onions (2007): Levene's Test failed (p-value: 0.0000)\nh_potatoes (2007): Levene's Test failed (p-value: 0.0000)\nh_rice (2007): Levene's Test failed (p-value: 0.0001)\nh_tomatoes (2007): Levene's Test failed (p-value: 0.0000)\nl_beans (2007): Levene's Test failed (p-value: 0.0000)\nl_cabbage (2007): Levene's Test failed (p-value: 0.0000)\nl_carrots (2007): Levene's Test failed (p-value: 0.0000)\nl_eggs (2007): Levene's Test failed (p-value: 0.0000)\nl_garlic (2007): Levene's Test failed (p-value: 0.0000)\nl_meat_beef_chops (2007): Levene's Test failed (p-value: 0.0000)\nl_meat_chicken_whole (2007): Levene's Test failed (p-value: 0.0000)\nl_meat_pork (2007): Levene's Test failed (p-value: 0.0007)\nl_onions (2007): Levene's Test failed (p-value: 0.0000)\nl_potatoes (2007): Levene's Test failed (p-value: 0.0000)\nl_rice (2007): Levene's Test passed (p-value: 0.6803)\nl_tomatoes (2007): Levene's Test failed (p-value: 0.0000)\nmeat_beef_chops (2007): Levene's Test failed (p-value: nan)\nmeat_chicken_whole (2007): Levene's Test failed (p-value: nan)\nmeat_pork (2007): Levene's Test failed (p-value: nan)\no_beans (2007): Levene's Test failed (p-value: 0.0000)\no_cabbage (2007): Levene's Test failed (p-value: 0.0000)\no_carrots (2007): Levene's Test failed (p-value: 0.0000)\no_eggs (2007): Levene's Test failed (p-value: 0.0000)\no_garlic (2007): Levene's Test failed (p-value: 0.0000)\no_meat_beef_chops (2007): Levene's Test failed (p-value: 0.0000)\no_meat_chicken_whole (2007): Levene's Test failed (p-value: 0.0000)\no_meat_pork (2007): Levene's Test failed (p-value: 0.0008)\no_onions (2007): Levene's Test failed (p-value: 0.0000)\no_potatoes (2007): Levene's Test failed (p-value: 0.0000)\no_rice (2007): Levene's Test passed (p-value: 0.3082)\no_tomatoes (2007): Levene's Test failed (p-value: 0.0000)\nonions (2007): Levene's Test failed (p-value: nan)\npotatoes (2007): Levene's Test failed (p-value: nan)\nrice (2007): Levene's Test failed (p-value: nan)\ntomatoes (2007): Levene's Test failed (p-value: nan)\nbeans (2008): Levene's Test failed (p-value: nan)\nc_beans (2008): Levene's Test failed (p-value: 0.0000)\nc_cabbage (2008): Levene's Test failed (p-value: 0.0000)\nc_carrots (2008): Levene's Test failed (p-value: 0.0000)\nc_eggs (2008): Levene's Test failed (p-value: 0.0000)\nc_garlic (2008): Levene's Test failed (p-value: 0.0000)\nc_meat_beef_chops (2008): Levene's Test failed (p-value: 0.0000)\nc_meat_chicken_whole (2008): Levene's Test failed (p-value: 0.0000)\nc_meat_pork (2008): Levene's Test failed (p-value: 0.0002)\nc_onions (2008): Levene's Test failed (p-value: 0.0278)\nc_potatoes (2008): Levene's Test failed (p-value: 0.0135)\nc_rice (2008): Levene's Test passed (p-value: 0.4726)\nc_tomatoes (2008): Levene's Test failed (p-value: 0.0000)\ncabbage (2008): Levene's Test failed (p-value: nan)\ncarrots (2008): Levene's Test failed (p-value: nan)\neggs (2008): Levene's Test failed (p-value: nan)\ngarlic (2008): Levene's Test failed (p-value: nan)\nh_beans (2008): Levene's Test failed (p-value: 0.0000)\nh_cabbage (2008): Levene's Test failed (p-value: 0.0000)\nh_carrots (2008): Levene's Test failed (p-value: 0.0000)\nh_eggs (2008): Levene's Test failed (p-value: 0.0000)\nh_garlic (2008): Levene's Test failed (p-value: 0.0000)\nh_meat_beef_chops (2008): Levene's Test failed (p-value: 0.0000)\nh_meat_chicken_whole (2008): Levene's Test failed (p-value: 0.0000)\nh_meat_pork (2008): Levene's Test failed (p-value: 0.0000)\nh_onions (2008): Levene's Test failed (p-value: 0.0266)\nh_potatoes (2008): Levene's Test failed (p-value: 0.0132)\nh_rice (2008): Levene's Test passed (p-value: 0.5126)\nh_tomatoes (2008): Levene's Test failed (p-value: 0.0000)\nl_beans (2008): Levene's Test failed (p-value: 0.0000)\nl_cabbage (2008): Levene's Test failed (p-value: 0.0000)\nl_carrots (2008): Levene's Test failed (p-value: 0.0000)\nl_eggs (2008): Levene's Test failed (p-value: 0.0000)\nl_garlic (2008): Levene's Test failed (p-value: 0.0000)\nl_meat_beef_chops (2008): Levene's Test failed (p-value: 0.0000)\nl_meat_chicken_whole (2008): Levene's Test failed (p-value: 0.0000)\nl_meat_pork (2008): Levene's Test failed (p-value: 0.0000)\nl_onions (2008): Levene's Test failed (p-value: 0.0024)\nl_potatoes (2008): Levene's Test failed (p-value: 0.0000)\nl_rice (2008): Levene's Test passed (p-value: 0.2694)\nl_tomatoes (2008): Levene's Test failed (p-value: 0.0000)\nmeat_beef_chops (2008): Levene's Test failed (p-value: nan)\nmeat_chicken_whole (2008): Levene's Test failed (p-value: nan)\nmeat_pork (2008): Levene's Test failed (p-value: nan)\no_beans (2008): Levene's Test failed (p-value: 0.0000)\no_cabbage (2008): Levene's Test failed (p-value: 0.0000)\no_carrots (2008): Levene's Test failed (p-value: 0.0000)\no_eggs (2008): Levene's Test failed (p-value: 0.0000)\no_garlic (2008): Levene's Test failed (p-value: 0.0000)\no_meat_beef_chops (2008): Levene's Test failed (p-value: 0.0000)\no_meat_chicken_whole (2008): Levene's Test failed (p-value: 0.0000)\no_meat_pork (2008): Levene's Test failed (p-value: 0.0000)\no_onions (2008): Levene's Test passed (p-value: 0.0518)\no_potatoes (2008): Levene's Test failed (p-value: 0.0009)\no_rice (2008): Levene's Test passed (p-value: 0.5903)\no_tomatoes (2008): Levene's Test failed (p-value: 0.0000)\nonions (2008): Levene's Test failed (p-value: nan)\npotatoes (2008): Levene's Test failed (p-value: nan)\nrice (2008): Levene's Test failed (p-value: nan)\ntomatoes (2008): Levene's Test failed (p-value: nan)\nbeans (2009): Levene's Test failed (p-value: nan)\nc_beans (2009): Levene's Test failed (p-value: 0.0000)\nc_cabbage (2009): Levene's Test failed (p-value: 0.0000)\nc_carrots (2009): Levene's Test failed (p-value: 0.0000)\nc_eggs (2009): Levene's Test failed (p-value: 0.0000)\nc_garlic (2009): Levene's Test failed (p-value: 0.0000)\nc_meat_beef_chops (2009): Levene's Test failed (p-value: 0.0000)\nc_meat_chicken_whole (2009): Levene's Test failed (p-value: 0.0000)\nc_meat_pork (2009): Levene's Test failed (p-value: 0.0000)\nc_onions (2009): Levene's Test failed (p-value: 0.0022)\nc_potatoes (2009): Levene's Test failed (p-value: 0.0000)\nc_rice (2009): Levene's Test failed (p-value: 0.0000)\nc_tomatoes (2009): Levene's Test failed (p-value: 0.0000)\ncabbage (2009): Levene's Test failed (p-value: nan)\ncarrots (2009): Levene's Test failed (p-value: nan)\neggs (2009): Levene's Test failed (p-value: nan)\ngarlic (2009): Levene's Test failed (p-value: nan)\nh_beans (2009): Levene's Test failed (p-value: 0.0000)\nh_cabbage (2009): Levene's Test failed (p-value: 0.0000)\nh_carrots (2009): Levene's Test failed (p-value: 0.0000)\nh_eggs (2009): Levene's Test failed (p-value: 0.0000)\nh_garlic (2009): Levene's Test failed (p-value: 0.0000)\nh_meat_beef_chops (2009): Levene's Test failed (p-value: 0.0000)\nh_meat_chicken_whole (2009): Levene's Test failed (p-value: 0.0000)\nh_meat_pork (2009): Levene's Test failed (p-value: 0.0000)\nh_onions (2009): Levene's Test failed (p-value: 0.0003)\nh_potatoes (2009): Levene's Test failed (p-value: 0.0000)\nh_rice (2009): Levene's Test failed (p-value: 0.0036)\nh_tomatoes (2009): Levene's Test failed (p-value: 0.0000)\nl_beans (2009): Levene's Test failed (p-value: 0.0000)\nl_cabbage (2009): Levene's Test failed (p-value: 0.0000)\nl_carrots (2009): Levene's Test failed (p-value: 0.0000)\nl_eggs (2009): Levene's Test failed (p-value: 0.0000)\nl_garlic (2009): Levene's Test failed (p-value: 0.0000)\nl_meat_beef_chops (2009): Levene's Test failed (p-value: 0.0000)\nl_meat_chicken_whole (2009): Levene's Test failed (p-value: 0.0000)\nl_meat_pork (2009): Levene's Test failed (p-value: 0.0000)\nl_onions (2009): Levene's Test failed (p-value: 0.0005)\nl_potatoes (2009): Levene's Test failed (p-value: 0.0000)\nl_rice (2009): Levene's Test failed (p-value: 0.0000)\nl_tomatoes (2009): Levene's Test failed (p-value: 0.0000)\nmeat_beef_chops (2009): Levene's Test failed (p-value: nan)\nmeat_chicken_whole (2009): Levene's Test failed (p-value: nan)\nmeat_pork (2009): Levene's Test failed (p-value: nan)\no_beans (2009): Levene's Test failed (p-value: 0.0000)\no_cabbage (2009): Levene's Test failed (p-value: 0.0000)\no_carrots (2009): Levene's Test failed (p-value: 0.0000)\no_eggs (2009): Levene's Test failed (p-value: 0.0000)\no_garlic (2009): Levene's Test failed (p-value: 0.0000)\no_meat_beef_chops (2009): Levene's Test failed (p-value: 0.0000)\no_meat_chicken_whole (2009): Levene's Test failed (p-value: 0.0000)\no_meat_pork (2009): Levene's Test failed (p-value: 0.0000)\no_onions (2009): Levene's Test failed (p-value: 0.0005)\no_potatoes (2009): Levene's Test failed (p-value: 0.0000)\no_rice (2009): Levene's Test failed (p-value: 0.0000)\no_tomatoes (2009): Levene's Test failed (p-value: 0.0000)\nonions (2009): Levene's Test failed (p-value: nan)\npotatoes (2009): Levene's Test failed (p-value: nan)\nrice (2009): Levene's Test failed (p-value: nan)\ntomatoes (2009): Levene's Test failed (p-value: nan)\nbeans (2010): Levene's Test failed (p-value: nan)\nc_beans (2010): Levene's Test failed (p-value: 0.0000)\nc_cabbage (2010): Levene's Test failed (p-value: 0.0000)\nc_carrots (2010): Levene's Test failed (p-value: 0.0000)\nc_eggs (2010): Levene's Test failed (p-value: 0.0000)\nc_garlic (2010): Levene's Test failed (p-value: 0.0000)\nc_meat_beef_chops (2010): Levene's Test failed (p-value: 0.0000)\nc_meat_chicken_whole (2010): Levene's Test failed (p-value: 0.0000)\nc_meat_pork (2010): Levene's Test failed (p-value: 0.0000)\nc_onions (2010): Levene's Test passed (p-value: 0.4687)\nc_potatoes (2010): Levene's Test failed (p-value: 0.0000)\nc_rice (2010): Levene's Test failed (p-value: 0.0000)\nc_tomatoes (2010): Levene's Test failed (p-value: 0.0000)\ncabbage (2010): Levene's Test failed (p-value: nan)\ncarrots (2010): Levene's Test failed (p-value: nan)\neggs (2010): Levene's Test failed (p-value: nan)\ngarlic (2010): Levene's Test failed (p-value: nan)\nh_beans (2010): Levene's Test failed (p-value: 0.0000)\nh_cabbage (2010): Levene's Test failed (p-value: 0.0000)\nh_carrots (2010): Levene's Test failed (p-value: 0.0000)\nh_eggs (2010): Levene's Test failed (p-value: 0.0000)\nh_garlic (2010): Levene's Test failed (p-value: 0.0000)\nh_meat_beef_chops (2010): Levene's Test failed (p-value: 0.0000)\nh_meat_chicken_whole (2010): Levene's Test failed (p-value: 0.0000)\nh_meat_pork (2010): Levene's Test failed (p-value: 0.0000)\nh_onions (2010): Levene's Test passed (p-value: 0.5944)\nh_potatoes (2010): Levene's Test failed (p-value: 0.0000)\nh_rice (2010): Levene's Test failed (p-value: 0.0000)\nh_tomatoes (2010): Levene's Test failed (p-value: 0.0000)\nl_beans (2010): Levene's Test failed (p-value: 0.0000)\nl_cabbage (2010): Levene's Test failed (p-value: 0.0000)\nl_carrots (2010): Levene's Test failed (p-value: 0.0000)\nl_eggs (2010): Levene's Test failed (p-value: 0.0000)\nl_garlic (2010): Levene's Test failed (p-value: 0.0000)\nl_meat_beef_chops (2010): Levene's Test failed (p-value: 0.0000)\nl_meat_chicken_whole (2010): Levene's Test failed (p-value: 0.0000)\nl_meat_pork (2010): Levene's Test failed (p-value: 0.0000)\nl_onions (2010): Levene's Test passed (p-value: 0.2757)\nl_potatoes (2010): Levene's Test failed (p-value: 0.0000)\nl_rice (2010): Levene's Test failed (p-value: 0.0000)\nl_tomatoes (2010): Levene's Test failed (p-value: 0.0000)\nmeat_beef_chops (2010): Levene's Test failed (p-value: nan)\nmeat_chicken_whole (2010): Levene's Test failed (p-value: nan)\nmeat_pork (2010): Levene's Test failed (p-value: nan)\no_beans (2010): Levene's Test failed (p-value: 0.0000)\no_cabbage (2010): Levene's Test failed (p-value: 0.0000)\no_carrots (2010): Levene's Test failed (p-value: 0.0000)\no_eggs (2010): Levene's Test failed (p-value: 0.0000)\no_garlic (2010): Levene's Test failed (p-value: 0.0000)\no_meat_beef_chops (2010): Levene's Test failed (p-value: 0.0000)\no_meat_chicken_whole (2010): Levene's Test failed (p-value: 0.0000)\no_meat_pork (2010): Levene's Test failed (p-value: 0.0000)\no_onions (2010): Levene's Test passed (p-value: 0.6049)\no_potatoes (2010): Levene's Test failed (p-value: 0.0000)\no_rice (2010): Levene's Test failed (p-value: 0.0000)\no_tomatoes (2010): Levene's Test failed (p-value: 0.0000)\nonions (2010): Levene's Test failed (p-value: nan)\npotatoes (2010): Levene's Test failed (p-value: nan)\nrice (2010): Levene's Test failed (p-value: nan)\ntomatoes (2010): Levene's Test failed (p-value: nan)\nbeans (2011): Levene's Test failed (p-value: nan)\nc_beans (2011): Levene's Test failed (p-value: 0.0000)\nc_cabbage (2011): Levene's Test failed (p-value: 0.0000)\nc_carrots (2011): Levene's Test failed (p-value: 0.0000)\nc_eggs (2011): Levene's Test failed (p-value: 0.0000)\nc_garlic (2011): Levene's Test failed (p-value: 0.0000)\nc_meat_beef_chops (2011): Levene's Test failed (p-value: 0.0000)\nc_meat_chicken_whole (2011): Levene's Test failed (p-value: 0.0000)\nc_meat_pork (2011): Levene's Test failed (p-value: 0.0000)\nc_onions (2011): Levene's Test failed (p-value: 0.0001)\nc_potatoes (2011): Levene's Test failed (p-value: 0.0000)\nc_rice (2011): Levene's Test failed (p-value: 0.0000)\nc_tomatoes (2011): Levene's Test failed (p-value: 0.0000)\ncabbage (2011): Levene's Test failed (p-value: nan)\ncarrots (2011): Levene's Test failed (p-value: nan)\neggs (2011): Levene's Test failed (p-value: nan)\ngarlic (2011): Levene's Test failed (p-value: nan)\nh_beans (2011): Levene's Test failed (p-value: 0.0000)\nh_cabbage (2011): Levene's Test failed (p-value: 0.0000)\nh_carrots (2011): Levene's Test failed (p-value: 0.0000)\nh_eggs (2011): Levene's Test failed (p-value: 0.0000)\nh_garlic (2011): Levene's Test failed (p-value: 0.0000)\nh_meat_beef_chops (2011): Levene's Test failed (p-value: 0.0000)\nh_meat_chicken_whole (2011): Levene's Test failed (p-value: 0.0000)\nh_meat_pork (2011): Levene's Test failed (p-value: 0.0000)\nh_onions (2011): Levene's Test failed (p-value: 0.0001)\nh_potatoes (2011): Levene's Test failed (p-value: 0.0000)\nh_rice (2011): Levene's Test failed (p-value: 0.0000)\nh_tomatoes (2011): Levene's Test failed (p-value: 0.0000)\nl_beans (2011): Levene's Test failed (p-value: 0.0000)\nl_cabbage (2011): Levene's Test failed (p-value: 0.0000)\nl_carrots (2011): Levene's Test failed (p-value: 0.0000)\nl_eggs (2011): Levene's Test failed (p-value: 0.0000)\nl_garlic (2011): Levene's Test failed (p-value: 0.0000)\nl_meat_beef_chops (2011): Levene's Test failed (p-value: 0.0000)\nl_meat_chicken_whole (2011): Levene's Test failed (p-value: 0.0000)\nl_meat_pork (2011): Levene's Test failed (p-value: 0.0000)\nl_onions (2011): Levene's Test failed (p-value: 0.0095)\nl_potatoes (2011): Levene's Test failed (p-value: 0.0000)\nl_rice (2011): Levene's Test failed (p-value: 0.0000)\nl_tomatoes (2011): Levene's Test failed (p-value: 0.0000)\nmeat_beef_chops (2011): Levene's Test failed (p-value: nan)\nmeat_chicken_whole (2011): Levene's Test failed (p-value: nan)\nmeat_pork (2011): Levene's Test failed (p-value: nan)\no_beans (2011): Levene's Test failed (p-value: 0.0000)\no_cabbage (2011): Levene's Test failed (p-value: 0.0000)\no_carrots (2011): Levene's Test failed (p-value: 0.0000)\no_eggs (2011): Levene's Test failed (p-value: 0.0000)\no_garlic (2011): Levene's Test failed (p-value: 0.0000)\no_meat_beef_chops (2011): Levene's Test failed (p-value: 0.0000)\no_meat_chicken_whole (2011): Levene's Test failed (p-value: 0.0000)\no_meat_pork (2011): Levene's Test failed (p-value: 0.0000)\no_onions (2011): Levene's Test failed (p-value: 0.0000)\no_potatoes (2011): Levene's Test failed (p-value: 0.0000)\no_rice (2011): Levene's Test failed (p-value: 0.0000)\no_tomatoes (2011): Levene's Test failed (p-value: 0.0000)\nonions (2011): Levene's Test failed (p-value: nan)\npotatoes (2011): Levene's Test failed (p-value: nan)\nrice (2011): Levene's Test failed (p-value: nan)\ntomatoes (2011): Levene's Test failed (p-value: nan)\nbeans (2012): Levene's Test failed (p-value: nan)\nc_beans (2012): Levene's Test failed (p-value: 0.0000)\nc_cabbage (2012): Levene's Test failed (p-value: 0.0000)\nc_carrots (2012): Levene's Test failed (p-value: 0.0000)\nc_eggs (2012): Levene's Test failed (p-value: 0.0000)\nc_garlic (2012): Levene's Test failed (p-value: 0.0000)\nc_meat_beef_chops (2012): Levene's Test failed (p-value: 0.0000)\nc_meat_chicken_whole (2012): Levene's Test failed (p-value: 0.0000)\nc_meat_pork (2012): Levene's Test failed (p-value: 0.0000)\nc_onions (2012): Levene's Test failed (p-value: 0.0000)\nc_potatoes (2012): Levene's Test failed (p-value: 0.0000)\nc_rice (2012): Levene's Test failed (p-value: 0.0000)\nc_tomatoes (2012): Levene's Test failed (p-value: 0.0000)\ncabbage (2012): Levene's Test failed (p-value: nan)\ncarrots (2012): Levene's Test failed (p-value: nan)\neggs (2012): Levene's Test failed (p-value: nan)\ngarlic (2012): Levene's Test failed (p-value: nan)\nh_beans (2012): Levene's Test failed (p-value: 0.0000)\nh_cabbage (2012): Levene's Test failed (p-value: 0.0000)\nh_carrots (2012): Levene's Test failed (p-value: 0.0000)\nh_eggs (2012): Levene's Test failed (p-value: 0.0000)\nh_garlic (2012): Levene's Test failed (p-value: 0.0000)\nh_meat_beef_chops (2012): Levene's Test failed (p-value: 0.0000)\nh_meat_chicken_whole (2012): Levene's Test failed (p-value: 0.0000)\nh_meat_pork (2012): Levene's Test failed (p-value: 0.0000)\nh_onions (2012): Levene's Test failed (p-value: 0.0000)\nh_potatoes (2012): Levene's Test failed (p-value: 0.0000)\nh_rice (2012): Levene's Test failed (p-value: 0.0000)\nh_tomatoes (2012): Levene's Test failed (p-value: 0.0000)\nl_beans (2012): Levene's Test failed (p-value: 0.0000)\nl_cabbage (2012): Levene's Test failed (p-value: 0.0000)\nl_carrots (2012): Levene's Test failed (p-value: 0.0000)\nl_eggs (2012): Levene's Test failed (p-value: 0.0000)\nl_garlic (2012): Levene's Test failed (p-value: 0.0000)\nl_meat_beef_chops (2012): Levene's Test failed (p-value: 0.0000)\nl_meat_chicken_whole (2012): Levene's Test failed (p-value: 0.0000)\nl_meat_pork (2012): Levene's Test failed (p-value: 0.0000)\nl_onions (2012): Levene's Test failed (p-value: 0.0000)\nl_potatoes (2012): Levene's Test failed (p-value: 0.0000)\nl_rice (2012): Levene's Test failed (p-value: 0.0000)\nl_tomatoes (2012): Levene's Test failed (p-value: 0.0000)\nmeat_beef_chops (2012): Levene's Test failed (p-value: nan)\nmeat_chicken_whole (2012): Levene's Test failed (p-value: nan)\nmeat_pork (2012): Levene's Test failed (p-value: nan)\no_beans (2012): Levene's Test failed (p-value: 0.0000)\no_cabbage (2012): Levene's Test failed (p-value: 0.0000)\no_carrots (2012): Levene's Test failed (p-value: 0.0000)\no_eggs (2012): Levene's Test failed (p-value: 0.0000)\no_garlic (2012): Levene's Test failed (p-value: 0.0000)\no_meat_beef_chops (2012): Levene's Test failed (p-value: 0.0000)\no_meat_chicken_whole (2012): Levene's Test failed (p-value: 0.0000)\no_meat_pork (2012): Levene's Test failed (p-value: 0.0000)\no_onions (2012): Levene's Test failed (p-value: 0.0000)\no_potatoes (2012): Levene's Test failed (p-value: 0.0000)\no_rice (2012): Levene's Test failed (p-value: 0.0000)\no_tomatoes (2012): Levene's Test failed (p-value: 0.0000)\nonions (2012): Levene's Test failed (p-value: nan)\npotatoes (2012): Levene's Test failed (p-value: nan)\nrice (2012): Levene's Test failed (p-value: nan)\ntomatoes (2012): Levene's Test failed (p-value: nan)\nbeans (2013): Levene's Test failed (p-value: nan)\nc_beans (2013): Levene's Test failed (p-value: 0.0000)\nc_cabbage (2013): Levene's Test failed (p-value: 0.0000)\nc_carrots (2013): Levene's Test failed (p-value: 0.0000)\nc_eggs (2013): Levene's Test failed (p-value: 0.0000)\nc_garlic (2013): Levene's Test failed (p-value: 0.0000)\nc_meat_beef_chops (2013): Levene's Test failed (p-value: 0.0000)\nc_meat_chicken_whole (2013): Levene's Test failed (p-value: 0.0000)\nc_meat_pork (2013): Levene's Test failed (p-value: 0.0000)\nc_onions (2013): Levene's Test failed (p-value: 0.0000)\nc_potatoes (2013): Levene's Test failed (p-value: 0.0000)\nc_rice (2013): Levene's Test failed (p-value: 0.0000)\nc_tomatoes (2013): Levene's Test failed (p-value: 0.0000)\ncabbage (2013): Levene's Test failed (p-value: nan)\ncarrots (2013): Levene's Test failed (p-value: nan)\neggs (2013): Levene's Test failed (p-value: nan)\ngarlic (2013): Levene's Test failed (p-value: nan)\nh_beans (2013): Levene's Test failed (p-value: 0.0000)\nh_cabbage (2013): Levene's Test failed (p-value: 0.0000)\nh_carrots (2013): Levene's Test failed (p-value: 0.0000)\nh_eggs (2013): Levene's Test failed (p-value: 0.0000)\nh_garlic (2013): Levene's Test failed (p-value: 0.0000)\nh_meat_beef_chops (2013): Levene's Test failed (p-value: 0.0000)\nh_meat_chicken_whole (2013): Levene's Test failed (p-value: 0.0000)\nh_meat_pork (2013): Levene's Test failed (p-value: 0.0000)\nh_onions (2013): Levene's Test failed (p-value: 0.0000)\nh_potatoes (2013): Levene's Test failed (p-value: 0.0000)\nh_rice (2013): Levene's Test failed (p-value: 0.0000)\nh_tomatoes (2013): Levene's Test failed (p-value: 0.0000)\nl_beans (2013): Levene's Test failed (p-value: 0.0000)\nl_cabbage (2013): Levene's Test failed (p-value: 0.0000)\nl_carrots (2013): Levene's Test failed (p-value: 0.0000)\nl_eggs (2013): Levene's Test failed (p-value: 0.0000)\nl_garlic (2013): Levene's Test failed (p-value: 0.0000)\nl_meat_beef_chops (2013): Levene's Test failed (p-value: 0.0000)\nl_meat_chicken_whole (2013): Levene's Test failed (p-value: 0.0000)\nl_meat_pork (2013): Levene's Test failed (p-value: 0.0000)\nl_onions (2013): Levene's Test failed (p-value: 0.0000)\nl_potatoes (2013): Levene's Test failed (p-value: 0.0000)\nl_rice (2013): Levene's Test failed (p-value: 0.0000)\nl_tomatoes (2013): Levene's Test failed (p-value: 0.0000)\nmeat_beef_chops (2013): Levene's Test failed (p-value: nan)\nmeat_chicken_whole (2013): Levene's Test failed (p-value: nan)\nmeat_pork (2013): Levene's Test failed (p-value: nan)\no_beans (2013): Levene's Test failed (p-value: 0.0000)\no_cabbage (2013): Levene's Test failed (p-value: 0.0000)\no_carrots (2013): Levene's Test failed (p-value: 0.0000)\no_eggs (2013): Levene's Test failed (p-value: 0.0000)\no_garlic (2013): Levene's Test failed (p-value: 0.0000)\no_meat_beef_chops (2013): Levene's Test failed (p-value: 0.0000)\no_meat_chicken_whole (2013): Levene's Test failed (p-value: 0.0000)\no_meat_pork (2013): Levene's Test failed (p-value: 0.0000)\no_onions (2013): Levene's Test failed (p-value: 0.0000)\no_potatoes (2013): Levene's Test failed (p-value: 0.0000)\no_rice (2013): Levene's Test failed (p-value: 0.0000)\no_tomatoes (2013): Levene's Test failed (p-value: 0.0000)\nonions (2013): Levene's Test failed (p-value: nan)\npotatoes (2013): Levene's Test failed (p-value: nan)\nrice (2013): Levene's Test failed (p-value: nan)\ntomatoes (2013): Levene's Test failed (p-value: nan)\nbeans (2014): Levene's Test failed (p-value: nan)\nc_beans (2014): Levene's Test failed (p-value: 0.0000)\nc_cabbage (2014): Levene's Test failed (p-value: 0.0000)\nc_carrots (2014): Levene's Test failed (p-value: 0.0000)\nc_eggs (2014): Levene's Test failed (p-value: 0.0000)\nc_garlic (2014): Levene's Test failed (p-value: 0.0000)\nc_meat_beef_chops (2014): Levene's Test failed (p-value: 0.0000)\nc_meat_chicken_whole (2014): Levene's Test failed (p-value: 0.0000)\nc_meat_pork (2014): Levene's Test failed (p-value: 0.0000)\nc_onions (2014): Levene's Test failed (p-value: 0.0000)\nc_potatoes (2014): Levene's Test failed (p-value: 0.0000)\nc_rice (2014): Levene's Test failed (p-value: 0.0000)\nc_tomatoes (2014): Levene's Test failed (p-value: 0.0000)\ncabbage (2014): Levene's Test failed (p-value: nan)\ncarrots (2014): Levene's Test failed (p-value: nan)\neggs (2014): Levene's Test failed (p-value: nan)\ngarlic (2014): Levene's Test failed (p-value: nan)\nh_beans (2014): Levene's Test failed (p-value: 0.0000)\nh_cabbage (2014): Levene's Test failed (p-value: 0.0000)\nh_carrots (2014): Levene's Test failed (p-value: 0.0000)\nh_eggs (2014): Levene's Test failed (p-value: 0.0000)\nh_garlic (2014): Levene's Test failed (p-value: 0.0000)\nh_meat_beef_chops (2014): Levene's Test failed (p-value: 0.0000)\nh_meat_chicken_whole (2014): Levene's Test failed (p-value: 0.0000)\nh_meat_pork (2014): Levene's Test failed (p-value: 0.0000)\nh_onions (2014): Levene's Test failed (p-value: 0.0000)\nh_potatoes (2014): Levene's Test failed (p-value: 0.0000)\nh_rice (2014): Levene's Test failed (p-value: 0.0000)\nh_tomatoes (2014): Levene's Test failed (p-value: 0.0000)\nl_beans (2014): Levene's Test failed (p-value: 0.0000)\nl_cabbage (2014): Levene's Test failed (p-value: 0.0000)\nl_carrots (2014): Levene's Test failed (p-value: 0.0000)\nl_eggs (2014): Levene's Test failed (p-value: 0.0000)\nl_garlic (2014): Levene's Test failed (p-value: 0.0000)\nl_meat_beef_chops (2014): Levene's Test failed (p-value: 0.0000)\nl_meat_chicken_whole (2014): Levene's Test failed (p-value: 0.0000)\nl_meat_pork (2014): Levene's Test failed (p-value: 0.0000)\nl_onions (2014): Levene's Test failed (p-value: 0.0000)\nl_potatoes (2014): Levene's Test failed (p-value: 0.0000)\nl_rice (2014): Levene's Test failed (p-value: 0.0000)\nl_tomatoes (2014): Levene's Test failed (p-value: 0.0000)\nmeat_beef_chops (2014): Levene's Test failed (p-value: nan)\nmeat_chicken_whole (2014): Levene's Test failed (p-value: nan)\nmeat_pork (2014): Levene's Test failed (p-value: nan)\no_beans (2014): Levene's Test failed (p-value: 0.0000)\no_cabbage (2014): Levene's Test failed (p-value: 0.0000)\no_carrots (2014): Levene's Test failed (p-value: 0.0000)\no_eggs (2014): Levene's Test failed (p-value: 0.0000)\no_garlic (2014): Levene's Test failed (p-value: 0.0000)\no_meat_beef_chops (2014): Levene's Test failed (p-value: 0.0000)\no_meat_chicken_whole (2014): Levene's Test failed (p-value: 0.0000)\no_meat_pork (2014): Levene's Test failed (p-value: 0.0000)\no_onions (2014): Levene's Test failed (p-value: 0.0000)\no_potatoes (2014): Levene's Test failed (p-value: 0.0000)\no_rice (2014): Levene's Test failed (p-value: 0.0000)\no_tomatoes (2014): Levene's Test failed (p-value: 0.0000)\nonions (2014): Levene's Test failed (p-value: nan)\npotatoes (2014): Levene's Test failed (p-value: nan)\nrice (2014): Levene's Test failed (p-value: nan)\ntomatoes (2014): Levene's Test failed (p-value: nan)\nbeans (2015): Levene's Test failed (p-value: nan)\nc_beans (2015): Levene's Test failed (p-value: 0.0000)\nc_cabbage (2015): Levene's Test failed (p-value: 0.0000)\nc_carrots (2015): Levene's Test failed (p-value: 0.0000)\nc_eggs (2015): Levene's Test failed (p-value: 0.0000)\nc_garlic (2015): Levene's Test failed (p-value: 0.0000)\nc_meat_beef_chops (2015): Levene's Test failed (p-value: 0.0000)\nc_meat_chicken_whole (2015): Levene's Test failed (p-value: 0.0000)\nc_meat_pork (2015): Levene's Test failed (p-value: 0.0000)\nc_onions (2015): Levene's Test passed (p-value: 0.5792)\nc_potatoes (2015): Levene's Test failed (p-value: 0.0000)\nc_rice (2015): Levene's Test failed (p-value: 0.0000)\nc_tomatoes (2015): Levene's Test failed (p-value: 0.0000)\ncabbage (2015): Levene's Test failed (p-value: nan)\ncarrots (2015): Levene's Test failed (p-value: nan)\neggs (2015): Levene's Test failed (p-value: nan)\ngarlic (2015): Levene's Test failed (p-value: nan)\nh_beans (2015): Levene's Test failed (p-value: 0.0000)\nh_cabbage (2015): Levene's Test failed (p-value: 0.0000)\nh_carrots (2015): Levene's Test failed (p-value: 0.0000)\nh_eggs (2015): Levene's Test failed (p-value: 0.0000)\nh_garlic (2015): Levene's Test failed (p-value: 0.0000)\nh_meat_beef_chops (2015): Levene's Test failed (p-value: 0.0000)\nh_meat_chicken_whole (2015): Levene's Test failed (p-value: 0.0000)\nh_meat_pork (2015): Levene's Test failed (p-value: 0.0000)\nh_onions (2015): Levene's Test passed (p-value: 0.6517)\nh_potatoes (2015): Levene's Test failed (p-value: 0.0000)\nh_rice (2015): Levene's Test failed (p-value: 0.0000)\nh_tomatoes (2015): Levene's Test failed (p-value: 0.0000)\nl_beans (2015): Levene's Test failed (p-value: 0.0000)\nl_cabbage (2015): Levene's Test failed (p-value: 0.0000)\nl_carrots (2015): Levene's Test failed (p-value: 0.0000)\nl_eggs (2015): Levene's Test failed (p-value: 0.0000)\nl_garlic (2015): Levene's Test failed (p-value: 0.0000)\nl_meat_beef_chops (2015): Levene's Test failed (p-value: 0.0000)\nl_meat_chicken_whole (2015): Levene's Test failed (p-value: 0.0000)\nl_meat_pork (2015): Levene's Test failed (p-value: 0.0000)\nl_onions (2015): Levene's Test passed (p-value: 0.4240)\nl_potatoes (2015): Levene's Test failed (p-value: 0.0000)\nl_rice (2015): Levene's Test failed (p-value: 0.0000)\nl_tomatoes (2015): Levene's Test failed (p-value: 0.0000)\nmeat_beef_chops (2015): Levene's Test failed (p-value: nan)\nmeat_chicken_whole (2015): Levene's Test failed (p-value: nan)\nmeat_pork (2015): Levene's Test failed (p-value: nan)\no_beans (2015): Levene's Test failed (p-value: 0.0000)\no_cabbage (2015): Levene's Test failed (p-value: 0.0000)\no_carrots (2015): Levene's Test failed (p-value: 0.0000)\no_eggs (2015): Levene's Test failed (p-value: 0.0000)\no_garlic (2015): Levene's Test failed (p-value: 0.0000)\no_meat_beef_chops (2015): Levene's Test failed (p-value: 0.0000)\no_meat_chicken_whole (2015): Levene's Test failed (p-value: 0.0000)\no_meat_pork (2015): Levene's Test failed (p-value: 0.0000)\no_onions (2015): Levene's Test passed (p-value: 0.8250)\no_potatoes (2015): Levene's Test failed (p-value: 0.0000)\no_rice (2015): Levene's Test failed (p-value: 0.0000)\no_tomatoes (2015): Levene's Test failed (p-value: 0.0000)\nonions (2015): Levene's Test failed (p-value: nan)\npotatoes (2015): Levene's Test failed (p-value: nan)\nrice (2015): Levene's Test failed (p-value: nan)\ntomatoes (2015): Levene's Test failed (p-value: nan)\nbeans (2016): Levene's Test failed (p-value: nan)\nc_beans (2016): Levene's Test failed (p-value: 0.0000)\nc_cabbage (2016): Levene's Test failed (p-value: 0.0000)\nc_carrots (2016): Levene's Test failed (p-value: 0.0000)\nc_eggs (2016): Levene's Test failed (p-value: 0.0000)\nc_garlic (2016): Levene's Test failed (p-value: 0.0000)\nc_meat_beef_chops (2016): Levene's Test failed (p-value: 0.0000)\nc_meat_chicken_whole (2016): Levene's Test failed (p-value: 0.0000)\nc_meat_pork (2016): Levene's Test failed (p-value: 0.0000)\nc_onions (2016): Levene's Test failed (p-value: 0.0000)\nc_potatoes (2016): Levene's Test failed (p-value: 0.0000)\nc_rice (2016): Levene's Test failed (p-value: 0.0000)\nc_tomatoes (2016): Levene's Test failed (p-value: 0.0000)\ncabbage (2016): Levene's Test failed (p-value: nan)\ncarrots (2016): Levene's Test failed (p-value: nan)\neggs (2016): Levene's Test failed (p-value: nan)\ngarlic (2016): Levene's Test failed (p-value: nan)\nh_beans (2016): Levene's Test failed (p-value: 0.0000)\nh_cabbage (2016): Levene's Test failed (p-value: 0.0000)\nh_carrots (2016): Levene's Test failed (p-value: 0.0000)\nh_eggs (2016): Levene's Test failed (p-value: 0.0000)\nh_garlic (2016): Levene's Test failed (p-value: 0.0000)\nh_meat_beef_chops (2016): Levene's Test failed (p-value: 0.0000)\nh_meat_chicken_whole (2016): Levene's Test failed (p-value: 0.0000)\nh_meat_pork (2016): Levene's Test failed (p-value: 0.0000)\nh_onions (2016): Levene's Test failed (p-value: 0.0002)\nh_potatoes (2016): Levene's Test failed (p-value: 0.0000)\nh_rice (2016): Levene's Test failed (p-value: 0.0000)\nh_tomatoes (2016): Levene's Test failed (p-value: 0.0000)\nl_beans (2016): Levene's Test failed (p-value: 0.0000)\nl_cabbage (2016): Levene's Test failed (p-value: 0.0000)\nl_carrots (2016): Levene's Test failed (p-value: 0.0000)\nl_eggs (2016): Levene's Test failed (p-value: 0.0000)\nl_garlic (2016): Levene's Test failed (p-value: 0.0000)\nl_meat_beef_chops (2016): Levene's Test failed (p-value: 0.0000)\nl_meat_chicken_whole (2016): Levene's Test failed (p-value: 0.0000)\nl_meat_pork (2016): Levene's Test failed (p-value: 0.0000)\nl_onions (2016): Levene's Test failed (p-value: 0.0003)\nl_potatoes (2016): Levene's Test failed (p-value: 0.0000)\nl_rice (2016): Levene's Test failed (p-value: 0.0000)\nl_tomatoes (2016): Levene's Test failed (p-value: 0.0000)\nmeat_beef_chops (2016): Levene's Test failed (p-value: nan)\nmeat_chicken_whole (2016): Levene's Test failed (p-value: nan)\nmeat_pork (2016): Levene's Test failed (p-value: nan)\no_beans (2016): Levene's Test failed (p-value: 0.0000)\no_cabbage (2016): Levene's Test failed (p-value: 0.0000)\no_carrots (2016): Levene's Test failed (p-value: 0.0000)\no_eggs (2016): Levene's Test failed (p-value: 0.0000)\no_garlic (2016): Levene's Test failed (p-value: 0.0000)\no_meat_beef_chops (2016): Levene's Test failed (p-value: 0.0000)\no_meat_chicken_whole (2016): Levene's Test failed (p-value: 0.0000)\no_meat_pork (2016): Levene's Test failed (p-value: 0.0000)\no_onions (2016): Levene's Test failed (p-value: 0.0017)\no_potatoes (2016): Levene's Test failed (p-value: 0.0000)\no_rice (2016): Levene's Test failed (p-value: 0.0000)\no_tomatoes (2016): Levene's Test failed (p-value: 0.0000)\nonions (2016): Levene's Test failed (p-value: nan)\npotatoes (2016): Levene's Test failed (p-value: nan)\nrice (2016): Levene's Test failed (p-value: nan)\ntomatoes (2016): Levene's Test failed (p-value: nan)\nbeans (2017): Levene's Test failed (p-value: nan)\nc_beans (2017): Levene's Test failed (p-value: 0.0000)\nc_cabbage (2017): Levene's Test failed (p-value: 0.0000)\nc_carrots (2017): Levene's Test failed (p-value: 0.0000)\nc_eggs (2017): Levene's Test failed (p-value: 0.0000)\nc_garlic (2017): Levene's Test failed (p-value: 0.0000)\nc_meat_beef_chops (2017): Levene's Test failed (p-value: 0.0000)\nc_meat_chicken_whole (2017): Levene's Test failed (p-value: 0.0000)\nc_meat_pork (2017): Levene's Test failed (p-value: 0.0000)\nc_onions (2017): Levene's Test failed (p-value: 0.0006)\nc_potatoes (2017): Levene's Test failed (p-value: 0.0000)\nc_rice (2017): Levene's Test failed (p-value: 0.0000)\nc_tomatoes (2017): Levene's Test failed (p-value: 0.0000)\ncabbage (2017): Levene's Test failed (p-value: nan)\ncarrots (2017): Levene's Test failed (p-value: nan)\neggs (2017): Levene's Test failed (p-value: nan)\ngarlic (2017): Levene's Test failed (p-value: nan)\nh_beans (2017): Levene's Test failed (p-value: 0.0000)\nh_cabbage (2017): Levene's Test failed (p-value: 0.0000)\nh_carrots (2017): Levene's Test failed (p-value: 0.0000)\nh_eggs (2017): Levene's Test failed (p-value: 0.0000)\nh_garlic (2017): Levene's Test failed (p-value: 0.0000)\nh_meat_beef_chops (2017): Levene's Test failed (p-value: 0.0000)\nh_meat_chicken_whole (2017): Levene's Test failed (p-value: 0.0000)\nh_meat_pork (2017): Levene's Test failed (p-value: 0.0000)\nh_onions (2017): Levene's Test failed (p-value: 0.0000)\nh_potatoes (2017): Levene's Test failed (p-value: 0.0000)\nh_rice (2017): Levene's Test failed (p-value: 0.0000)\nh_tomatoes (2017): Levene's Test failed (p-value: 0.0000)\nl_beans (2017): Levene's Test failed (p-value: 0.0000)\nl_cabbage (2017): Levene's Test failed (p-value: 0.0000)\nl_carrots (2017): Levene's Test failed (p-value: 0.0000)\nl_eggs (2017): Levene's Test failed (p-value: 0.0000)\nl_garlic (2017): Levene's Test failed (p-value: 0.0000)\nl_meat_beef_chops (2017): Levene's Test failed (p-value: 0.0000)\nl_meat_chicken_whole (2017): Levene's Test failed (p-value: 0.0000)\nl_meat_pork (2017): Levene's Test failed (p-value: 0.0000)\nl_onions (2017): Levene's Test failed (p-value: 0.0000)\nl_potatoes (2017): Levene's Test failed (p-value: 0.0000)\nl_rice (2017): Levene's Test failed (p-value: 0.0000)\nl_tomatoes (2017): Levene's Test failed (p-value: 0.0000)\nmeat_beef_chops (2017): Levene's Test failed (p-value: nan)\nmeat_chicken_whole (2017): Levene's Test failed (p-value: nan)\nmeat_pork (2017): Levene's Test failed (p-value: nan)\no_beans (2017): Levene's Test failed (p-value: 0.0000)\no_cabbage (2017): Levene's Test failed (p-value: 0.0000)\no_carrots (2017): Levene's Test failed (p-value: 0.0000)\no_eggs (2017): Levene's Test failed (p-value: 0.0000)\no_garlic (2017): Levene's Test failed (p-value: 0.0000)\no_meat_beef_chops (2017): Levene's Test failed (p-value: 0.0000)\no_meat_chicken_whole (2017): Levene's Test failed (p-value: 0.0000)\no_meat_pork (2017): Levene's Test failed (p-value: 0.0000)\no_onions (2017): Levene's Test failed (p-value: 0.0000)\no_potatoes (2017): Levene's Test failed (p-value: 0.0000)\no_rice (2017): Levene's Test failed (p-value: 0.0000)\no_tomatoes (2017): Levene's Test failed (p-value: 0.0000)\nonions (2017): Levene's Test failed (p-value: nan)\npotatoes (2017): Levene's Test failed (p-value: nan)\nrice (2017): Levene's Test failed (p-value: nan)\ntomatoes (2017): Levene's Test failed (p-value: nan)\nbeans (2018): Levene's Test failed (p-value: nan)\nc_beans (2018): Levene's Test failed (p-value: 0.0000)\nc_cabbage (2018): Levene's Test failed (p-value: 0.0000)\nc_carrots (2018): Levene's Test failed (p-value: 0.0000)\nc_eggs (2018): Levene's Test failed (p-value: 0.0000)\nc_garlic (2018): Levene's Test failed (p-value: 0.0000)\nc_meat_beef_chops (2018): Levene's Test failed (p-value: 0.0000)\nc_meat_chicken_whole (2018): Levene's Test failed (p-value: 0.0000)\nc_meat_pork (2018): Levene's Test failed (p-value: 0.0000)\nc_onions (2018): Levene's Test failed (p-value: 0.0006)\nc_potatoes (2018): Levene's Test failed (p-value: 0.0000)\nc_rice (2018): Levene's Test failed (p-value: 0.0000)\nc_tomatoes (2018): Levene's Test failed (p-value: 0.0000)\ncabbage (2018): Levene's Test failed (p-value: nan)\ncarrots (2018): Levene's Test failed (p-value: nan)\neggs (2018): Levene's Test failed (p-value: nan)\ngarlic (2018): Levene's Test failed (p-value: nan)\nh_beans (2018): Levene's Test failed (p-value: 0.0000)\nh_cabbage (2018): Levene's Test failed (p-value: 0.0000)\nh_carrots (2018): Levene's Test failed (p-value: 0.0000)\nh_eggs (2018): Levene's Test failed (p-value: 0.0000)\nh_garlic (2018): Levene's Test failed (p-value: 0.0000)\nh_meat_beef_chops (2018): Levene's Test failed (p-value: 0.0000)\nh_meat_chicken_whole (2018): Levene's Test failed (p-value: 0.0000)\nh_meat_pork (2018): Levene's Test failed (p-value: 0.0000)\nh_onions (2018): Levene's Test passed (p-value: 0.1699)\nh_potatoes (2018): Levene's Test failed (p-value: 0.0000)\nh_rice (2018): Levene's Test failed (p-value: 0.0000)\nh_tomatoes (2018): Levene's Test failed (p-value: 0.0000)\nl_beans (2018): Levene's Test failed (p-value: 0.0000)\nl_cabbage (2018): Levene's Test failed (p-value: 0.0000)\nl_carrots (2018): Levene's Test failed (p-value: 0.0000)\nl_eggs (2018): Levene's Test failed (p-value: 0.0000)\nl_garlic (2018): Levene's Test failed (p-value: 0.0000)\nl_meat_beef_chops (2018): Levene's Test failed (p-value: 0.0000)\nl_meat_chicken_whole (2018): Levene's Test failed (p-value: 0.0000)\nl_meat_pork (2018): Levene's Test failed (p-value: 0.0000)\nl_onions (2018): Levene's Test failed (p-value: 0.0003)\nl_potatoes (2018): Levene's Test failed (p-value: 0.0000)\nl_rice (2018): Levene's Test failed (p-value: 0.0002)\nl_tomatoes (2018): Levene's Test failed (p-value: 0.0000)\nmeat_beef_chops (2018): Levene's Test failed (p-value: nan)\nmeat_chicken_whole (2018): Levene's Test failed (p-value: nan)\nmeat_pork (2018): Levene's Test failed (p-value: nan)\no_beans (2018): Levene's Test failed (p-value: 0.0000)\no_cabbage (2018): Levene's Test failed (p-value: 0.0000)\no_carrots (2018): Levene's Test failed (p-value: 0.0000)\no_eggs (2018): Levene's Test failed (p-value: 0.0000)\no_garlic (2018): Levene's Test failed (p-value: 0.0000)\no_meat_beef_chops (2018): Levene's Test failed (p-value: 0.0000)\no_meat_chicken_whole (2018): Levene's Test failed (p-value: 0.0000)\no_meat_pork (2018): Levene's Test failed (p-value: 0.0000)\no_onions (2018): Levene's Test failed (p-value: 0.0258)\no_potatoes (2018): Levene's Test failed (p-value: 0.0000)\no_rice (2018): Levene's Test failed (p-value: 0.0000)\no_tomatoes (2018): Levene's Test failed (p-value: 0.0000)\nonions (2018): Levene's Test failed (p-value: nan)\npotatoes (2018): Levene's Test failed (p-value: nan)\nrice (2018): Levene's Test failed (p-value: nan)\ntomatoes (2018): Levene's Test failed (p-value: nan)\nbeans (2019): Levene's Test failed (p-value: nan)\nc_beans (2019): Levene's Test failed (p-value: 0.0000)\nc_cabbage (2019): Levene's Test failed (p-value: 0.0000)\nc_carrots (2019): Levene's Test failed (p-value: 0.0000)\nc_eggs (2019): Levene's Test failed (p-value: 0.0000)\nc_garlic (2019): Levene's Test failed (p-value: 0.0000)\nc_meat_beef_chops (2019): Levene's Test failed (p-value: 0.0000)\nc_meat_chicken_whole (2019): Levene's Test failed (p-value: 0.0000)\nc_meat_pork (2019): Levene's Test failed (p-value: 0.0000)\nc_onions (2019): Levene's Test passed (p-value: 0.4429)\nc_potatoes (2019): Levene's Test failed (p-value: 0.0000)\nc_rice (2019): Levene's Test failed (p-value: 0.0000)\nc_tomatoes (2019): Levene's Test failed (p-value: 0.0000)\ncabbage (2019): Levene's Test failed (p-value: nan)\ncarrots (2019): Levene's Test failed (p-value: nan)\neggs (2019): Levene's Test failed (p-value: nan)\ngarlic (2019): Levene's Test failed (p-value: nan)\nh_beans (2019): Levene's Test failed (p-value: 0.0000)\nh_cabbage (2019): Levene's Test failed (p-value: 0.0000)\nh_carrots (2019): Levene's Test failed (p-value: 0.0000)\nh_eggs (2019): Levene's Test failed (p-value: 0.0000)\nh_garlic (2019): Levene's Test failed (p-value: 0.0000)\nh_meat_beef_chops (2019): Levene's Test failed (p-value: 0.0000)\nh_meat_chicken_whole (2019): Levene's Test failed (p-value: 0.0000)\nh_meat_pork (2019): Levene's Test failed (p-value: 0.0000)\nh_onions (2019): Levene's Test passed (p-value: 0.1279)\nh_potatoes (2019): Levene's Test failed (p-value: 0.0000)\nh_rice (2019): Levene's Test failed (p-value: 0.0000)\nh_tomatoes (2019): Levene's Test failed (p-value: 0.0000)\nl_beans (2019): Levene's Test failed (p-value: 0.0000)\nl_cabbage (2019): Levene's Test failed (p-value: 0.0000)\nl_carrots (2019): Levene's Test failed (p-value: 0.0000)\nl_eggs (2019): Levene's Test failed (p-value: 0.0000)\nl_garlic (2019): Levene's Test failed (p-value: 0.0000)\nl_meat_beef_chops (2019): Levene's Test failed (p-value: 0.0000)\nl_meat_chicken_whole (2019): Levene's Test failed (p-value: 0.0000)\nl_meat_pork (2019): Levene's Test failed (p-value: 0.0000)\nl_onions (2019): Levene's Test failed (p-value: 0.0003)\nl_potatoes (2019): Levene's Test failed (p-value: 0.0000)\nl_rice (2019): Levene's Test failed (p-value: 0.0000)\nl_tomatoes (2019): Levene's Test failed (p-value: 0.0000)\nmeat_beef_chops (2019): Levene's Test failed (p-value: nan)\nmeat_chicken_whole (2019): Levene's Test failed (p-value: nan)\nmeat_pork (2019): Levene's Test failed (p-value: nan)\no_beans (2019): Levene's Test failed (p-value: 0.0000)\no_cabbage (2019): Levene's Test failed (p-value: 0.0000)\no_carrots (2019): Levene's Test failed (p-value: 0.0000)\no_eggs (2019): Levene's Test failed (p-value: 0.0000)\no_garlic (2019): Levene's Test failed (p-value: 0.0000)\no_meat_beef_chops (2019): Levene's Test failed (p-value: 0.0000)\no_meat_chicken_whole (2019): Levene's Test failed (p-value: 0.0000)\no_meat_pork (2019): Levene's Test failed (p-value: 0.0000)\no_onions (2019): Levene's Test failed (p-value: 0.0008)\no_potatoes (2019): Levene's Test failed (p-value: 0.0000)\no_rice (2019): Levene's Test failed (p-value: 0.0000)\no_tomatoes (2019): Levene's Test failed (p-value: 0.0000)\nonions (2019): Levene's Test failed (p-value: nan)\npotatoes (2019): Levene's Test failed (p-value: nan)\nrice (2019): Levene's Test failed (p-value: nan)\ntomatoes (2019): Levene's Test failed (p-value: nan)\nbeans (2020): Levene's Test failed (p-value: nan)\nc_beans (2020): Levene's Test failed (p-value: 0.0000)\nc_cabbage (2020): Levene's Test failed (p-value: 0.0000)\nc_carrots (2020): Levene's Test failed (p-value: 0.0000)\nc_eggs (2020): Levene's Test failed (p-value: 0.0000)\nc_garlic (2020): Levene's Test failed (p-value: 0.0000)\nc_meat_beef_chops (2020): Levene's Test failed (p-value: 0.0000)\nc_meat_chicken_whole (2020): Levene's Test failed (p-value: 0.0000)\nc_meat_pork (2020): Levene's Test failed (p-value: 0.0000)\nc_onions (2020): Levene's Test failed (p-value: 0.0002)\nc_potatoes (2020): Levene's Test failed (p-value: 0.0000)\nc_rice (2020): Levene's Test failed (p-value: 0.0000)\nc_tomatoes (2020): Levene's Test failed (p-value: 0.0000)\ncabbage (2020): Levene's Test failed (p-value: nan)\ncarrots (2020): Levene's Test failed (p-value: nan)\neggs (2020): Levene's Test failed (p-value: nan)\ngarlic (2020): Levene's Test failed (p-value: nan)\nh_beans (2020): Levene's Test failed (p-value: 0.0000)\nh_cabbage (2020): Levene's Test failed (p-value: 0.0000)\nh_carrots (2020): Levene's Test failed (p-value: 0.0000)\nh_eggs (2020): Levene's Test failed (p-value: 0.0000)\nh_garlic (2020): Levene's Test failed (p-value: 0.0000)\nh_meat_beef_chops (2020): Levene's Test failed (p-value: 0.0000)\nh_meat_chicken_whole (2020): Levene's Test failed (p-value: 0.0000)\nh_meat_pork (2020): Levene's Test failed (p-value: 0.0000)\nh_onions (2020): Levene's Test failed (p-value: 0.0110)\nh_potatoes (2020): Levene's Test failed (p-value: 0.0000)\nh_rice (2020): Levene's Test failed (p-value: 0.0000)\nh_tomatoes (2020): Levene's Test failed (p-value: 0.0000)\nl_beans (2020): Levene's Test failed (p-value: 0.0000)\nl_cabbage (2020): Levene's Test failed (p-value: 0.0000)\nl_carrots (2020): Levene's Test failed (p-value: 0.0000)\nl_eggs (2020): Levene's Test failed (p-value: 0.0000)\nl_garlic (2020): Levene's Test failed (p-value: 0.0000)\nl_meat_beef_chops (2020): Levene's Test failed (p-value: 0.0000)\nl_meat_chicken_whole (2020): Levene's Test failed (p-value: 0.0000)\nl_meat_pork (2020): Levene's Test failed (p-value: 0.0000)\nl_onions (2020): Levene's Test failed (p-value: 0.0165)\nl_potatoes (2020): Levene's Test failed (p-value: 0.0000)\nl_rice (2020): Levene's Test failed (p-value: 0.0000)\nl_tomatoes (2020): Levene's Test failed (p-value: 0.0000)\nmeat_beef_chops (2020): Levene's Test failed (p-value: nan)\nmeat_chicken_whole (2020): Levene's Test failed (p-value: nan)\nmeat_pork (2020): Levene's Test failed (p-value: nan)\no_beans (2020): Levene's Test failed (p-value: 0.0000)\no_cabbage (2020): Levene's Test failed (p-value: 0.0000)\no_carrots (2020): Levene's Test failed (p-value: 0.0000)\no_eggs (2020): Levene's Test failed (p-value: 0.0000)\no_garlic (2020): Levene's Test failed (p-value: 0.0000)\no_meat_beef_chops (2020): Levene's Test failed (p-value: 0.0000)\no_meat_chicken_whole (2020): Levene's Test failed (p-value: 0.0000)\no_meat_pork (2020): Levene's Test failed (p-value: 0.0000)\no_onions (2020): Levene's Test passed (p-value: 0.0762)\no_potatoes (2020): Levene's Test failed (p-value: 0.0000)\no_rice (2020): Levene's Test failed (p-value: 0.0000)\no_tomatoes (2020): Levene's Test failed (p-value: 0.0000)\nonions (2020): Levene's Test failed (p-value: nan)\npotatoes (2020): Levene's Test failed (p-value: nan)\nrice (2020): Levene's Test failed (p-value: nan)\ntomatoes (2020): Levene's Test failed (p-value: nan)\nbeans (2021): Levene's Test failed (p-value: nan)\nc_beans (2021): Levene's Test failed (p-value: 0.0000)\nc_cabbage (2021): Levene's Test failed (p-value: 0.0000)\nc_carrots (2021): Levene's Test failed (p-value: 0.0000)\nc_eggs (2021): Levene's Test failed (p-value: 0.0000)\nc_garlic (2021): Levene's Test failed (p-value: 0.0000)\nc_meat_beef_chops (2021): Levene's Test failed (p-value: 0.0000)\nc_meat_chicken_whole (2021): Levene's Test failed (p-value: 0.0000)\nc_meat_pork (2021): Levene's Test failed (p-value: 0.0000)\nc_onions (2021): Levene's Test failed (p-value: 0.0091)\nc_potatoes (2021): Levene's Test failed (p-value: 0.0000)\nc_rice (2021): Levene's Test failed (p-value: 0.0000)\nc_tomatoes (2021): Levene's Test failed (p-value: 0.0000)\ncabbage (2021): Levene's Test failed (p-value: nan)\ncarrots (2021): Levene's Test failed (p-value: nan)\neggs (2021): Levene's Test failed (p-value: nan)\ngarlic (2021): Levene's Test failed (p-value: nan)\nh_beans (2021): Levene's Test failed (p-value: 0.0000)\nh_cabbage (2021): Levene's Test failed (p-value: 0.0000)\nh_carrots (2021): Levene's Test failed (p-value: 0.0000)\nh_eggs (2021): Levene's Test failed (p-value: 0.0000)\nh_garlic (2021): Levene's Test failed (p-value: 0.0000)\nh_meat_beef_chops (2021): Levene's Test failed (p-value: 0.0000)\nh_meat_chicken_whole (2021): Levene's Test failed (p-value: 0.0000)\nh_meat_pork (2021): Levene's Test failed (p-value: 0.0000)\nh_onions (2021): Levene's Test failed (p-value: 0.0104)\nh_potatoes (2021): Levene's Test failed (p-value: 0.0000)\nh_rice (2021): Levene's Test failed (p-value: 0.0000)\nh_tomatoes (2021): Levene's Test failed (p-value: 0.0000)\nl_beans (2021): Levene's Test failed (p-value: 0.0000)\nl_cabbage (2021): Levene's Test failed (p-value: 0.0000)\nl_carrots (2021): Levene's Test failed (p-value: 0.0000)\nl_eggs (2021): Levene's Test failed (p-value: 0.0000)\nl_garlic (2021): Levene's Test failed (p-value: 0.0000)\nl_meat_beef_chops (2021): Levene's Test failed (p-value: 0.0000)\nl_meat_chicken_whole (2021): Levene's Test failed (p-value: 0.0000)\nl_meat_pork (2021): Levene's Test failed (p-value: 0.0000)\nl_onions (2021): Levene's Test failed (p-value: 0.0000)\nl_potatoes (2021): Levene's Test failed (p-value: 0.0000)\nl_rice (2021): Levene's Test failed (p-value: 0.0000)\nl_tomatoes (2021): Levene's Test failed (p-value: 0.0000)\nmeat_beef_chops (2021): Levene's Test failed (p-value: nan)\nmeat_chicken_whole (2021): Levene's Test failed (p-value: nan)\nmeat_pork (2021): Levene's Test failed (p-value: nan)\no_beans (2021): Levene's Test failed (p-value: 0.0000)\no_cabbage (2021): Levene's Test failed (p-value: 0.0000)\no_carrots (2021): Levene's Test failed (p-value: 0.0000)\no_eggs (2021): Levene's Test failed (p-value: 0.0000)\no_garlic (2021): Levene's Test failed (p-value: 0.0000)\no_meat_beef_chops (2021): Levene's Test failed (p-value: 0.0000)\no_meat_chicken_whole (2021): Levene's Test failed (p-value: 0.0001)\no_meat_pork (2021): Levene's Test failed (p-value: 0.0000)\no_onions (2021): Levene's Test failed (p-value: 0.0025)\no_potatoes (2021): Levene's Test failed (p-value: 0.0000)\no_rice (2021): Levene's Test failed (p-value: 0.0000)\no_tomatoes (2021): Levene's Test failed (p-value: 0.0000)\nonions (2021): Levene's Test failed (p-value: nan)\npotatoes (2021): Levene's Test failed (p-value: nan)\nrice (2021): Levene's Test failed (p-value: nan)\ntomatoes (2021): Levene's Test failed (p-value: nan)\nbeans (2022): Levene's Test failed (p-value: nan)\nc_beans (2022): Levene's Test failed (p-value: 0.0000)\nc_cabbage (2022): Levene's Test failed (p-value: 0.0000)\nc_carrots (2022): Levene's Test failed (p-value: 0.0000)\nc_eggs (2022): Levene's Test failed (p-value: 0.0000)\nc_garlic (2022): Levene's Test failed (p-value: 0.0000)\nc_meat_beef_chops (2022): Levene's Test failed (p-value: 0.0000)\nc_meat_chicken_whole (2022): Levene's Test failed (p-value: 0.0000)\nc_meat_pork (2022): Levene's Test failed (p-value: 0.0000)\nc_onions (2022): Levene's Test failed (p-value: 0.0074)\nc_potatoes (2022): Levene's Test failed (p-value: 0.0000)\nc_rice (2022): Levene's Test failed (p-value: 0.0000)\nc_tomatoes (2022): Levene's Test failed (p-value: 0.0000)\ncabbage (2022): Levene's Test failed (p-value: nan)\ncarrots (2022): Levene's Test failed (p-value: nan)\neggs (2022): Levene's Test failed (p-value: nan)\ngarlic (2022): Levene's Test failed (p-value: nan)\nh_beans (2022): Levene's Test failed (p-value: 0.0000)\nh_cabbage (2022): Levene's Test failed (p-value: 0.0000)\nh_carrots (2022): Levene's Test failed (p-value: 0.0000)\nh_eggs (2022): Levene's Test failed (p-value: 0.0000)\nh_garlic (2022): Levene's Test failed (p-value: 0.0000)\nh_meat_beef_chops (2022): Levene's Test failed (p-value: 0.0000)\nh_meat_chicken_whole (2022): Levene's Test failed (p-value: 0.0000)\nh_meat_pork (2022): Levene's Test failed (p-value: 0.0000)\nh_onions (2022): Levene's Test failed (p-value: 0.0001)\nh_potatoes (2022): Levene's Test failed (p-value: 0.0000)\nh_rice (2022): Levene's Test failed (p-value: 0.0000)\nh_tomatoes (2022): Levene's Test failed (p-value: 0.0000)\nl_beans (2022): Levene's Test failed (p-value: 0.0000)\nl_cabbage (2022): Levene's Test failed (p-value: 0.0000)\nl_carrots (2022): Levene's Test failed (p-value: 0.0000)\nl_eggs (2022): Levene's Test failed (p-value: 0.0000)\nl_garlic (2022): Levene's Test failed (p-value: 0.0000)\nl_meat_beef_chops (2022): Levene's Test failed (p-value: 0.0000)\nl_meat_chicken_whole (2022): Levene's Test failed (p-value: 0.0000)\nl_meat_pork (2022): Levene's Test failed (p-value: 0.0000)\nl_onions (2022): Levene's Test failed (p-value: 0.0008)\nl_potatoes (2022): Levene's Test failed (p-value: 0.0000)\nl_rice (2022): Levene's Test failed (p-value: 0.0000)\nl_tomatoes (2022): Levene's Test failed (p-value: 0.0000)\nmeat_beef_chops (2022): Levene's Test failed (p-value: nan)\nmeat_chicken_whole (2022): Levene's Test failed (p-value: nan)\nmeat_pork (2022): Levene's Test failed (p-value: nan)\no_beans (2022): Levene's Test failed (p-value: 0.0000)\no_cabbage (2022): Levene's Test failed (p-value: 0.0000)\no_carrots (2022): Levene's Test failed (p-value: 0.0000)\no_eggs (2022): Levene's Test failed (p-value: 0.0000)\no_garlic (2022): Levene's Test failed (p-value: 0.0000)\no_meat_beef_chops (2022): Levene's Test failed (p-value: 0.0000)\no_meat_chicken_whole (2022): Levene's Test failed (p-value: 0.0000)\no_meat_pork (2022): Levene's Test failed (p-value: 0.0000)\no_onions (2022): Levene's Test failed (p-value: 0.0001)\no_potatoes (2022): Levene's Test failed (p-value: 0.0000)\no_rice (2022): Levene's Test failed (p-value: 0.0000)\no_tomatoes (2022): Levene's Test failed (p-value: 0.0000)\nonions (2022): Levene's Test failed (p-value: nan)\npotatoes (2022): Levene's Test failed (p-value: nan)\nrice (2022): Levene's Test failed (p-value: nan)\ntomatoes (2022): Levene's Test failed (p-value: nan)\nbeans (2023): Levene's Test failed (p-value: nan)\nc_beans (2023): Levene's Test failed (p-value: 0.0000)\nc_cabbage (2023): Levene's Test failed (p-value: 0.0000)\nc_carrots (2023): Levene's Test failed (p-value: 0.0000)\nc_eggs (2023): Levene's Test failed (p-value: 0.0000)\nc_garlic (2023): Levene's Test failed (p-value: 0.0000)\nc_meat_beef_chops (2023): Levene's Test failed (p-value: 0.0000)\nc_meat_chicken_whole (2023): Levene's Test failed (p-value: 0.0000)\nc_meat_pork (2023): Levene's Test failed (p-value: 0.0000)\nc_onions (2023): Levene's Test failed (p-value: 0.0292)\nc_potatoes (2023): Levene's Test failed (p-value: 0.0000)\nc_rice (2023): Levene's Test failed (p-value: 0.0017)\nc_tomatoes (2023): Levene's Test failed (p-value: 0.0000)\ncabbage (2023): Levene's Test failed (p-value: nan)\ncarrots (2023): Levene's Test failed (p-value: nan)\neggs (2023): Levene's Test failed (p-value: nan)\ngarlic (2023): Levene's Test failed (p-value: nan)\nh_beans (2023): Levene's Test failed (p-value: 0.0000)\nh_cabbage (2023): Levene's Test failed (p-value: 0.0000)\nh_carrots (2023): Levene's Test failed (p-value: 0.0000)\nh_eggs (2023): Levene's Test failed (p-value: 0.0000)\nh_garlic (2023): Levene's Test failed (p-value: 0.0000)\nh_meat_beef_chops (2023): Levene's Test failed (p-value: 0.0000)\nh_meat_chicken_whole (2023): Levene's Test failed (p-value: 0.0000)\nh_meat_pork (2023): Levene's Test failed (p-value: 0.0000)\nh_onions (2023): Levene's Test failed (p-value: 0.0002)\nh_potatoes (2023): Levene's Test failed (p-value: 0.0000)\nh_rice (2023): Levene's Test failed (p-value: 0.0043)\nh_tomatoes (2023): Levene's Test failed (p-value: 0.0000)\nl_beans (2023): Levene's Test failed (p-value: 0.0000)\nl_cabbage (2023): Levene's Test failed (p-value: 0.0000)\nl_carrots (2023): Levene's Test failed (p-value: 0.0000)\nl_eggs (2023): Levene's Test failed (p-value: 0.0000)\nl_garlic (2023): Levene's Test failed (p-value: 0.0000)\nl_meat_beef_chops (2023): Levene's Test failed (p-value: 0.0000)\nl_meat_chicken_whole (2023): Levene's Test failed (p-value: 0.0000)\nl_meat_pork (2023): Levene's Test failed (p-value: 0.0000)\nl_onions (2023): Levene's Test failed (p-value: 0.0128)\nl_potatoes (2023): Levene's Test failed (p-value: 0.0000)\nl_rice (2023): Levene's Test failed (p-value: 0.0027)\nl_tomatoes (2023): Levene's Test failed (p-value: 0.0000)\nmeat_beef_chops (2023): Levene's Test failed (p-value: nan)\nmeat_chicken_whole (2023): Levene's Test failed (p-value: nan)\nmeat_pork (2023): Levene's Test failed (p-value: nan)\no_beans (2023): Levene's Test failed (p-value: 0.0000)\no_cabbage (2023): Levene's Test failed (p-value: 0.0000)\no_carrots (2023): Levene's Test failed (p-value: 0.0000)\no_eggs (2023): Levene's Test failed (p-value: 0.0000)\no_garlic (2023): Levene's Test failed (p-value: 0.0000)\no_meat_beef_chops (2023): Levene's Test failed (p-value: 0.0000)\no_meat_chicken_whole (2023): Levene's Test failed (p-value: 0.0000)\no_meat_pork (2023): Levene's Test failed (p-value: 0.0000)\no_onions (2023): Levene's Test failed (p-value: 0.0033)\no_potatoes (2023): Levene's Test failed (p-value: 0.0000)\no_rice (2023): Levene's Test failed (p-value: 0.0099)\no_tomatoes (2023): Levene's Test failed (p-value: 0.0000)\nonions (2023): Levene's Test failed (p-value: nan)\npotatoes (2023): Levene's Test failed (p-value: nan)\nrice (2023): Levene's Test failed (p-value: nan)\ntomatoes (2023): Levene's Test failed (p-value: nan)\nbeans (2024): Levene's Test failed (p-value: nan)\nc_beans (2024): Levene's Test failed (p-value: 0.0000)\nc_cabbage (2024): Levene's Test failed (p-value: 0.0000)\nc_carrots (2024): Levene's Test failed (p-value: 0.0000)\nc_eggs (2024): Levene's Test failed (p-value: 0.0000)\nc_garlic (2024): Levene's Test failed (p-value: 0.0000)\nc_meat_beef_chops (2024): Levene's Test failed (p-value: 0.0000)\nc_meat_chicken_whole (2024): Levene's Test failed (p-value: 0.0000)\nc_meat_pork (2024): Levene's Test failed (p-value: 0.0000)\nc_onions (2024): Levene's Test failed (p-value: 0.0000)\nc_potatoes (2024): Levene's Test failed (p-value: 0.0000)\nc_rice (2024): Levene's Test failed (p-value: 0.0000)\nc_tomatoes (2024): Levene's Test failed (p-value: 0.0000)\ncabbage (2024): Levene's Test failed (p-value: nan)\ncarrots (2024): Levene's Test failed (p-value: nan)\neggs (2024): Levene's Test failed (p-value: nan)\ngarlic (2024): Levene's Test failed (p-value: nan)\nh_beans (2024): Levene's Test failed (p-value: 0.0000)\nh_cabbage (2024): Levene's Test failed (p-value: 0.0000)\nh_carrots (2024): Levene's Test failed (p-value: 0.0000)\nh_eggs (2024): Levene's Test failed (p-value: 0.0000)\nh_garlic (2024): Levene's Test failed (p-value: 0.0000)\nh_meat_beef_chops (2024): Levene's Test failed (p-value: 0.0000)\nh_meat_chicken_whole (2024): Levene's Test failed (p-value: 0.0000)\nh_meat_pork (2024): Levene's Test failed (p-value: 0.0000)\nh_onions (2024): Levene's Test failed (p-value: 0.0004)\nh_potatoes (2024): Levene's Test failed (p-value: 0.0000)\nh_rice (2024): Levene's Test failed (p-value: 0.0000)\nh_tomatoes (2024): Levene's Test failed (p-value: 0.0000)\nl_beans (2024): Levene's Test failed (p-value: 0.0000)\nl_cabbage (2024): Levene's Test failed (p-value: 0.0000)\nl_carrots (2024): Levene's Test failed (p-value: 0.0000)\nl_eggs (2024): Levene's Test failed (p-value: 0.0000)\nl_garlic (2024): Levene's Test failed (p-value: 0.0000)\nl_meat_beef_chops (2024): Levene's Test failed (p-value: 0.0000)\nl_meat_chicken_whole (2024): Levene's Test failed (p-value: 0.0000)\nl_meat_pork (2024): Levene's Test failed (p-value: 0.0000)\nl_onions (2024): Levene's Test failed (p-value: 0.0000)\nl_potatoes (2024): Levene's Test failed (p-value: 0.0000)\nl_rice (2024): Levene's Test failed (p-value: 0.0000)\nl_tomatoes (2024): Levene's Test failed (p-value: 0.0000)\nmeat_beef_chops (2024): Levene's Test failed (p-value: nan)\nmeat_chicken_whole (2024): Levene's Test failed (p-value: nan)\nmeat_pork (2024): Levene's Test failed (p-value: nan)\no_beans (2024): Levene's Test failed (p-value: 0.0000)\no_cabbage (2024): Levene's Test failed (p-value: 0.0000)\no_carrots (2024): Levene's Test failed (p-value: 0.0000)\no_eggs (2024): Levene's Test failed (p-value: 0.0000)\no_garlic (2024): Levene's Test failed (p-value: 0.0000)\no_meat_beef_chops (2024): Levene's Test failed (p-value: 0.0000)\no_meat_chicken_whole (2024): Levene's Test failed (p-value: 0.0000)\no_meat_pork (2024): Levene's Test failed (p-value: 0.0000)\no_onions (2024): Levene's Test failed (p-value: 0.0001)\no_potatoes (2024): Levene's Test failed (p-value: 0.0000)\no_rice (2024): Levene's Test failed (p-value: 0.0000)\no_tomatoes (2024): Levene's Test failed (p-value: 0.0000)\nonions (2024): Levene's Test failed (p-value: nan)\npotatoes (2024): Levene's Test failed (p-value: nan)\nrice (2024): Levene's Test failed (p-value: nan)\ntomatoes (2024): Levene's Test failed (p-value: nan)\nbeans (2025): Levene's Test failed (p-value: nan)\nc_beans (2025): Levene's Test passed (p-value: 0.0553)\nc_cabbage (2025): Levene's Test failed (p-value: 0.0244)\nc_carrots (2025): Levene's Test passed (p-value: 0.4763)\nc_eggs (2025): Levene's Test failed (p-value: 0.0376)\nc_garlic (2025): Levene's Test passed (p-value: 0.3800)\nc_meat_beef_chops (2025): Levene's Test passed (p-value: 0.4893)\nc_meat_chicken_whole (2025): Levene's Test passed (p-value: 0.5799)\nc_meat_pork (2025): Levene's Test passed (p-value: 0.7293)\nc_onions (2025): Levene's Test passed (p-value: 0.3528)\nc_potatoes (2025): Levene's Test passed (p-value: 0.3765)\nc_rice (2025): Levene's Test passed (p-value: 0.6974)\nc_tomatoes (2025): Levene's Test passed (p-value: 0.5183)\ncabbage (2025): Levene's Test failed (p-value: nan)\ncarrots (2025): Levene's Test failed (p-value: nan)\neggs (2025): Levene's Test failed (p-value: nan)\ngarlic (2025): Levene's Test failed (p-value: nan)\nh_beans (2025): Levene's Test passed (p-value: 0.1927)\nh_cabbage (2025): Levene's Test failed (p-value: 0.0000)\nh_carrots (2025): Levene's Test passed (p-value: 0.3854)\nh_eggs (2025): Levene's Test failed (p-value: 0.0192)\nh_garlic (2025): Levene's Test passed (p-value: 0.3405)\nh_meat_beef_chops (2025): Levene's Test passed (p-value: 0.6051)\nh_meat_chicken_whole (2025): Levene's Test passed (p-value: 0.4778)\nh_meat_pork (2025): Levene's Test passed (p-value: 0.5669)\nh_onions (2025): Levene's Test passed (p-value: 0.1001)\nh_potatoes (2025): Levene's Test passed (p-value: 0.5040)\nh_rice (2025): Levene's Test passed (p-value: 0.5394)\nh_tomatoes (2025): Levene's Test passed (p-value: 0.1647)\nl_beans (2025): Levene's Test failed (p-value: 0.0500)\nl_cabbage (2025): Levene's Test passed (p-value: 0.2610)\nl_carrots (2025): Levene's Test passed (p-value: 0.1821)\nl_eggs (2025): Levene's Test failed (p-value: 0.0165)\nl_garlic (2025): Levene's Test passed (p-value: 0.4207)\nl_meat_beef_chops (2025): Levene's Test passed (p-value: 0.5909)\nl_meat_chicken_whole (2025): Levene's Test passed (p-value: 0.2936)\nl_meat_pork (2025): Levene's Test passed (p-value: 0.7404)\nl_onions (2025): Levene's Test passed (p-value: 0.3283)\nl_potatoes (2025): Levene's Test passed (p-value: 0.2831)\nl_rice (2025): Levene's Test passed (p-value: 0.8548)\nl_tomatoes (2025): Levene's Test passed (p-value: 0.6348)\nmeat_beef_chops (2025): Levene's Test failed (p-value: nan)\nmeat_chicken_whole (2025): Levene's Test failed (p-value: nan)\nmeat_pork (2025): Levene's Test failed (p-value: nan)\no_beans (2025): Levene's Test passed (p-value: 0.1579)\no_cabbage (2025): Levene's Test failed (p-value: 0.0003)\no_carrots (2025): Levene's Test passed (p-value: 0.2106)\no_eggs (2025): Levene's Test failed (p-value: 0.0065)\no_garlic (2025): Levene's Test passed (p-value: 0.3786)\no_meat_beef_chops (2025): Levene's Test passed (p-value: 0.6147)\no_meat_chicken_whole (2025): Levene's Test passed (p-value: 0.3767)\no_meat_pork (2025): Levene's Test passed (p-value: 0.7053)\no_onions (2025): Levene's Test passed (p-value: 0.0670)\no_potatoes (2025): Levene's Test passed (p-value: 0.3549)\no_rice (2025): Levene's Test passed (p-value: 0.8169)\no_tomatoes (2025): Levene's Test passed (p-value: 0.4508)\nonions (2025): Levene's Test failed (p-value: nan)\npotatoes (2025): Levene's Test failed (p-value: nan)\nrice (2025): Levene's Test failed (p-value: nan)\ntomatoes (2025): Levene's Test failed (p-value: nan)\n\n\nusing Levene’s test, all regions per item and year failed to show homogeneity in their Variances\nThis means the use of Kruskall-Wallis test for this dataset.\n\n# Group the data by 'year', 'Food_Items', and 'Region' and collect prices into lists\ngrouped_data = df_melted.groupby(['year', 'Food_Items', 'Region'])['Price'].apply(list).reset_index()\n\n# Get unique combinations of 'year' and 'Food_Items'\nunique_combinations = grouped_data.groupby(['year', 'Food_Items'])\n\n# Perform Kruskal-Wallis test for each combination of year and food item across regions\nresults = []\n\nfor (year, food_item), group in unique_combinations:\n    # Extract price data for each region\n    price_groups = [prices for prices in group['Price']]\n    \n    # Check if there are at least two regions to compare\n    if len(price_groups) &gt; 1:\n        # Perform Kruskal-Wallis test\n        stat, p_value = kruskal(*price_groups)\n        results.append({\n            'Year': year,\n            'Food_Item': food_item,\n            'H-statistic': stat,\n            'p-value': p_value,\n            'Result': 'Significant' if p_value &lt; 0.05 else 'Not Significant'\n        })\n    else:\n        results.append({\n            'Year': year,\n            'Food_Item': food_item,\n            'H-statistic': None,\n            'p-value': None,\n            'Result': 'Not enough regions to test'\n        })\n\n# Convert results into a DataFrame for better visualization\nresults_df = pd.DataFrame(results)\n\n# Display the results\nresults_df.to_csv(\"hypothesis_testing_result.csv\", index=False)\n\n\n\nupon checking the results, all of the regions per year and item have significant differences, which means that the prices of every item in the region per year are different, which may be due to various reasons like seasonality, transportation, and agricultural reasons."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "My Portfolio",
    "section": "",
    "text": "Hi! I am Neil, a Chemist transitioning into Data Analysis with a strong foundation in analytical thinking and problem-solving. With experience in creating dashboards, data visualization, and Python development, I bring a unique blend of scientific expertise and technical skills to data-driven decision-making. I have passed SQL certification exams on both DataCamp and HackerRank, demonstrating my proficiency in querying and managing data. Additionally, I have experience teaching college-level subjects, showcasing my ability to communicate complex concepts effectively.\nI am proficient in Python, SQL, and Excel and enjoy building insightful dashboards that turn raw data into actionable intelligence. I also have experience developing Python applications as a hobby, reinforcing my programming and automation skills.\nBeyond my technical abilities, I am passionate about continuous learning and personal growth. I am currently learning German while also learning more about data analysis like making personal projects, further enhancing my adaptability and analytical mindset. I also enjoy reading, jogging, running, and volunteering, which help me stay engaged and balanced. As I transition into a full-time Data Analyst role, I am eager to apply my skills to real-world business challenges, leveraging data to drive impactful decisions.\nMy resume in pdf.\nThis is a repository to showcase skills, share projects and track my progress in Data Analytics / Data Science related topics."
  },
  {
    "objectID": "Portfolios.html",
    "href": "Portfolios.html",
    "title": "Portfolio",
    "section": "",
    "text": "Philippine Food Price Analysis and Visualization Project link: Click Here Full Report : Click Here\n\nGoal: To Analyze food price variations across different regions and time periods\nDescription: The main objectives include comparing average prices of the same food item across regions within a given year, examining historical price trends of specific food items within a region, and identifying regional price variations for different food items. Additionally, the project aims to develop predictive models to forecast future food prices based on historical data. Through these analyses, the project seeks to provide insights into regional pricing patterns and potential future trends in food costs.\nSkills: Data scraping/mining, Data Cleaning, Data Analysis, correlation matrices, hypothesis testing, Machine learning\nTechnologies: python, Pandas, Numpy, Scipy, Seaborn, Plotly, Pmdarima, Dash\nResults: The analysis revealed significant regional price differences, historical trends, and future projections of food prices, providing insights into market dynamics.\n\n\n\nGoal:\nDescription:\nSkills:\nTechnologies:\nResults:\n\n\n\nGoal:\nDescription:\nSkills:\nTechnologies:\nResults:\n\n\n\nGoal:\nDescription:\nSkills:\nTechnologies:\nResults:\n\n\n\nGoal:\nDescription:\nSkills:\nTechnologies:\nResults:\n\n\n\nGoal:\nDescription:\nSkills:\nTechnologies:\nResults:\n\n\n\nGoal:\nDescription:\nSkills:\nTechnologies:\nResults:\n\n\n\nGoal:\nDescription:\nSkills:\nTechnologies:\nResults:\n\n\n\nGoal:\nDescription:\nSkills:\nTechnologies:\nResults:"
  },
  {
    "objectID": "Philippine_food_price_Analysis_and_Visualization/Data/External/updater.html",
    "href": "Philippine_food_price_Analysis_and_Visualization/Data/External/updater.html",
    "title": "N. V. Decio",
    "section": "",
    "text": "import pandas as pd\nimport requests\n\n\ncsv_file = 'full_dataset.csv'\njson_url = 'https://microdata.worldbank.org/index.php/api/tables/data/fcv/wld_2021_rtfp_v02_m'\nlimit = 99\ncountry = 'Philippines'\n\n\ndef update_csv_from_json(csv_file, json_url, limit, country):\n    # Load CSV data\n    try:\n        df_csv = pd.read_csv(csv_file)\n    except FileNotFoundError:\n        print(f\"CSV file '{csv_file}' not found.\")\n        return\n\n    # Calculate offset (based on the current length of the CSV)\n    offset = len(df_csv)\n    \n    # Fetch new JSON data from the web using offset and limit\n    try:\n        response = requests.get(json_url, params={'limit': limit, 'offset': offset, 'country': country})\n        response.raise_for_status()  # Check if the request was successful\n        json_data = response.json()\n    except requests.exceptions.RequestException as e:\n        print(f\"Error fetching JSON data: {e}\")\n        return\n    \n    # Extract the metadata and data from the JSON response\n    found = json_data.get('metadata', {}).get('found', 0)\n    data = json_data.get('data', [])\n\n    # Check if there is new data to add\n    if len(data) &gt; 0:\n        df_json = pd.json_normalize(data)\n        df_csv = pd.concat([df_csv, df_json], ignore_index=True)\n\n        # Save updated CSV file\n        df_csv.to_csv(csv_file, index=False)\n        print(f\"CSV file updated with {len(df_json)} new rows. Total records: {found}\")\n    else:\n        print(\"No new data to add.\")\n\n\nupdate_csv_from_json(csv_file, json_url, limit, country)\n\nNo new data to add.\n\n\n\ndf_csv = pd.read_csv(csv_file)\nprint(len(df_csv))\n\n23653"
  }
]